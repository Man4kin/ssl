
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ПерваяЧастьИмени, ВтораяЧастьИмени;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	0 КАК Выбран,
	|	НаборыДополнительныхРеквизитовИСведений.Ссылка КАК Набор,
	|	НаборыДополнительныхРеквизитовИСведений.Наименование
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений КАК НаборыДополнительныхРеквизитовИСведений
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка ИЕРАРХИЯ
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	МассивУдаляемыхСтрок = Новый Массив;
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Справочники.НаборыДополнительныхРеквизитовИСведений.ПолучитьЧастиИмени(СтрокаДерева.Набор, ПерваяЧастьИмени, ВтораяЧастьИмени);
		
		Если Параметры.ЭтоДополнительноеСведение
		   И НЕ Справочники.НаборыДополнительныхРеквизитовИСведений.ИспользуютсяДопСведения(ПерваяЧастьИмени, ВтораяЧастьИмени) Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаДерева);
		ИначеЕсли НЕ Параметры.ЭтоДополнительноеСведение
		   И НЕ Справочники.НаборыДополнительныхРеквизитовИСведений.ИспользуютсяДопРеквизиты(ПерваяЧастьИмени, ВтораяЧастьИмени) Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаДерева);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементУдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		Дерево.Строки.Удалить(ЭлементУдаляемаяСтрока);
	КонецЦикла;
	
	ВыбранныеНаборы = Параметры.ВыбранныеНаборы;
	Для Каждого Набор Из ВыбранныеНаборы Цикл
		Стр = Дерево.Строки.Найти(Набор.Значение, "Набор", Истина);
		Если Стр <> Неопределено Тогда
			Стр.Выбран = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Дерево.Строки Цикл
		ПроверитьФлагУСтроки(Стр);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоНаборов");
	
	БылаНажатаКлавишаЗакрытия = Ложь;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьМожноЗакрытьФорму()
	
	Если Модифицированность И Не БылаНажатаКлавишаЗакрытия Тогда
		Если Вопрос(НСтр("ru = 'Отказаться от изменений?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ВыбранПриИзменении(Элемент)
	
	текДанные = Элементы.ДеревоНаборов.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если текДанные.Выбран = 2 Тогда
		текДанные.Выбран = 0;
	КонецЕсли;
	
	Строки = текДанные.ПолучитьЭлементы();
	УстановитьФлагПодчиненнымСтрокам(Строки, текДанные.Выбран);
	
	текЭлемент = текДанные.ПолучитьРодителя();
	Пока текЭлемент <> Неопределено Цикл
		
		Есть0 = Ложь;
		Есть1 = Ложь;
		Есть2 = Ложь;
		
		Для Каждого Стр Из текЭлемент.ПолучитьЭлементы() Цикл
			Есть0 = Есть0 ИЛИ (Стр.Выбран = 0);
			Есть1 = Есть1 ИЛИ (Стр.Выбран = 1);
			Есть2 = Есть2 ИЛИ (Стр.Выбран = 2);
		КонецЦикла;
		
		Если Не Есть1 И Не Есть2 Тогда
			текЭлемент.Выбран = 0;
		ИначеЕсли Не Есть2 И Не Есть0 Тогда
			текЭлемент.Выбран = 1;
		Иначе
			текЭлемент.Выбран = 2;
		КонецЕсли;
		
		текЭлемент = текЭлемент.ПолучитьРодителя();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаВыполнить()
	
	БылаНажатаКлавишаЗакрытия = Ложь;
	Если ПроверитьМожноЗакрытьФорму() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыполнить()
	
	БылаНажатаКлавишаЗакрытия = Истина;
	
	ВыбранныеНаборы = Новый СписокЗначений;
	ЗаполнитьВыбранныеНаборы(ВыбранныеНаборы, ДеревоНаборов.ПолучитьЭлементы());
	
	Если ПроверитьМожноЗакрытьФорму() Тогда
		Закрыть(ВыбранныеНаборы);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ЗаполнитьВыбранныеНаборы(ВыбранныеНаборы, Строки)
	
	Для Каждого Стр Из Строки Цикл
		подчСтроки = Стр.ПолучитьЭлементы();
		Если подчСтроки.Количество() <> 0 Тогда
			ЗаполнитьВыбранныеНаборы(ВыбранныеНаборы, подчСтроки);
		ИначеЕсли Стр.Выбран Тогда
			ВыбранныеНаборы.Добавить(Стр.Набор, Стр.Наименование);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьФлагУСтроки(СтрокаДерева)
	
	Если СтрокаДерева.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Есть0 = Ложь;
	Есть1 = Ложь;
	Есть2 = Ложь;
	
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		ПроверитьФлагУСтроки(Стр);
		Есть0 = Есть0 ИЛИ (Стр.Выбран = 0);
		Есть1 = Есть1 ИЛИ (Стр.Выбран = 1);
		Есть2 = Есть2 ИЛИ (Стр.Выбран = 2);
	КонецЦикла;
	
	Если Не Есть1 И Не Есть2 Тогда
		СтрокаДерева.Выбран = 0;
	ИначеЕсли Не Есть2 И Не Есть0 Тогда
		СтрокаДерева.Выбран = 1;
	Иначе
		СтрокаДерева.Выбран = 2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагПодчиненнымСтрокам(Строки, Флаг)
	
	Для Каждого Стр Из Строки Цикл
		Стр.Выбран = Флаг;
		УстановитьФлагПодчиненнымСтрокам(Стр.ПолучитьЭлементы(), Флаг)
	КонецЦикла;
	
КонецПроцедуры
