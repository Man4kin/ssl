
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Настройки = РегламентныеЗаданияСервер.ПолучитьНастройкиОбработкиРегламентныхЗаданий();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Настройки);
	
	Если НЕ ПравоДоступа("Администрирование", Метаданные) Тогда
		Элементы.БлокировкаОбработкиРегламентныхЗаданий.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий.Видимость = НЕ Параметры.СкрытьКомандуОткрытияОтдельногоСеанса;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		КодВозврата = Вопрос(НСтр("ru = 'Записать изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Если КодВозврата = КодВозвратаДиалога.Да Тогда
			ЗаписатьИзменения();
		ИначеЕсли КодВозврата = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданийВыполнить()
	
	ПодключитьОбработчикОжидания("ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданийЧерезОбработчикОжидания", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	ЗаписатьИзменения();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодУведомленияОСостоянииОбработкиРегламентныхЗаданийПриИзменении(Элемент)
	
	Если ПериодУведомленияОСостоянииОбработкиРегламентныхЗаданий <= 0 Тогда
		ПериодУведомленияОСостоянииОбработкиРегламентныхЗаданий = 1;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции формы
//

&НаКлиенте
Процедура ЗаписатьИзменения()
	
	ЗаписатьИзмененияНаСервере();
	Модифицированность = Ложь;
	РегламентныеЗаданияКлиент.ОтключитьГлобальныйОбработчикОжидания("УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий");
	Если УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий Тогда
		РегламентныеЗаданияКлиент.ПодключитьГлобальныйОбработчикОжидания("УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий",
		                                                                 ПериодУведомленияОСостоянииОбработкиРегламентныхЗаданий * 60,
		                                                                 Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()
	
	Настройки = РегламентныеЗаданияСервер.ПолучитьНастройкиОбработкиРегламентныхЗаданий();
	ЗаполнитьЗначенияСвойств(Настройки, ЭтаФорма);
	РегламентныеЗаданияСервер.УстановитьНастройкиОбработкиРегламентныхЗаданий(Настройки);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Настройки);
	
КонецПроцедуры

