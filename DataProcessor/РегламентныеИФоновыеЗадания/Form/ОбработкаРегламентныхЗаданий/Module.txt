
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодОбработки = 3;                              // Секунды.
	ОсталосьДоНачалаОбработки = ПериодОбработки + 1;  // Секунды.
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбработатьРегламентныеЗадания();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий команд и элементов формы
//

&НаКлиенте
Процедура ПрекратитьОбработкуИЗавершитьСеансВыполнить()
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции формы
//

&НаКлиенте
Процедура ОбработатьРегламентныеЗадания()
	
	Перезапустить = Ложь;
	Если НужноПрекратитьОбработку(ПараметрЗапуска, Перезапустить) Тогда
		Закрыть(?(Перезапустить, "Перезапустить", Неопределено));
	Иначе
		ОсталосьДоНачалаОбработки = ОсталосьДоНачалаОбработки - 1;
		Если ОсталосьДоНачалаОбработки <= 0 Тогда
			
			ОсталосьДоНачалаОбработки = ПериодОбработки;
			
			СтрокаСостояния = НСтр("ru = 'Выполняется обработка, дождитесь завершения... '");
			ОбновитьОтображениеДанных();
			
			РегламентныеЗаданияСервер.ОбработатьРегламентныеЗадания();
			
		КонецЕсли;
	КонецЕсли;
	
	// Если пользователь нажал CTRL+BREAK тогда прекратим обработку
	ПодключитьОбработчикОжидания("ПрекратитьОбработкуИЗавершитьСеансВыполнить", 1, Истина);
	ОбработкаПрерыванияПользователя();
	ОтключитьОбработчикОжидания("ПрекратитьОбработкуИЗавершитьСеансВыполнить");
	
	ПодключитьОбработчикОжидания("ОбработатьРегламентныеЗадания", 1, Истина);
	СтрокаСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	                    НСтр("ru = 'До начала обработки осталось секунд: %1'"), Строка(ОсталосьДоНачалаОбработки) );
	
КонецПроцедуры

&НаСервере
Функция НужноПрекратитьОбработку(ПараметрЗапуска, Перезапустить)
	
	Перезапустить = КонфигурацияБазыДанныхИзмененаДинамически();
	
	Возврат Перезапустить ИЛИ
	        РегламентныеЗаданияСервер.РодительскийСеансЗаданИЗавершен(ПараметрЗапуска) ИЛИ
	        НЕ РегламентныеЗаданияСервер.ТекущийСеансОбрабатываетЗадания();
	
КонецФункции
