////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнтервалВремениВыполнения = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("АвтоматическоеИзвлечениеТекстов", "ИнтервалВремениВыполнения");
	Если ИнтервалВремениВыполнения = 0 Тогда
		ИнтервалВремениВыполнения = 60;
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("АвтоматическоеИзвлечениеТекстов", "ИнтервалВремениВыполнения",  ИнтервалВремениВыполнения);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
#Если ВебКлиент Тогда
	Отказ = Истина;
	Предупреждение(НСтр("ru = 'В Веб-клиенте извлечение текстов не поддерживается.'"));
	Возврат;
#КонецЕсли
	
	ПрогнозируемоеВремяНачалаИзвлечения = ТекущаяДата() + ИнтервалВремениВыполнения;
	ПодключитьОбработчикОжидания("ИзвлечениеТекстовКлиент", ИнтервалВремениВыполнения);
	
	ПодключитьОбработчикОжидания("ОбновлениеОбратногоОтсчета", 1);
	ОбновлениеОбратногоОтсчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалВремениВыполненияПриИзменении(Элемент)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("АвтоматическоеИзвлечениеТекстов", "ИнтервалВремениВыполнения",  ИнтервалВремениВыполнения);
	ОтключитьОбработчикОжидания("ИзвлечениеТекстовКлиент");
	ПрогнозируемоеВремяНачалаИзвлечения = ТекущаяДата() + ИнтервалВремениВыполнения;
	ПодключитьОбработчикОжидания("ИзвлечениеТекстовКлиент", ИнтервалВремениВыполнения);
	ОбновлениеОбратногоОтсчета();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики команд формы
//

&НаКлиенте
Процедура ЗапуститьСейчас(Команда)
#Если НЕ ВебКлиент Тогда
	ИзвлечениеТекстовКлиент();
#КонецЕсли
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Служебные
//

&НаСервереБезКонтекста
Процедура ЗаписьЖурналаРегистрацииСервер(ТекстСообщения)
	
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Извлечение текста файла'"), УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
	
КонецПроцедуры

// Обновляет обратный отсчет
//
&НаКлиенте
Процедура ОбновлениеОбратногоОтсчета()
	
	Осталось = ПрогнозируемоеВремяНачалаИзвлечения - ТекущаяДата();
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'До начала извлечения текстов осталось %1 сек'"), 
							Осталось);
	
	Если Осталось <= 1 Тогда
		ТекстСообщения = "";
	КонецЕсли;
	
	ИнтервалВремениВыполнения = Элементы.ИнтервалВремениВыполнения.ТекстРедактирования;
	Статус = ТекстСообщения;
	
КонецПроцедуры

#Если НЕ ВебКлиент Тогда
// Извлекает текст из файлов на диске на клиенте
&НаКлиенте
Процедура ИзвлечениеТекстовКлиент()
	
	ПрогнозируемоеВремяНачалаИзвлечения = ТекущаяДата() + ИнтервалВремениВыполнения;
	
	Состояние(НСтр("ru = 'Начато извлечение текста'"));
	
	Попытка
		
		МассивФайлов = ПолучитьФайлыДляИзвлеченияТекста();
		
		Если МассивФайлов.Количество() = 0 Тогда
			Состояние(НСтр("ru = 'Нет файлов для извлечения текста'"));
			Возврат;
		КонецЕсли;
		
		Для Индекс = 0 По МассивФайлов.Количество() - 1 Цикл
			
			Расширение = МассивФайлов[Индекс].Расширение;
			ФайлИлиВерсияФайла = МассивФайлов[Индекс].Ссылка;
			
			АдресФайла = ФайловыеФункцииПереопределяемый.ПолучитьНавигационнуюСсылкуФайла(ФайлИлиВерсияФайла, УникальныйИдентификатор);
			
			Прогресс = Индекс * 100 / МассивФайлов.Количество();
			Состояние(НСтр("ru = 'Идет извлечение текста файла'"), Прогресс, Строка(ФайлИлиВерсияФайла));
			
			ФайловыеФункцииКлиент.ИзвлечьТекстВерсии(ФайлИлиВерсияФайла, АдресФайла, Расширение, УникальныйИдентификатор);
		КонецЦикла;
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								 НСтр("ru = 'Извлечение текста завершено. Обработано файлов: %1'"), 
								 МассивФайлов.Количество());
		Состояние(ТекстСообщения);
		
	Исключение
		
		ОписаниеОшибкиИнфо = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Во время извлечения текста из файла ""%1"" произошла неизвестная ошибка.'"), 
								Строка(ФайлИлиВерсияФайла));
								
		ТекстСообщения = ТекстСообщения + Строка(ОписаниеОшибкиИнфо);
		
		Состояние(ТекстСообщения);
		
		// запись в журнал регистрации
		ЗаписьЖурналаРегистрацииСервер(ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры
#КонецЕсли

&НаСервереБезКонтекста
Функция ПолучитьФайлыДляИзвлеченияТекста()
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ФайловыеФункцииПереопределяемый.ПолучитьТекстЗапроса();
	
	Для Каждого Строка Из Запрос.Выполнить().Выгрузить() Цикл
		Результат.Добавить(Новый Структура("Ссылка, Расширение", Строка.Ссылка, Строка.Расширение));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
