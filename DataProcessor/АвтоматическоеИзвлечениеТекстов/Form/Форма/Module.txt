&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнтервалВремениВыполнения = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("АвтоматическоеИзвлечениеТекстов", "ИнтервалВремениВыполнения");
	Если ИнтервалВремениВыполнения = 0 Тогда
		ИнтервалВремениВыполнения = 60;
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("АвтоматическоеИзвлечениеТекстов", "ИнтервалВремениВыполнения",  ИнтервалВремениВыполнения);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		Отказ = Истина;
		Предупреждение(НСтр("ru = 'В Веб-клиенте извлечение текстов не поддерживается.'"));
		Возврат;
	#КонецЕсли
	
	ПрогнозируемоеВремяНачалаИзвлечения = ТекущаяДата() + ИнтервалВремениВыполнения;
	ПодключитьОбработчикОжидания("ИзвлечениеТекстовКлиент", ИнтервалВремениВыполнения);
	
	ПодключитьОбработчикОжидания("ОбновлениеОбратногоОтсчета", 1);
	ОбновлениеОбратногоОтсчета();
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалВремениВыполненияПриИзменении(Элемент)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("АвтоматическоеИзвлечениеТекстов", "ИнтервалВремениВыполнения",  ИнтервалВремениВыполнения);
	ОтключитьОбработчикОжидания("ИзвлечениеТекстовКлиент");
	ПрогнозируемоеВремяНачалаИзвлечения = ТекущаяДата() + ИнтервалВремениВыполнения;
	ПодключитьОбработчикОжидания("ИзвлечениеТекстовКлиент", ИнтервалВремениВыполнения);
	ОбновлениеОбратногоОтсчета();
КонецПроцедуры

// обновляет обратный отсчет
&НаКлиенте
Процедура ОбновлениеОбратногоОтсчета()
	
	Осталось = ПрогнозируемоеВремяНачалаИзвлечения - ТекущаяДата();
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							 НСтр("ru = 'До начала извлечения текстов осталось %1 сек'"), 
							 Осталось);
							 
	Если Осталось <= 1 Тогда
		ТекстСообщения = "";
	КонецЕсли;
	
	ИнтервалВремениВыполнения = Элементы.ИнтервалВремениВыполнения.ТекстРедактирования;
	Статус = ТекстСообщения;
	
КонецПроцедуры

// Извлекает текст из файлов на диске на клиенте
&НаКлиенте
Процедура ИзвлечениеТекстовКлиент()
	#Если НЕ ВебКлиент Тогда
	
	ПрогнозируемоеВремяНачалаИзвлечения = ТекущаяДата() + ИнтервалВремениВыполнения;
	
	ИмяСРасширениемФайла = "";	
	
	Состояние(НСтр("ru = 'Начато извлечение текста'"));
	
	Попытка	
		МассивВерсий = РаботаСФайлами.ПолучитьМассивВерсийДляИзвлеченияТекста();
		
		Если МассивВерсий.Количество() = 0 Тогда
			Состояние(НСтр("ru = 'Нет файлов для извлечения текста'"));
			Возврат;
		КонецЕсли;
		
		Для Индекс = 0 По МассивВерсий.Количество() - 1 Цикл
			
			ВерсияСсылка = МассивВерсий[Индекс];
			
			СтруктураВозврата = РаботаСФайлами.ПолучитьДанныеФайлаИНавигационнуюСсылкуВерсии(, ВерсияСсылка, УникальныйИдентификатор);
			ДанныеФайла = СтруктураВозврата.ДанныеФайла;
			АдресФайла = СтруктураВозврата.НавигационнаяСсылкаВерсии;
			
			Если ДанныеФайла.СтатусИзвлеченияТекста <> "НеИзвлечен" Тогда
				
				// для варианта с хранением файлов на диске (на сервере) удаляем Файл из временного хранилища после получения
				Если ЭтоАдресВременногоХранилища(АдресФайла) Тогда
					УдалитьИзВременногоХранилища(АдресФайла);
				КонецЕсли;
				
				Продолжить; // другой клиент уже обработал файл
			КонецЕсли;	
			
			ИмяСРасширением = ФайловыеФункцииКлиент.ПолучитьИмяСРасширением(ДанныеФайла.ПолноеНаименованиеВерсии, ДанныеФайла.Расширение);
			ИмяСРасширениемФайла = ИмяСРасширением;
			Прогресс = Индекс * 100 / МассивВерсий.Количество();									 
			Состояние(НСтр("ru = 'Идет извлечение текста файла'"), Прогресс, ИмяСРасширением);
			Расширение = ДанныеФайла.Расширение;
			
			ФайловыеФункцииКлиент.ИзвлечьТекстВерсии(ВерсияСсылка, АдресФайла, Расширение, УникальныйИдентификатор);
		КонецЦикла;
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								 НСтр("ru = 'Извлечение текста завершено. Обработано файлов: %1'"), 
								 МассивВерсий.Количество());
		Состояние(ТекстСообщения);								 
		
	Исключение
		
		ОписаниеОшибкиИнфо = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								 НСтр("ru = 'Во время извлечения текста из файла ""%1"" произошла неизвестная ошибка.'"), 
								 ИмяСРасширениемФайла);
		ТекстСообщения = ТекстСообщения + Строка(ОписаниеОшибкиИнфо);
		Состояние(ТекстСообщения);
		
		// запись в журнал регистрации
		ЗаписьЖурналаРегистрацииСервер(ТекстСообщения);
		
	КонецПопытки;
	
	#КонецЕсли
КонецПроцедуры


&НаСервере
Процедура ЗаписьЖурналаРегистрацииСервер(ТекстСообщения)
	
	ЗаписьЖурналаРегистрации("Извлечение текста файла", 
		УровеньЖурналаРегистрации.Ошибка, , ,
		ТекстСообщения);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗапуститьСейчас(Команда)
	ИзвлечениеТекстовКлиент();
КонецПроцедуры

