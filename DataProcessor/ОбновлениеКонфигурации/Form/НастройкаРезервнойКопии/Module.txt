////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьСостояниеЭлементовУправления();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПолеКаталогРезервнойКопииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Каталог = ОбновлениеКонфигурацииКлиент.ПолучитьКаталогФайла(Объект.ИмяКаталогаРезервнойКопииИБ);
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.Заголовок = "Выбор каталога резервной копии ИБ";
	
	Если Диалог.Выбрать() Тогда
		Объект.ИмяКаталогаРезервнойКопииИБ = Диалог.Каталог;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьРезервнуюКопиюПриИзменении(Элемент)
	ОбновитьСостояниеЭлементовУправления();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	Отказ = Ложь;
	Если Объект.СоздаватьРезервнуюКопию = 1 Тогда
		Файл	= Новый Файл(Объект.ИмяКаталогаРезервнойКопииИБ);
		Отказ	= НЕ Файл.Существует() ИЛИ НЕ Файл.ЭтоКаталог();
		Если Отказ Тогда
			Предупреждение("Укажите существующий каталог для сохранения резервной копии ИБ.");
			ТекущийЭлемент = Элементы.ПолеКаталогРезервнойКопии;
		КонецЕсли; 
	КонецЕсли;
	Если Не Отказ Тогда
		Закрыть(Новый Структура(	"СоздаватьРезервнуюКопию, ИмяКаталогаРезервнойКопииИБ, ВосстанавливатьИнформационнуюБазу",
									Объект.СоздаватьРезервнуюКопию,
									Объект.ИмяКаталогаРезервнойКопииИБ,
									Объект.ВосстанавливатьИнформационнуюБазу));
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

&НаКлиенте
Процедура ОбновитьСостояниеЭлементовУправления()
	
	Элементы.ПолеКаталогРезервнойКопии.АвтоОтметкаНезаполненного	= (Объект.СоздаватьРезервнуюКопию = 1);
	Элементы.ПолеКаталогРезервнойКопии.Доступность					= (Объект.СоздаватьРезервнуюКопию = 1);
	ИнфоСтраницы													= Элементы.ПанельИнформация.ПодчиненныеЭлементы;
	Если Объект.СоздаватьРезервнуюКопию = 0 Тогда
		Объект.ВосстанавливатьИнформационнуюБазу = Ложь;
		Элементы.ПанельИнформация.ТекущаяСтраница					= ИнфоСтраницы.БезОтката;
	ИначеЕсли Объект.СоздаватьРезервнуюКопию = 1 Тогда
		Элементы.ПанельИнформация.ТекущаяСтраница					= ИнфоСтраницы.РучнойОткат;
		ОбновитьНадписьРучногоОтката();
	ИначеЕсли Объект.СоздаватьРезервнуюКопию = 2 Тогда
		Объект.ВосстанавливатьИнформационнуюБазу = Истина;
		Элементы.ПанельИнформация.ТекущаяСтраница					= ИнфоСтраницы.АвтоматическийОткат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВосстанавливатьИнформационнуюБазуПриИзменении(Элемент)
	ОбновитьНадписьРучногоОтката();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписьРучногоОтката()
	СтраницыНадписи = Элементы.СтраницыНадписиРучногоОтката.ПодчиненныеЭлементы;
	Элементы.СтраницыНадписиРучногоОтката.ТекущаяСтраница = ?(Объект.ВосстанавливатьИнформационнуюБазу,
																	СтраницыНадписи.Восстанавливать,
																	СтраницыНадписи.НеВосстанавливать);
КонецПроцедуры

