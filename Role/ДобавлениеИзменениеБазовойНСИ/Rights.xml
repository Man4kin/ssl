<?xml version="1.0" encoding="UTF-8"?>
<Rights xmlns="http://v8.1c.ru/8.2/roles" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Rights">
	<setForNewObjects>false</setForNewObjects>
	<setForAttributesByDefault>true</setForAttributesByDefault>
	<independentRightsOfChildObjects>false</independentRightsOfChildObjects>
	<object>
		<name>InformationRegister.НаборыЗначенийДоступа</name>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.Command.ПраваДоступа</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.КурсыВалют</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ТаблицыГруппДоступа</name>
	</object>
	<object>
		<name>InformationRegister.КалендарныеГрафики</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ВводАдреса</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Календари</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Валюты</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ЗначенияГруппДоступа</name>
	</object>
	<object>
		<name>InformationRegister.АдресныеСокращения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АдресныйКлассификатор</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Configuration.БиблиотекаСтандартныхПодсистем</name>
		<right>
			<name>AllFunctionsMode</name>
			<value>true</value>
		</right>
		<right>
			<name>SaveUserData</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Command.ПроверкаУчетнойЗаписи</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ПоискПоИндексу</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьДополнительныеРеквизитыИСведения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыДокументовФизическихЛиц</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоставГруппПользователей</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.ПраваДоступа</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ВерсииОбъектовАдресногоКлассификатора</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.ДополнительныеСведения</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа</name>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ВидыДоступа</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ГруппыЗначенийДоступа</name>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа</name>
	</object>
	<object>
		<name>DataProcessor.ЗагрузкаКурсовВалют</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.РедактированиеЗначенийСвойств</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<restrictionTemplate>
		<name>ПоНаборамЗначений</name>
		<condition>// ПоНаборамЗначений ( Таблица, Право, Модификатор, ВладелецНаборов).
// № параметра:              1,     2,           3,               4 .
// Читается так: "ограничение доступа по наборам значений".
// Параметры:
//     Таблица -   Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Право     - Одна из строк "Чтение", "Добавление", "Изменение", "Удаление".
//     Модификатор - изменяет шаблон.
//                 1-й модификтор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника. 
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     ВладелецНаборов - имя поля, содержащего ссылку на объект-владелец
//                 наборов значений доступа в регистре сведений НаборыЗначенийДоступа.
//                  Если имя поля не задано, считается, что проверяется сам объект-владелец
//                 наборов значений доступа, который имеет табличную часть &lt;Таблица&gt;.НаборыЗначенийДоступа.
//                  Эта табличная часть применяется, когда Право - "Добавление" или "Изменение".
//                 Табличная часть точно такая, как РегистрСведений.НаборыЗначенийДоступа
//                 без измерения Объект и без реквизитов, которые используются для повышения производительности.
//                  Для журналов документов нужно указать "Ссылка".
//
// Пример1: ПоНаборамЗначений("Документ.КорректировкаДенежныхСредств", "Чтение", "", ""         )
// Пример2: ПоНаборамЗначений("Документ.ПоступлениеТоваровИУслуг",     "Чтение", "", ""         )
// Пример3: ПоНаборамЗначений("ЖурналДокументов.СкладскиеДокументы",   "Чтение", "", "Ссылка"   )
// Пример4: ПоНаборамЗначений("Справочник.ВложенияЭлектронныхПисем",   "Чтение", "", "Владелец" )

// Проверка правильности параметра Модификатор.
#Если НЕ ("#Параметр(3)" = "НеОграничиватьДоступКГруппам" ИЛИ "#Параметр(3)" = "") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	НеверныйМодификатор: #Параметр(3)
#КонецЕсли
// Проверка правильности параметра Право.
#Если НЕ ("#Параметр(2)" = "Чтение"    ИЛИ "#Параметр(2)" = "Добавление" ИЛИ
          "#Параметр(2)" = "Изменение" ИЛИ "#Параметр(2)" = "Удаление") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	НеверноеПраво: #Параметр(2)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей.
#Если НЕ &amp;ОграничиватьДоступПоВиду = "" #Тогда

Т ГДЕ // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" #Тогда
	Т.ЭтоГруппа ИЛИ
#КонецЕсли

Истина В
(	// Проверка права пользователя на текущую таблицу в целом.
	// Права на таблицы формируются по составу ролей профиля группы доступа.
	Выбрать Первые 1 Истина
	ИЗ
	(
		Выбрать РАЗЛИЧНЫЕ
			ТаблицыГруппДоступа.ГруппаДоступа
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
			ПО
				  ТаблицыГруппДоступа.Таблица = "#Параметр(1)"
			#Если НЕ "#Параметр(2)" = "Чтение" #Тогда
				И ТаблицыГруппДоступа.#Параметр(2)
			#КонецЕсли
			#Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
				И ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
				И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
			#Иначе
				И ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
				И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийВнешнийПользователь
			#КонецЕсли
				И ПользователиИГруппыПользователей.ГруппаДоступа   = ТаблицыГруппДоступа.Пользователь
	) КАК ТаблицыГруппДоступа
	ГДЕ
		Истина В
  (
			Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
		#Если "#Параметр(4)" = "" И ("#Параметр(2)" = "Добавление" ИЛИ "#Параметр(2)" = "Изменение") #Тогда
			ИЗ #Параметр(1).НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Ссылка = Т.Ссылка
		#Иначе 
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
			#Если "#Параметр(4)" = "" #Тогда
				  НомераНаборов.Объект = Т.Ссылка
			#Иначе
				  НомераНаборов.Объект = Т.#Параметр(4)
			#КонецЕсли
		#КонецЕсли
				И НомераНаборов.#Параметр(2)
				И НЕ Ложь В
	(
		Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
	#Если "#Параметр(4)" = "" И ("#Параметр(2)" = "Добавление" ИЛИ "#Параметр(2)" = "Изменение") #Тогда
		ИЗ #Параметр(1).НаборыЗначенийДоступа КАК НаборыЗначений
		ГДЕ
			  НаборыЗначений.Ссылка      = Т.Ссылка
	#Иначе
		ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
		ГДЕ
		#Если "#Параметр(4)" = "" #Тогда
			  НаборыЗначений.Объект      = Т.Ссылка
		#Иначе
			  НаборыЗначений.Объект      = Т.#Параметр(4)
		#КонецЕсли
	#КонецЕсли
			И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
			И НЕ
		(
			Выбор
			// Проверка заведомого ложного или заведомо истинного однострочного набора значений.
			Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
			Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
			// Проверка отключения ограничения по виду доступа.
			Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
			Тогда Истина
			// Проверка права доступа пользователя к таблице ЗначенияДоступа.
		#Если "#Параметр(4)" = "" И ("#Параметр(2)" = "Добавление" ИЛИ "#Параметр(2)" = "Изменение") #Тогда
			Когда НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
			                                    Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
			                                    Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)  )
			Тогда Истина В
				(	Выбрать Первые 1 Истина
					ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
					ГДЕ
						  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ТаблицыГруппДоступа.ГруппаДоступа
						И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
						И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
						                                ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
						                                ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
				)
		#Иначе
			Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
			Тогда Истина В
				(	Выбрать Первые 1 Истина
					ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
					ГДЕ
						  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
						И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
						И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
						                                ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
						                                ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
				)
		#КонецЕсли
	#Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
		#Если "#Параметр(4)" = "" И ("#Параметр(2)" = "Добавление" ИЛИ "#Параметр(2)" = "Изменение") #Тогда
			Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаЧерезПраваПоЗначениямДоступа)
		#Иначе
			Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
		#КонецЕсли
			Тогда
				(
				 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
					(
					Выбрать Истина
					ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
					ГДЕ
						  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
						И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
						И Виды.ТолькоВидДоступа = Истина
					)
				ИЛИ
					Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						Выбрать Первые 1 Истина
						ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
							Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
							ПО
								  ИерархияЗначений.ИспользоватьПраваСсылки
								И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
								И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
								И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
								И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
								И ПраваПоЗначениям.#Параметр(2)
								И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
							Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
							ПО
							#Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
								  ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
								И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
							#Иначе
								  ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
								И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийВнешнийПользователь
							#КонецЕсли
								И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
						)
					И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						Выбрать Первые 1 Ложь
						ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
							Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
							ПО
								  ИерархияЗначений.ИспользоватьПраваСсылки
								И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
								И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
								И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
								И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
								И ПраваПоЗначениям.#Параметр(2)Запрещено
								И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
							Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
							ПО
							#Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
								  ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
								И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
							#Иначе
								  ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
								И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийВнешнийПользователь
							#КонецЕсли
								И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
						)
				)
	#КонецЕсли
			Иначе
		#Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
		      НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
				(
				// Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
			#Если "#Параметр(4)" = "" И ("#Параметр(2)" = "Добавление" ИЛИ "#Параметр(2)" = "Изменение") #Тогда
				НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаЕдинственныеДляТипаЗначенияДоступа)
			#Иначе
				НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
			#КонецЕсли
				// Проверка наличия вида доступа у значения доступа.
				ИЛИ НЕ Истина В
					(
					Выбрать Первые 1 Истина 
					ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
					ГДЕ
						  ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
						И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
						И ВидыЗначений.ТолькоВидДоступа = Истина
					)
				)
				И
		#КонецЕсли
				Выбор
				Когда
			#Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
			      И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
					
					НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
					И Истина В
					(
					Выбрать Первые 1 Истина
					ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
					ГДЕ
						  ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
						И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
						И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
					)
					ИЛИ
			#ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
			           И НЕ &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
					
					НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
					И Истина В
					(
					Выбрать Первые 1 Истина
					ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
					ГДЕ
						  ПользователиИГруппыПользователей.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
						И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийВнешнийПользователь
						И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
					)
					ИЛИ
			#КонецЕсли
				#Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
					  &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
					Выбор
					Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
						(
						Выбрать Истина
						ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
						ГДЕ
							  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
							И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
							И Значения.ТолькоВидДоступа = Ложь
							И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
						)
					Тогда Истина
					Иначе Ложь
					Конец
				#Иначе
					Выбор
				  #Если "#Параметр(4)" = "" И ("#Параметр(2)" = "Добавление" ИЛИ "#Параметр(2)" = "Изменение") #Тогда
					Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезГруппЗначенияДоступа)
				  #Иначе
					Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
				  #КонецЕсли
					Тогда
						Выбор
						Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
							(
							Выбрать Истина
							ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ГДЕ
								  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
								И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
								И Значения.ТолькоВидДоступа = Ложь
								И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
							)
						Тогда Истина
						Иначе Ложь
						Конец
					Иначе
						Выбор
						Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
							(
							Выбрать Первые 1 Истина
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
									И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
									И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
									И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
									И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
									И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
							)
						Тогда Истина
						Иначе Ложь
						Конец
					Конец
				#КонецЕсли
					=
					Выбор
					Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
						(
						Выбрать Истина
						ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
						ГДЕ
							  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
							И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
							И Виды.ТолькоВидДоступа = Истина
						)
					Тогда Истина
					Иначе Ложь
					Конец
				Тогда Истина
				Иначе Ложь
				Конец
			Конец
		)
	)	//		НЕ Ложь В
  )
)
#КонецЕсли

</condition>
	</restrictionTemplate>
</Rights>