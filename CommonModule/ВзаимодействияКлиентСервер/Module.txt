
// Определяет, является ли переданная в функцию ссылка взаимодействием.
//
// Параметры
//  ОбъектСсылка  - Ссылка - для которой необходимо выполняется проверка.
//
// Возвращаемое значение:
//   Булево   - истина, если переданная ссылка является взаимодействием.
//
Функция ЯвляетсяВзаимодействием(ОбъектСсылка) Экспорт
	
	Возврат ТипЗнч(ОбъектСсылка) = Тип("ДокументСсылка.Встреча")
		ИЛИ ТипЗнч(ОбъектСсылка) = Тип("ДокументСсылка.ЗапланированноеВзаимодействие")
		ИЛИ ТипЗнч(ОбъектСсылка) = Тип("ДокументСсылка.ТелефонныйЗвонок")
		ИЛИ ТипЗнч(ОбъектСсылка) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее")
		ИЛИ ТипЗнч(ОбъектСсылка) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее");
	
КонецФункции

// Получает расширение для переданного имени файла.
//
// Параметры
//  ИмяФайла  - Строка - имя файла, для которого необходимо получить расширение.
//
// Возвращаемое значение:
//   Строка   - расширение, полученное из переданного имени файла.
//
Функция ПолучитьРасширениеФайла(Знач ИмяФайла) Экспорт
	
	Файл = Новый Файл(ИмяФайла);
	РасширениеФайла = ?(ПустаяСтрока(Файл.Расширение),Файл.Расширение,Прав(Файл.Расширение,СтрДлина(Файл.Расширение)-1));
	
	Возврат РасширениеФайла;
	
КонецФункции

// Получает каталог и имя файла для переданного полного имени файла.
//
// Параметры
//  ПолноеИмяФайла  - Строка - полное имя файла, из которого будут получены имя каталога и имя файла.
//  ИмяКаталога		- Строка - в данную переменную будет помещено полученное имя каталога.
//  ИмяФайла		- Строка - в данную переменную будет помещено полученное имя файла.
// 
Процедура ПолучитьКаталогИИмяФайла(Знач ПолноеИмяФайла, ИмяКаталога, ИмяФайла) Экспорт
	
	ИмяФайла = ПолноеИмяФайла;
	ИмяКаталога = "";
	
	Пока Истина Цикл
		
		Поз = Макс(Найти(ИмяФайла, "\"), Найти(ИмяФайла, "/"));
		Если Поз = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ИмяКаталога = ИмяКаталога + Лев(ИмяФайла, Поз);
		ИмяФайла = Сред(ИмяФайла, Поз+1);
		
	КонецЦикла;
	
КонецПроцедуры

// Определяет, является ли переданная в функцию ссылка контактом.
//
// Параметры
//  ОбъектСсылка  - Ссылка - для которой выполняется проверка.
//
// Возвращаемое значение:
//   Булево  - истина, если является контактом, ложь в обратном случае.
//
Функция ЯвляетсяКонтактом(ОбъектСсылка) Экспорт
	
	ОписаниеТиповВозможныхКонтактов =  Новый ОписаниеТипов(ПолучитьМассивВозможныхТиповКонтактов());
	
	Возврат ОписаниеТиповВозможныхКонтактов.СодержитТип(ТипЗнч(ОбъектСсылка)); 
	
КонецФункции

// Получает массив описания возможных контактов и формирует из него массив типов.
//
// Возвращаемое значение:
//   Массив   - содержит возможные типы контактов
//
Функция ПолучитьМассивВозможныхТиповКонтактов()
	
	МассивОписанияВозможныхКонтактов = ПолучитьМассивОписанияВозможныхКонтактов();
	
	МассивВозможныхТиповКонтактов = Новый Массив;
	
	Для каждого ЭлементМассиваОписания Из МассивОписанияВозможныхКонтактов Цикл
		
		МассивВозможныхТиповКонтактов.Добавить(ЭлементМассиваОписания.Тип);
		
	КонецЦикла;
	
	Возврат МассивВозможныхТиповКонтактов;
	
КонецФункции

// Добавляет элемент в массив структур контакта
//
// Параметры
//  МассивОписания  					- Массив 	- массив, в который будут добавлена структура описания контакта.
//  Тип 								- Тип 		- тип ссылки контакта.
//  ВозможностьИнтерактивногоСоздания 	- Булево 	- признак возможности интерактивного создания контакта из документов - взаимодействий.
//  Имя									- Строка	- имя типа контакта , как оно определено в метаданных.
//  Представление						- Строка	- представление типа контакта для отображения пользователю.
//  Иерархический                       - Булево    - признак того, является ли справочник иерархическим.
//  ЕстьВладелец						- Булево	- признак того, что у контакта есть владелец.
//  ИмяВладельца						- Строка 	- имя владельца контакта, как оно определено в метаданных.
//  ИскатьПоДомену						- Булево	- признак того, что по данному типу контакта будет осуществляться поиск по домену.
//  Связь 								- Строка    - описывает возможную связь данного контакта с другим контактом, в случае когда текущий контакт
//													  является реквизитом другого контакта. Описывается следующей строкой "ИмяТаблицы.ИмяРеквизита"	 
// 
Процедура ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов(МассивОписания, Тип, 
	ВозможностьИнтерактивногоСоздания, Имя, Представление, Иерархический, ЕстьВладелец, ИмяВладельца,
	ИскатьПоДомену, Связь) Экспорт

	  МассивОписания.Добавить(Новый Структура(
	  	"Тип,ВозможностьИнтерактивногоСоздания,Имя,Представление,Иерархический,ЕстьВладелец,ИмяВладельца,ИскатьПоДомену,Связь",
	  	Тип,ВозможностьИнтерактивногоСоздания,Имя,Представление,Иерархический,ЕстьВладелец,ИмяВладельца,ИскатьПоДомену,Связь));

КонецПроцедуры

// Возвращает описания возможных типов контактов.
// Используется, если в конфигурации определен хотя бы один тип контактов взаимодействий,
// помимо справочника Пользователи.
//
// Возвращаемое значение:
//   Массив   - массив структур, в котором описываются возможные типы контактов.
//              Каждая структура содержит описание одного типа контактов.   
//				Описание полей структуры см. в комментарии к функции
//              ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов общего модуля
//              ВзаимодействияКлиентСервер.
//
Функция ПолучитьМассивОписанияВозможныхКонтактов() Экспорт

	МассивВозможныеКонтакты = Новый Массив();
	ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов(МассивВозможныеКонтакты,
		Тип("СправочникСсылка.Пользователи"),Ложь,"Пользователи","Пользователи",Ложь,Ложь,"",Ложь,"");
		
	ВзаимодействияКлиентСерверПереопределяемый.ДополнитьМассивОписанияВозможныхКонтактов(МассивВозможныеКонтакты);
	
	Возврат МассивВозможныеКонтакты;

КонецФункции // ПолучитьСтруктуруВозможныеКонтакты()

// Проверяет, является ли переданная ссылка предметом взаимодействий.
//
// Параметры
//  ОбъектСсылка - Ссылка - ссылка, для которой выполняется проверка,
//							  является ли она ссылкой на предмет взаимодействий.
//
// Возвращаемое значение:
//   Булево   - Истина если является, Ложь в обратном случае.
//
Функция ЯвляетсяПредметом(ОбъектСсылка) Экспорт
	
	МассивТиповПредметов = ВзаимодействияКлиентСерверПереопределяемый.ПолучитьМассивТиповПредметов();
	
	Для каждого ЭлементМассива Из МассивТиповПредметов Цикл
		
		Если ТипЗнч(ОбъектСсылка) = Тип(ЭлементМассива) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции 
