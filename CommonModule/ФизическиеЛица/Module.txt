////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ПОДСИСТЕМЫ С ПРЕДЫДУЩИХ РЕЛИЗОВ

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//	Обработчики - ТаблицаЗначений	- см. описание функции НоваяТаблицаОбработчиковОбновления
//									общего модуля ОбновлениеИнформационнойБазы.
//
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "1.0.6.5";
	Обработчик.Процедура = "ФизическиеЛицаПереопределяемый.ЗаполнитьДокументыФизическихЛицПоКлассификаторуМВД";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "1.0.6.8";
	Обработчик.Процедура = "ФизическиеЛица.ПреобразоватьУдостоверенияЛичностиВДокументы";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "1.1.1.5";
	Обработчик.Процедура = "ФизическиеЛица.ЗаменитьВидыДокументовНаПредопределенные";
	
КонецПроцедуры

// Процедура заполняет справочник ДокументыФизическихЛиц по классификатору МВД.
// Для тех конфигураций, в которых в справочнике "Виды документов физических лиц" нет реквизитов.
//
Процедура ЗаполнитьДокументыФизическихЛицПоКлассификаторуМВД() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыДокументовФизическихЛиц.Наименование
	|ИЗ
	|	Справочник.ВидыДокументовФизическихЛиц КАК ВидыДокументовФизическихЛиц
	|ГДЕ
	|	(НЕ ВидыДокументовФизическихЛиц.Предопределенный)";
	СписокДокументовИБ = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Вид на жительство");
	СписокДокументов.Добавить("Временное удостоверение личности гражданина РФ");
	СписокДокументов.Добавить("Иностранный паспорт");
	СписокДокументов.Добавить("Иные документы, выдаваемые органами МВД");
	СписокДокументов.Добавить("Свидетельство о регистрации ходатайства иммигранта о признании его беженцем");
	СписокДокументов.Добавить("Свидетельство о рождении, выданное уполномоченным органом иностранного государства");
	СписокДокументов.Добавить("Справка об освобождении");
	СписокДокументов.Добавить("Удостоверение беженца");
	
	Для Каждого Док Из СписокДокументов Цикл
		Если СписокДокументовИБ.Найти(Док) = Неопределено Тогда
			ДокОбъект = Справочники.ВидыДокументовФизическихЛиц.СоздатьЭлемент();
			ДокОбъект.Наименование = Док;
			ДокОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет измерение ВидДокумента по ресурсу УдалитьВидДокумента,
// а также заполняет реквизит ЯвляетсяДокументомУдостоверяющимЛичность для существующих записей
//
Процедура ПреобразоватьУдостоверенияЛичностиВДокументы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыФизическихЛиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_Физлица
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|ГДЕ
	|	(НЕ ДокументыФизическихЛиц.УдалитьВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛиц.Период КАК Период,
	|	ДокументыФизическихЛиц.Физлицо КАК Физлицо,
	|	ДокументыФизическихЛиц.УдалитьВидДокумента КАК ВидДокумента,
	|	ДокументыФизическихЛиц.Серия,
	|	ДокументыФизическихЛиц.Номер,
	|	ДокументыФизическихЛиц.ДатаВыдачи,
	|	ДокументыФизическихЛиц.СрокДействия,
	|	ДокументыФизическихЛиц.КемВыдан,
	|	ДокументыФизическихЛиц.КодПодразделения,
	|	ВЫБОР
	|		КОГДА ДокументыФизическихЛиц.УдалитьВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЯвляетсяДокументомУдостоверяющимЛичность,
	|	ДокументыФизическихЛиц.Представление
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|ГДЕ
	|	ДокументыФизическихЛиц.Физлицо В
	|			(ВЫБРАТЬ
	|				Физлица.Физлицо
	|			ИЗ
	|				ВТ_Физлица КАК Физлица)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Физлицо,
	|	Период";
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.ДокументыФизическихЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	
	ТекстСерия				= НСтр("ru = ', серия: %1'");
	ТекстНомер				= НСтр("ru = ', № %1'");
	ТекстДатаВыдачи			= НСтр("ru = ', выдан: %1 года'");
	ТекстСрокДействия		= НСтр("ru = ', действует до: %1 года'");
	ТекстКодПодразделения	= НСтр("ru = ', № подр. %1'");
	
	Пока Выборка.СледующийПоЗначениюПоля("Физлицо") Цикл
		НаборЗаписей.Отбор.Физлицо.Установить(Выборка.Физлицо);
		
		Пока Выборка.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			Если ПустаяСтрока(Запись.Представление) И Не Запись.ВидДокумента.Пустая() Тогда
				Запись.Представление = ""
				+ Запись.ВидДокумента
				+ ?(ЗначениеЗаполнено(Запись.Серия), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСерия, Запись.Серия), "")
				+ ?(ЗначениеЗаполнено(Запись.Номер), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстНомер, Запись.Номер), "")
				+ ?(ЗначениеЗаполнено(Запись.ДатаВыдачи), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстДатаВыдачи, Формат(Запись.ДатаВыдачи,"ДФ='дд ММММ гггг'")), "")
				+ ?(ЗначениеЗаполнено(Запись.СрокДействия), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСрокДействия, Формат(Запись.СрокДействия,"ДФ='дд ММММ гггг'")), "")
				+ ?(ЗначениеЗаполнено(Запись.КемВыдан), ", " + Запись.КемВыдан, "")
				+ ?(ЗначениеЗаполнено(Запись.КодПодразделения) И Запись.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстКодПодразделения, Запись.КодПодразделения), "");
			КонецЕсли;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла;
	
КонецПроцедуры

// Заменяет ссылку на виды документов физических лиц в регистре сведений ДокументыФизическихЛиц
// на добавленные предопределенные документы
//
Процедура ЗаменитьВидыДокументовНаПредопределенные() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыФизическихЛиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|ГДЕ
	|	ДокументыФизическихЛиц.ВидДокумента.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛиц.Период КАК Период,
	|	ДокументыФизическихЛиц.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Военный билет""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ВоенныйБилет)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Военный билет офицера запаса""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ВоенныйБилетОфицераЗапаса)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Дипломатический паспорт гражданина РФ""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ДипломатическийПаспорт)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Загранпаспорт гражданина РФ""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ЗагранпаспортРФ)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Загранпаспорт гражданина СССР""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ЗагранпаспортСССР)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Паспорт гражданина РФ""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Паспорт гражданина СССР""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортСССР)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Паспорт Минморфлота""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортМинморфлота)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Паспорт моряка""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортМоряка)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Свидетельство о рождении""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении)
	|		КОГДА ДокументыФизическихЛиц.ВидДокумента.Наименование = ""Удостоверение личности офицера""
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.УдостоверениеОфицера)
	|		ИНАЧЕ ДокументыФизическихЛиц.ВидДокумента
	|	КОНЕЦ КАК ВидДокумента,
	|	ДокументыФизическихЛиц.Серия,
	|	ДокументыФизическихЛиц.Номер,
	|	ДокументыФизическихЛиц.ДатаВыдачи,
	|	ДокументыФизическихЛиц.СрокДействия,
	|	ДокументыФизическихЛиц.КемВыдан,
	|	ДокументыФизическихЛиц.КодПодразделения,
	|	ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность,
	|	ДокументыФизическихЛиц.Представление,
	|	ДокументыФизическихЛиц.УдалитьВидДокумента
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|ГДЕ
	|	ДокументыФизическихЛиц.Физлицо В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Физлица.Физлицо
	|			ИЗ
	|				ВТФизлица КАК Физлица)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Физлицо,
	|	Период";
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.ДокументыФизическихЛиц.СоздатьНаборЗаписей();
	
	Пока Выборка.СледующийПоЗначениюПоля("Физлицо") Цикл
		НаборЗаписей.Отбор.Физлицо.Установить(Выборка.Физлицо);
		
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыДокументовФизическихЛиц.Ссылка
	|ИЗ
	|	Справочник.ВидыДокументовФизическихЛиц КАК ВидыДокументовФизическихЛиц
	|ГДЕ
	|	(НЕ ВидыДокументовФизическихЛиц.Предопределенный)
	|	И (ВидыДокументовФизическихЛиц.Наименование = ""Военный билет""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Военный билет офицера запаса""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Дипломатический паспорт гражданина РФ""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Загранпаспорт гражданина РФ""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Загранпаспорт гражданина СССР""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Паспорт гражданина РФ""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Паспорт гражданина СССР""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Паспорт Минморфлота""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Паспорт моряка""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Свидетельство о рождении""
	|			ИЛИ ВидыДокументовФизическихЛиц.Наименование = ""Удостоверение личности офицера"")";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Выборка.Ссылка.ПолучитьОбъект().Удалить();
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОВЕРКА ПРАВИЛЬНОСТИ ЗАПОЛНЕНИЯ ДОКУМЕНТОВ

// Проверяет, что серия документа для переданного вида документа указана правильно.
//
// Параметры:
//	ВидДокумента - СправочникСсылка.ВидыДокументовФизическихЛиц	- вид документа, для которого необходимо
//																проверить правильность серии
//	Серия - Строка												- серия документа
//	ОбъектИлиСсылка - ЛюбаяСсылка или ЛюбойОбъект				- объект или ссылка на объект, в котором вводится серия
//	Поле - ЭлементУправляемойФормы								- элемент управляемой формы, в котором редактируется серия
//
// Возвращаемое значение:
//	Булево - результат проверки, Истина - правильно, Ложь - нет.
//
Функция СерияДокументаУказанаПравильно(ВидДокумента, Серия, ОбъектИлиСсылка, Поле) Экспорт
	
	// проверка
	Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортСССР
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.СвидетельствоОРождении Тогда
		ТипДокумента = 1;
		
	ИначеЕсли ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.УдостоверениеОфицера
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортМинморфлота
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ВоенныйБилет
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортМоряка
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ВоенныйБилетОфицераЗапаса Тогда
		ТипДокумента = 2;
		
	ИначеЕсли ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ЗагранпаспортСССР
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ДипломатическийПаспорт
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ЗагранпаспортРФ Тогда
		ТипДокумента = 3;
		
	ИначеЕсли ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ Тогда
		ТипДокумента = 4;
		
	Иначе // проверка не требуется
		ТипДокумента = 5;
		
	КонецЕсли;
	
	Серия = СокрЛП(Серия);
	
	Если ТипДокумента = 1 Тогда // паспорт СССР и свидетельство о рождении
		
		Поз = Найти(Серия, "-");
		Если Поз = 0 Тогда
			ТекстОшибки = НСтр("ru = 'Серия документа должна состоять из двух частей, разделенных символом ""-""!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
		ЧастьСерии1 = Лев(Серия, Поз - 1);
		ЧастьСерии2 = СокрЛП(Сред(Серия, Поз + 1));
		
		Поз = Найти(ЧастьСерии2, "-");
		Если Поз <> 0 Тогда
			ТекстОшибки = НСтр("ru = 'В серии документа должно быть только две группы символов!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(ЧастьСерии1) Тогда
			ТекстОшибки = НСтр("ru = 'В серии документа отсутствует числовая часть!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
			
		ИначеЕсли  ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("IVXLC1УХЛС", ЧастьСерии1, "          ")) = 0 Тогда
			ТекстОшибки = НСтр("ru = 'Числовая часть серии документа должна указываться символами 1 У Х Л С  или  I V X L C!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
			
		ИначеЕсли СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("IVXLC", ЧастьСерии1, "1УХЛС") <> СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВАрабскуюНотацию(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("IVXLC", ЧастьСерии1, "1УХЛС"))) Тогда
			ТекстОшибки = НСтр("ru = 'Числовая часть серии документа указана некорректно!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
			
		ИначеЕсли СтрДлина(ЧастьСерии2) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ", ЧастьСерии2, "                                 ")) Тогда
			ТекстОшибки = НСтр("ru = 'После разделителя ""-"" в серии документа должны быть ДВЕ pусcкие заглавные буквы!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = 2 Тогда // серия - две буквы: военный билет, ...
		Если СтрДлина(Серия) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ", Серия, "                                 ")) Тогда
			ТекстОшибки = НСтр("ru = 'В серии документа должны быть ДВЕ pусcкие заглавные буквы!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = 3 Тогда // серия - две цифры: загранпаспорта
		Если СтрДлина(Серия) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("0123456789", Серия, "          ")) Тогда
			ТекстОшибки = НСтр("ru = 'В серии документа должно быть ДВЕ цифры!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = 4 Тогда // серия - две группы цифр: новый паспорт
		Поз = Найти(Серия, " ");
		Если Поз = 0 Тогда
			ТекстОшибки = НСтр("ru = 'В серии документа должно быть две группы цифр!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
		ПерваяЧасть = Лев(Серия, Поз-1);
		ВтораяЧасть = СокрЛП(Сред(Серия, Поз+1));
		
		Поз = Найти(ВтораяЧасть, " ");
		Если Поз <> 0 Тогда
			ТекстОшибки = НСтр("ru = 'В серии документа должно быть только две группы цифр!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
		Если СтрДлина(ПерваяЧасть) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("0123456789", ПерваяЧасть, "          ")) Тогда
			ТекстОшибки = НСтр("ru = 'Первая группа символов серии документа должна содержать две цифры!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
		Если СтрДлина(ВтораяЧасть) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("0123456789", ВтораяЧасть, "          ")) Тогда
			ТекстОшибки = НСтр("ru = 'Вторая группа символов серии документа должна содержать две цифры!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Проверяет, что номер документа для переданного вида документа указан правильно.
//
// Параметры:
//	ВидДокумента - СправочникСсылка.ВидыДокументовФизическихЛиц	- вид документа, для которого необходимо
//																проверить правильность номера
//	Номер - Строка												- номер документа
//	ОбъектИлиСсылка - ЛюбаяСсылка или ЛюбойОбъект				- объект или ссылка на объект, в котором вводится номер
//	Поле - ЭлементУправляемойФормы								- элемент управляемой формы, в котором редактируется номер
//
// Возвращаемое значение:
//	Булево - результат проверки, Истина - правильно, Ложь - нет.
//
Функция НомерДокументаУказанПравильно(ВидДокумента, Номер, ОбъектИлиСсылка, Поле) Экспорт
	
	Если Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("0123456789", Номер, "          ")) Тогда
		ТекстОшибки = НСтр("ru = 'В номере документа присутствуют недопустимые символы!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
		Возврат Ложь;
	КонецЕсли;
	
	ДлинаНомера = СтрДлина(СокрЛП(Номер));
	
	Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортСССР
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.СвидетельствоОРождении
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.УдостоверениеОфицера
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортМинморфлота
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ Тогда
		Если ДлинаНомера <> 6 Тогда
			ТекстОшибки = НСтр("ru = 'Номер документа должен состоять из 6 символов!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ДипломатическийПаспорт
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ЗагранпаспортРФ Тогда
		Если ДлинаНомера <> 7 Тогда
			ТекстОшибки = НСтр("ru = 'Номер документа должен состоять из 7 символов!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ЗагранпаспортСССР
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ВоенныйБилет
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортМоряка
		ИЛИ ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ВоенныйБилетОфицераЗапаса Тогда
		Если (ДлинаНомера < 6 ) или ( ДлинаНомера > 7 ) Тогда
			ТекстОшибки = НСтр("ru = 'Номер документа должен состоять из 6 или 7 символов!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОбъектИлиСсылка, Поле);
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
