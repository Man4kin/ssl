////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ИНФОРМАЦИОННОЙ БАЗЫ

// Процедура заполняет справочник ДокументыФизическихЛиц по классификатору МВД
//
Процедура ЗаполнитьДокументыФизическихЛицПоКлассификаторуМВД() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыДокументовФизическихЛиц.Наименование
	|ИЗ
	|	Справочник.ВидыДокументовФизическихЛиц КАК ВидыДокументовФизическихЛиц
	|ГДЕ
	|	(НЕ ВидыДокументовФизическихЛиц.Предопределенный)";
	СписокДокументовИБ = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Паспорт гражданина СССР");
	СписокДокументов.Добавить("Загранпаспорт гражданина СССР");
	СписокДокументов.Добавить("Свидетельство о рождении");
	СписокДокументов.Добавить("Удостоверение личности");
	СписокДокументов.Добавить("Справка об освобождении");
	СписокДокументов.Добавить("Паспорт Минморфлота");
	СписокДокументов.Добавить("Военный билет");
	СписокДокументов.Добавить("Дипломатический паспорт гражданина РФ");
	СписокДокументов.Добавить("Иностранный паспорт");
	СписокДокументов.Добавить("Свидетельство о регистрации ходатайства иммигранта о признании его беженцем");
	СписокДокументов.Добавить("Вид на жительство");
	СписокДокументов.Добавить("Удостоверение беженца");
	СписокДокументов.Добавить("Временное удостоверение личности гражданина РФ");
	СписокДокументов.Добавить("Загранпаспорт гражданина РФ");
	СписокДокументов.Добавить("Свидетельство о рождении, выданное уполномоченным органом иностранного государства");
	СписокДокументов.Добавить("Паспорт моряка");
	СписокДокументов.Добавить("Военный билет офицера запаса");
	СписокДокументов.Добавить("Иные документы, выдаваемые органами МВД");
	
	Для Каждого Док Из СписокДокументов Цикл
		Если СписокДокументовИБ.Найти(Док) = Неопределено Тогда
			ДокОбъект = Справочники.ВидыДокументовФизическихЛиц.СоздатьЭлемент();
			ДокОбъект.Наименование = Док;
			ДокОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет измерение ВидДокумента по ресурсу УдалитьВидДокумента,
// а также заполняет реквизит ЯвляетсяДокументомУдостоверяющимЛичность для существующих записей
//
Процедура ПреобразоватьУдостоверенияЛичностиВДокументы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыФизическихЛиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_Физлица
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|ГДЕ
	|	(НЕ ДокументыФизическихЛиц.УдалитьВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛиц.Период КАК Период,
	|	ДокументыФизическихЛиц.Физлицо КАК Физлицо,
	|	ДокументыФизическихЛиц.УдалитьВидДокумента КАК ВидДокумента,
	|	ДокументыФизическихЛиц.Серия,
	|	ДокументыФизическихЛиц.Номер,
	|	ДокументыФизическихЛиц.ДатаВыдачи,
	|	ДокументыФизическихЛиц.СрокДействия,
	|	ДокументыФизическихЛиц.КемВыдан,
	|	ДокументыФизическихЛиц.КодПодразделения,
	|	ВЫБОР
	|		КОГДА ДокументыФизическихЛиц.УдалитьВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЯвляетсяДокументомУдостоверяющимЛичность,
	|	ДокументыФизическихЛиц.Представление
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|ГДЕ
	|	ДокументыФизическихЛиц.Физлицо В
	|			(ВЫБРАТЬ
	|				Физлица.Физлицо
	|			ИЗ
	|				ВТ_Физлица КАК Физлица)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Физлицо,
	|	Период";
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.ДокументыФизическихЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	
	ТекстСерия				= НСтр("ru = ', серия: %1'");
	ТекстНомер				= НСтр("ru = ', № %1'");
	ТекстДатаВыдачи			= НСтр("ru = ', выдан: %1 года'");
	ТекстСрокДействия		= НСтр("ru = ', действует до: %1 года'");
	ТекстКодПодразделения	= НСтр("ru = ', № подр. %1'");
	
	Пока Выборка.СледующийПоЗначениюПоля("Физлицо") Цикл
		НаборЗаписей.Отбор.Физлицо.Установить(Выборка.Физлицо);
		
		Пока Выборка.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			Если ПустаяСтрока(Запись.Представление) И Не Запись.ВидДокумента.Пустая() Тогда
				Запись.Представление = ""
					+ Запись.ВидДокумента
					+ ?(ЗначениеЗаполнено(Запись.Серия), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСерия, Запись.Серия), "")
					+ ?(ЗначениеЗаполнено(Запись.Номер), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстНомер, Запись.Номер), "")
					+ ?(ЗначениеЗаполнено(Запись.ДатаВыдачи), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстДатаВыдачи, Формат(Запись.ДатаВыдачи,"ДФ='дд ММММ гггг'")), "")
					+ ?(ЗначениеЗаполнено(Запись.СрокДействия), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСрокДействия, Формат(Запись.СрокДействия,"ДФ='дд ММММ гггг'")), "")
					+ ?(ЗначениеЗаполнено(Запись.КемВыдан), ", " + Запись.КемВыдан, "")
					+ ?(ЗначениеЗаполнено(Запись.КодПодразделения) И Запись.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстКодПодразделения, Запись.КодПодразделения), "");
			КонецЕсли;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла;
	
КонецПроцедуры
