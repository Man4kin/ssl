//Создает взаимодействие или предмет взаимодействия
//Параметры:
//ИмяФормыОбъекта - имя формы элемента создаваемого объекта,
//Основание - объект основание,
//Источник - форма объекта-основания
//
Процедура СоздатьВзаимодействиеИлиПредмет(ИмяФормыОбъекта, Основание, Источник) Экспорт

	ПараметрыОткрытияФормы = Новый Структура("Основание", Основание);
	Если (ТипЗнч(Основание) = Тип("ДокументСсылка.Встреча") ИЛИ  ТипЗнч(Основание) = Тип("ДокументСсылка.ЗапланированноеВзаимодействие")) 
	    И Источник.Элементы.Участники.ТекущиеДанные <> Неопределено Тогда
	    ДанныеУчастникаИсточник = Источник.Элементы.Участники.ТекущиеДанные;
	    ПараметрыОткрытияФормы.Вставить("ДанныеУчастника",Новый Структура("Контакт,КакСвязаться,Представление",
	                                                                      ДанныеУчастникаИсточник.Контакт,
	                                                                      ДанныеУчастникаИсточник.КакСвязаться,
	                                                                      ДанныеУчастникаИсточник.ПредставлениеКонтакта));	
	КонецЕсли;
	
	ОткрытьФормуМодально(ИмяФормыОбъекта, ПараметрыОткрытияФормы, Источник);

КонецПроцедуры

//Открывает форму нового документа "Электронное письмо исходящее"
// с переданными в процедуру параметрами
Процедура ОткрытьФормуОтправкиПочтовогоСообщения(знач Отправитель = Неопределено,
												знач Получатель = Неопределено,
												знач Тема = "",
												знач Текст = "",
												знач СписокФайлов = Неопределено) Экспорт
	
	ПараметрыПисьма = Новый Структура;
	
	ПараметрыПисьма.Вставить("УчетнаяЗапись", Отправитель);
	ПараметрыПисьма.Вставить("Кому", Получатель);
	ПараметрыПисьма.Вставить("Тема", Тема);
	ПараметрыПисьма.Вставить("Тело", Текст);
	ПараметрыПисьма.Вставить("Вложения", СписокФайлов);
	
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.Форма.ФормаДокумента", ПараметрыПисьма);
	
КонецПроцедуры

//Запрашивает подтверждение и обновляет индекс полнотекстового поиска данных
//
Процедура КомандаОбновитьИндексППДВыполнить(ИнформацияОбАктуальностиИндексаППД,ППДВключен,ИндексАктуален) Экспорт

	СтрВопроса = НСтр(
		"ru = 'Обновление индекса полнотекстового поиска может занять длительное время. Продолжить?'"
	);
	Если Вопрос(СтрВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	Состояние(НСтр("ru = 'Идет обновление индекса полнотекстового поиска ...'"));
	Результат = Взаимодействия.ОбновитьИндексППД(ИнформацияОбАктуальностиИндексаППД,ППДВключен,ИндексАктуален);
	Состояние();

	Если Не ПустаяСтрока(Результат) Тогда
		Предупреждение(Результат);
	КонецЕсли;

КонецПроцедуры

//Оповещает форму объекта-основания о том, что контакт создан и записан
//Параметры:
//Ссылка - ссылка на созданный контакт,
//Основание - ссылка на взаимодействие - основание
//
Процедура КонтактСоздан(Ссылка, Наименование, Основание) Экспорт

	ВозвращаемыйПараметр = Новый Структура;
	ВозвращаемыйПараметр.Вставить("Ссылка",       Ссылка);
	ВозвращаемыйПараметр.Вставить("Наименование", Наименование);
	ВозвращаемыйПараметр.Вставить("Основание",    Основание);
	Оповестить("Контакт создан",ВозвращаемыйПараметр);

КонецПроцедуры

//Открывает форму объекта-контакта заполненную по описанию участника взаимодействия
//Параметры:
//Описание - текстовое описание контакта,
//Адрес - контактная информация,
//Основание - объект, из которого создается контакт
//
Процедура СоздатьКонтакт(Описание, Адрес, Основание,ТипыКонтактов) Экспорт

	Если ТипыКонтактов.Количество() = 0 Тогда
	    Возврат;	
	КонецЕсли;
	ТипКонтакта = ТипыКонтактов.ВыбратьЭлемент("Выбор типа контакта");
	Если ТипКонтакта <> Неопределено Тогда
		ПараметрФормы = Новый Структура(
			"Основание",
			Новый Структура(
				"Наименование, Адрес, Объект",
				Описание, Адрес, Основание
			)
		);
		Если НЕ ВзаимодействияКлиентПереопределяемый.СоздатьКонтактНестандартнаяФорма(ТипКонтакта.Значение,ПараметрФормы) Тогда
			ОткрытьФормуМодально("Справочник." + ТипКонтакта.Значение + ".ФормаОбъекта", ПараметрФормы);
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры 
 
// Процедура позволяет выбрать время из выпадающего списка
//Параметры:
//Форма - форма-владелец списка,
//ПолеВводаФормы - элемент-владелец списка,
//ТекущееЗначение - значение, на которое будет спозиционирован выпадающий список,
//Интервал - интервал, с которым необходимо заполнить список, по умолчанию час
//
Функция ВыбратьВремя(Форма, ПолеВводаФормы, Знач ТекущееЗначение, Интервал = 3600) Экспорт

	НачалоРабочегоДня      = '00010101000000';
	ОкончаниеРабочегоДня   = '00010101235959';

	СписокВремен = Новый СписокЗначений;
	НачалоРабочегоДня = НачалоЧаса(НачалоДня(ТекущееЗначение) +
		Час(НачалоРабочегоДня) * 3600 +
		Минута(НачалоРабочегоДня)*60);
	ОкончаниеРабочегоДня = КонецЧаса(НачалоДня(ТекущееЗначение) +
		Час(ОкончаниеРабочегоДня) * 3600 +
		Минута(ОкончаниеРабочегоДня)*60);

	ВремяСписка = НачалоРабочегоДня;
	Пока НачалоЧаса(ВремяСписка) <= НачалоЧаса(ОкончаниеРабочегоДня) Цикл
		Если НЕ ЗначениеЗаполнено(ВремяСписка) Тогда
			ПредставлениеВремени = "00:00";
		Иначе
			ПредставлениеВремени = Формат(ВремяСписка,"ДФ=ЧЧ:мм");
		КонецЕсли;

		СписокВремен.Добавить(ВремяСписка, ПредставлениеВремени);

		ВремяСписка = ВремяСписка + Интервал;
	КонецЦикла;

	НачальноеЗначение = СписокВремен.НайтиПоЗначению(ТекущееЗначение);
	Если НачальноеЗначение = Неопределено Тогда
		ВыбранноеВремя = Форма.ВыбратьИзСписка(СписокВремен, ПолеВводаФормы);
	Иначе
		ВыбранноеВремя = Форма.ВыбратьИзСписка(СписокВремен, ПолеВводаФормы, НачальноеЗначение);
	КонецЕсли;

	Если ВыбранноеВремя = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат ВыбранноеВремя.Значение;

КонецФункции

// Обработчик для события формы ПослеЗаписиНаСервере. Вызывается для контакта.
Процедура КонтактПослеЗаписи(Форма,Объект) Экспорт
	
	 Если Форма.НеобходимоОповещение Тогда
		КонтактСоздан(Объект.Ссылка, Объект.Наименование, Форма.ОбъектОснование);
		Форма.НеобходимоОповещение = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик для события формы ПослеЗаписиНаСервере. Вызывается для взаимодействия
Процедура ВзаимодействиеПослеЗаписи(Форма,Объект) Экспорт

	//оповестить взаимодействия о создании сделки
	Если Форма.НеобходимоОповещение Тогда
		Оповестить("Создан предмет взаимодействия", Новый Структура("Основание,Предмет",Форма.ВзаимодействиеОснование,Объект.Предмет));
		Форма.НеобходимоОповещение = Ложь;
	КонецЕсли; 	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ОБРАБОТЧИКИ СОБЫТИЙ ДОКУМЕНТОВ МЕХАНИЗМА ВЗАИМОДЕЙСТВИЯ

 // Вызывает форму выбора контакта и обрабатывает результат выбора.
//
// Параметры
//  Предмет		 	- Ссылка - ссылка на предмет взаимодействия.
//  Адрес	  		- Строка - адрес контакта. 
//  Представление 	- Строка - представление контакта.
//  Контакт		 	- Ссылка - контакт.
//  ТолькоEmail 	- Булево - признак того, что при выборе контакта нас интересует только Email контакта.
//  ТолькоТелефон 	- Булево - признак того, что при выборе контакта нас интересует только телефон контакта.
//  ЗаменятьПустыеАдресИПредставление - Булево - признак того, необходимо ли заменять пустые адрес и представление контакта,
//												 если был выбран тот же контакт.
//
// Возвращаемое значение:
//   Булево   - истина, если выбор был сделан, ложь в обратном случае.
// 
Функция ВыбратьКонтакт(Предмет, Адрес, Представление, Контакт, ТолькоEmail, ТолькоТелефон, ЗаменятьПустыеАдресИПредставление) Экспорт

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Предмет",       Предмет);
	ПараметрыОткрытия.Вставить("Адрес",         Адрес);
	ПараметрыОткрытия.Вставить("Представление", Представление);
	ПараметрыОткрытия.Вставить("Контакт",       Контакт);
	ПараметрыОткрытия.Вставить("ТолькоEmail",   ТолькоEmail);
	ПараметрыОткрытия.Вставить("ТолькоТелефон", ТолькоТелефон);
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ВыборКонтакта", ПараметрыОткрытия);
	Если (ТипЗнч(Результат) = Тип("КодВозвратаДиалога")) ИЛИ (Результат = Неопределено) Тогда
		Возврат Ложь;
	КонецЕсли;

	БылИзмененКонтакт = (Контакт <> Результат) И ЗначениеЗаполнено(Контакт);
	Контакт = Результат;

	Если БылИзмененКонтакт Тогда
		Взаимодействия.ПолучитьПредставлениеИВсюКонтактнуюИнформациюКонтакта(Контакт, Представление, Адрес);
		
	ИначеЕсли ЗаменятьПустыеАдресИПредставление И (ПустаяСтрока(Адрес) ИЛИ ПустаяСтрока(Представление)) Тогда
		
		нПредставление = ""; 
		нАдрес = "";
		Взаимодействия.ПолучитьПредставлениеИВсюКонтактнуюИнформациюКонтакта(Контакт, нПредставление, нАдрес);
		
		Если ПустаяСтрока(Представление) Тогда
			Представление = нПредставление;
		КонецЕсли;
		
		Если ПустаяСтрока(Адрес) Тогда
			Адрес = нАдрес;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции
  
 // Обработка выбора поля "обработать после" в документах взаимодействиях
 //
 // Параметры
 //  ЗначениеПоля  			- Дата - значение поля "Отработать после". 
 //  ВыбранноеЗначение  	- Дата, число - либо выбранная дата, либо числовой инкремент от текущей даты.
 //  СтандартнаяОбработка  	- Булево - признак стандартной обработки обработчика события формы.
 //  Модифицированность  	- Булево - признак модифицированности формы.
 //
Процедура ОбработатьВыборВПолеОтработатьПосле(ЗначениеПоля, ВыбранноеЗначение, СтандартнаяОбработка, Модифицированность) Экспорт
	
	СтандартнаяОбработка = Ложь;
	Модифицированность = Истина;

	Если ТипЗнч(ВыбранноеЗначение) = Тип("Число") Тогда
		ЗначениеПоля = ТекущаяДата() + ВыбранноеЗначение;
	Иначе
		ЗначениеПоля = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

 // Устанавливает отбор по владельцу в динамическом списке подчиненного справочника, при активизации строки динамического списка справочника родителя.
 //
 // Параметры
 //  Элемент  		- ТаблицаФормы - таблица в которой произошло событие
 //  Форма		 	- УправляемаяФорма - форма, на которой находятся элементы.
 //
 Процедура КонтактВладелецПриАктивизацииСтроки(Элемент,Форма)  Экспорт
 
 	ИмяТаблицыБезПрефикса = Прав(Элемент.Имя,СтрДлина(Элемент.Имя)-8);       	
	ЗначениеОтбора = ?(Элемент.ТекущиеДанные = Неопределено, Неопределено, Элемент.ТекущиеДанные.Ссылка);
	
	МассивОписанияКонтактов = ВзаимодействияКлиентСервер.ПолучитьМассивОписанияВозможныхКонтактов();
	Для каждого ЭлементМассиваОписания Из МассивОписанияКонтактов  Цикл
		Если  ЭлементМассиваОписания.ИмяВладельца = ИмяТаблицыБезПрефикса Тогда
			Форма["Список_" + ЭлементМассиваОписания.Имя].Отбор.Элементы[0].ПравоеЗначение = ЗначениеОтбора;
		КонецЕсли;	
	КонецЦикла;
 
КонецПроцедуры 


 