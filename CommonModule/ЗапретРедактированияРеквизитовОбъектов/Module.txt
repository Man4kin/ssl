///////////////////////////////////////////////////////////////////////////////////////////////////
// Для функционирования подсистемы в интерактивном режиме форме объекта добавляется
// реквизит __ПараметрыЗапретаРедактирования, с типом ФиксированноеСоответствие, где
//		ключ - строка - имя реквизита
//		значение - структура:
//				БлокируемыеЭлементы - Массив - массив, строк - имен блокируемых элементов формы
//				Представление - строка - представление реквизита для пользователя
//				РазрешитьИзменение - булево - изменение реквизита разрешено
///////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////
// БЛОК ЭКСПОРТНЫХ ФУНКЦИЙ

// Процедура принимает в качестве параметра форму и для всех реквизитов,
// для которых определен механизм, блокирует их редактирование.
// Параметры:
//  Форма - управляемая форма - форма объекта, для которой применяется механизм
//  НаименованиеГруппыДляКнопкиЗапрета - если требуется поместить кнопку разрешения
//                       редактирования в специальное место - передается группа на форме
Процедура ЗаблокироватьРеквизиты(Форма,
								 НаименованиеГруппыДляКнопкиЗапрета = Неопределено) Экспорт
	
	// Проверяем, что форма подготовлена (созданы необходимые реквизиты и элементы формы)
	ФормаПодготовлена = Ложь;
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = "__ПараметрыЗапретаРедактирования" Тогда
			ФормаПодготовлена = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ФормаПодготовлена Тогда
		ПодготовитьФорму(Форма, Форма.Объект.Ссылка, НаименованиеГруппыДляКнопкиЗапрета);
	КонецЕсли;
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		РазрешитьИзменение = Истина;
	Иначе
		РазрешитьИзменение = Ложь;
	КонецЕсли;
	
	// Блокируем редактирование реквизитов
	Для Каждого ОписаниеБлокируемогоРеквизита Из Форма.__ПараметрыЗапретаРедактирования Цикл
		Для Каждого ОписаниеЭлементаФормы Из ОписаниеБлокируемогоРеквизита.БлокируемыеЭлементы Цикл
			ЭлементФормы = Форма.Элементы.Найти(ОписаниеЭлементаФормы.Значение);
			Если ЭлементФормы <> Неопределено Тогда
				Если ТипЗнч(ЭлементФормы) = Тип("ПолеФормы")
				 ИЛИ ТипЗнч(ЭлементФормы) = Тип("ТаблицаФормы") Тогда
					ЭлементФормы.ТолькоПросмотр = НЕ РазрешитьИзменение;
				Иначе
					ЭлементФормы.Доступность = РазрешитьИзменение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ОписаниеБлокируемогоРеквизита.РазрешитьИзменение = РазрешитьИзменение;
	КонецЦикла;
	
КонецПроцедуры

// Проверяет, что объект с ссылкой Ссылка ссылаются существующие объекты информационной базы.
//
Функция ПроверитьНаОбъектыИмеютсяСсылкиВИБ(знач СсылкаИлиМассивСсылок) Экспорт
	
	Если ТипЗнч(СсылкаИлиМассивСсылок) = Тип("Массив") Тогда
		МассивСсылок = СсылкаИлиМассивСсылок;
	Иначе
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(СсылкаИлиМассивСсылок);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаСсылок = НайтиПоСсылкам(МассивСсылок);
	СлужебныеОбъекты = ОбщегоНазначенияПереопределяемый.ПолучитьИсключенияПоискаСсылок();
	Исключения = Новый Массив;
	Для Каждого ОписаниеСсылки Из ТаблицаСсылок Цикл
		Если СлужебныеОбъекты.Найти(ОписаниеСсылки.Метаданные.ПолноеИмя()) <> Неопределено Тогда
			Исключения.Добавить(ОписаниеСсылки);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаИсключение Из Исключения Цикл
		ТаблицаСсылок.Удалить(СтрокаИсключение);
	КонецЦикла;
	
	Возврат ТаблицаСсылок.Количество() > 0;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////
// БЛОК ВСПОМОГАТЕЛЬНЫХ ФУНКЦИЙ

// Подготавливает форму, для подсистемы.
// Добавляется реквизит __ПараметрыЗапретаРедактирования тип ФиксированноеСоответствие (см. выше)
//
Процедура ПодготовитьФорму(Форма, Ссылка, НаименованиеГруппыДляКнопкиЗапрета = Неопределено)
	
	ОписаниеТиповСтрока100 = Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100));
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	ОписаниеТиповМассив = Новый ОписаниеТипов("СписокЗначений");
	
	// Добавляем реквизит на форму
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("__ПараметрыЗапретаРедактирования", Новый ОписаниеТипов("ТаблицаЗначений")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяРеквизита",ОписаниеТиповСтрока100, "__ПараметрыЗапретаРедактирования"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Представление",ОписаниеТиповСтрока100, "__ПараметрыЗапретаРедактирования"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РазрешитьИзменение",ОписаниеТиповБулево, "__ПараметрыЗапретаРедактирования"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("БлокируемыеЭлементы",ОписаниеТиповМассив, "__ПараметрыЗапретаРедактирования"));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	БлокируемыеРеквизиты = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка).ПолучитьБлокируемыеРеквизитыОбъекта();
	
	Для Каждого БлокируемыйРеквизит Из БлокируемыеРеквизиты Цикл
		
		ОписаниеРеквизита = Форма.__ПараметрыЗапретаРедактирования.Добавить();
		
		ИнформацияОБР = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(БлокируемыйРеквизит, ";");
		ОписаниеРеквизита.ИмяРеквизита = ИнформацияОБР[0];
		
		Если ИнформацияОБР.Количество() > 1 Тогда
			БлокируемыеЭлементы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИнформацияОБР[1], ",");
			Для Каждого БлокируемыйЭлемент Из БлокируемыеЭлементы Цикл
				ОписаниеРеквизита.БлокируемыеЭлементы.Добавить(СокрЛП(БлокируемыйЭлемент));
			КонецЦикла;
		КонецЕсли;
		
		ЗаполнитьСвязанныеЭлементы(ОписаниеРеквизита.БлокируемыеЭлементы, Форма, ОписаниеРеквизита.ИмяРеквизита);
		
		Если Ссылка.Метаданные().Реквизиты.Найти(ОписаниеРеквизита.ИмяРеквизита) <> Неопределено Тогда
			Если ЗначениеЗаполнено(Ссылка.Метаданные().Реквизиты[ОписаниеРеквизита.ИмяРеквизита].Синоним) Тогда
				Представление = Ссылка.Метаданные().Реквизиты[ОписаниеРеквизита.ИмяРеквизита].Синоним;
			Иначе
				Представление = Ссылка.Метаданные().Реквизиты[ОписаниеРеквизита.ИмяРеквизита].Имя;
			КонецЕсли;
		ИначеЕсли ЭтоСтандартныйРеквизит(Ссылка, ОписаниеРеквизита.ИмяРеквизита) Тогда
			Если ЗначениеЗаполнено(Ссылка.Метаданные().СтандартныеРеквизиты[ОписаниеРеквизита.ИмяРеквизита].Синоним) Тогда
				Представление = Ссылка.Метаданные().СтандартныеРеквизиты[ОписаниеРеквизита.ИмяРеквизита].Синоним;
			Иначе
				Представление = Ссылка.Метаданные().СтандартныеРеквизиты[ОписаниеРеквизита.ИмяРеквизита].Имя;
			КонецЕсли;
		ИначеЕсли Ссылка.Метаданные().ТабличныеЧасти.Найти(ОписаниеРеквизита.ИмяРеквизита) <> Неопределено Тогда
			Если ЗначениеЗаполнено(Ссылка.Метаданные().ТабличныеЧасти[ОписаниеРеквизита.ИмяРеквизита].Синоним) Тогда
				Представление = Ссылка.Метаданные().ТабличныеЧасти[ОписаниеРеквизита.ИмяРеквизита].Синоним;
			Иначе
				Представление = Ссылка.Метаданные().ТабличныеЧасти[ОписаниеРеквизита.ИмяРеквизита].Имя;
			КонецЕсли;
		КонецЕсли;
		
		ОписаниеРеквизита.Представление = Представление;
		
		ОписаниеРеквизита.РазрешитьИзменение = Ложь;
		
	КонецЦикла;
	
	// Команду формы добавляем только если установлена роль "РедактированиеРеквизитовОбъектов"
	Если (РольДоступна(Метаданные.Роли.РедактированиеРеквизитовОбъектов)
	 ИЛИ Пользователи.ЭтоПолноправныйПользовательИБ())
	   И ПравоДоступа("Редактирование", Ссылка.Метаданные()) Тогда
		// Добавляем команду
		Команда = Форма.Команды.Добавить("РазрешитьРедактированиеРеквизитовОбъекта");
		Команда.Заголовок = НСтр("ru = 'Разрешить редактирование реквизитов объекта'");
		Команда.Действие = "Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта";
		Команда.Картинка = БиблиотекаКартинок.РазрешитьРедактированиеРеквизитовОбъекта;
		Команда.ИзменяетСохраняемыеДанные = Ложь;
		
		// Добавляем кнопку на форму
		Если НаименованиеГруппыДляКнопкиЗапрета <> Неопределено Тогда
			РодительскаяГруппа = НаименованиеГруппыДляКнопкиЗапрета;
		Иначе
			РодительскаяГруппа = Форма.КоманднаяПанель;
		КонецЕсли;
		
		Кнопка = Форма.Элементы.Добавить("РазрешитьРедактированиеРеквизитовОбъекта", Тип("КнопкаФормы"), РодительскаяГруппа);
		Кнопка.ТолькоВоВсехДействиях = Истина;
		Кнопка.ИмяКоманды = "РазрешитьРедактированиеРеквизитовОбъекта";
	КонецЕсли;
	
КонецПроцедуры

// Проверяет, что текущий реквизит это стандартный реквизит объекта
//
Функция ЭтоСтандартныйРеквизит(Ссылка, Наименование)
	
	Для Каждого ОписаниеСтандартногоРеквизита Из Ссылка.Метаданные().СтандартныеРеквизиты Цикл
		Если ОписаниеСтандартногоРеквизита.Имя = Наименование Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// По переданному имени реквизита объекта возвращает имя элемента формы,
// ссылающегося на него
//
Процедура ЗаполнитьСвязанныеЭлементы(МассивСвязанныхЭлементов, Форма, ИмяРеквизита)
	
	Для Каждого ЭлементФормы Из Форма.Элементы Цикл
		Если (ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") И ЭлементФормы.Вид <> ВидПоляФормы.ПолеНадписи)
			ИЛИ ТипЗнч(ЭлементФормы) = Тип("ТаблицаФормы") Тогда
			РазложенныйПутьКДанным = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЭлементФормы.ПутьКДанным, ".");
			Если РазложенныйПутьКДанным.Количество() = 2 И РазложенныйПутьКДанным[1] = ИмяРеквизита Тогда
				МассивСвязанныхЭлементов.Добавить(ЭлементФормы.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
