
Процедура НастройкаПорядкаЭлементовПередЗаписью(Источник, Отказ) Экспорт
	
	// Если в обработчике был установлен отказ новые порядок не вычисляем
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим, есть ли у объекта реквизит доп. упорядочивания
	Информация = НастройкаПорядкаЭлементов.ПолучитьИнформациюДляПеремещенияОМетаданных(Источник.Ссылка);
	Если Не УОбъектаЕстьРеквизитДопУпорядочивания(Источник, Информация) Тогда
		Возврат;
	КонецЕсли;
	
	// Вычислим новое значение для порядка элемента
	Если Источник.РеквизитДопУпорядочивания = 0 Тогда
		Источник.РеквизитДопУпорядочивания = ПолучитьНовоеЗначениеРеквизитаДопУпорядочивания(Информация, Источник);
	КонецЕсли;

	
КонецПроцедуры

Процедура НастройкаПорядкаЭлементовПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	Информация = НастройкаПорядкаЭлементов.ПолучитьИнформациюДляПеремещенияОМетаданных(Источник.Ссылка);
	Если УОбъектаЕстьРеквизитДопУпорядочивания(Источник, Информация) Тогда
		Источник.РеквизитДопУпорядочивания = 0;
	КонецЕсли;

	
КонецПроцедуры

// Проверить, есть ли у объекта РеквизитДопУпорядочивания
Функция УОбъектаЕстьРеквизитДопУпорядочивания(Объект, Информация)
	
	Если Не Информация.ЕстьРодитель Тогда
		// Справочник неиерархический, значит реквизит есть
		Возврат Истина;
		
	ИначеЕсли Объект.ЭтоГруппа И Не Информация.ДляГрупп Тогда
		// Это группа, но для группа порядок не назначается
		Возврат Ложь;
		
	ИначеЕсли Не Объект.ЭтоГруппа И Не Информация.ДляЭлементов Тогда
		// Это элемент, но для элементов порядок не назначается
		Возврат Ложь;
		
	Иначе
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

// Получить новое значение реквизита доп. упорядочивания для объекта
Функция ПолучитьНовоеЗначениеРеквизитаДопУпорядочивания(Информация, Объект)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
	|ИЗ
	|	" + Информация.ПолноеИмя + " КАК Таблица";
	
	СтрУсловия = "";
	Если Информация.ЕстьРодитель Тогда
		СтрУсловия = СтрУсловия + ?(СтрУсловия = "", "", " И ") + "(Таблица.Родитель = &Родитель)";
		Запрос.УстановитьПараметр("Родитель", Объект.Родитель);
	КонецЕсли;
	Если Информация.ЕстьВладелец Тогда
		СтрУсловия = СтрУсловия + ?(СтрУсловия = "", "", " И ") + "(Таблица.Владелец = &Владелец)";
		Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
	КонецЕсли;
	
	Если СтрУсловия <> "" Тогда
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	" + СтрУсловия;
	КонецЕсли;


	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеквизитДопУпорядочивания УБЫВ
	|";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат ?(Не ЗначениеЗаполнено(Выборка.РеквизитДопУпорядочивания), 1, Выборка.РеквизитДопУпорядочивания + 1);
	
КонецФункции

