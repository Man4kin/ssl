////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИК РЕГЛАМЕНТНОГО ЗАДАНИЯ

// Процедура - обработчик регламентного задания КонтрольОшибокВЖурналеРегистрации.
//
Процедура ОбработкаРегламентногоЗадания_КонтрольОшибокВЖурналеРегистрации() Экспорт
	
	ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Начат регламентный контроль ошибок и предупреждений в журнале регистрации'"));
	
	Попытка
		Обработки.КонтрольЖурналаРегистрации.СформироватьОтчетПоОшибкамИПослатьОтчет();
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru = 'Завершен регламентный контроль ошибок и предупреждений в журнале регистрации'"));
	Исключение
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Во время регламентного контроля ошибок и предупреждений в журнале регистрации, произошла неизвестная ошибка.
				|%1'"), ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьАдресатовПолученияОтчетаПоЖурналуРегистрации() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.АдресатыПолученияОтчетаПоЖурналуРегистрации.Получить();
	
КонецФункции

Процедура УстановитьАдресатовПолученияОтчетаПоЖурналуРегистрации(Адресаты) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Константы.АдресатыПолученияОтчетаПоЖурналуРегистрации.Установить(Адресаты);
	
КонецПроцедуры

Функция СобытиеЖурналаРегистрации()
	
	Возврат "Контроль журнала регистрации";
	
КонецФункции	

