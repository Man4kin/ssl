// Возвращает структуру, содержащую различные персональные настройки
// по работе с файлами
Функция ПолучитьПерсональныеНастройкиРаботыСФайлами() Экспорт
	
	Настройки = Новый Структура;
	
	ФайловыеФункции.УстановитьПерсональныеНастройкиФайловыхФункций(Настройки);
	
	// Работа с файлами
	РаботаСФайламиВызовСервера.УстановитьПерсональныеНастройкиРаботыСФайлами(Настройки);
	// Конец Работа с файлами
	
	Возврат Настройки;
	
КонецФункции

// При переименовании пользователя переносит его настройки - РабочийКаталог, ДействиеПоДвойномуЩелчкуМыши и пр
//
Процедура ПеренестиНастройкиПриСменеИмениПользователя(знач ИмяТекущее, знач ИмяУстанавливаемое) Экспорт
	
	ФайловыеФункции.ПеренестиНастройкиПриСменеИмениПользователя(ИмяТекущее, ИмяУстанавливаемое);
	
	// Работа с файлами
	РаботаСФайламиВызовСервера.ПеренестиНастройкиПриСменеИмениПользователя(ИмяТекущее, ИмяУстанавливаемое);
	// Конец Работа с файлами
	
КонецПроцедуры

// Устанавливает имя файла при обмене
Функция УстановитьИмяФайлаПриОтправкеДанныхФайла(ЭлементДанных, ИмяКаталогаФайлов, УникальныйИдентификатор) Экспорт
	
	Перем НовыйПутьФайла;
	
	// РаботаСФайлами
	НовыйПутьФайла = РаботаСФайламиСобытия.УстановитьИмяФайлаПриОтправкеДанныхФайла(ЭлементДанных, ИмяКаталогаФайлов, УникальныйИдентификатор);
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	Если НовыйПутьФайла = Неопределено Тогда
		НовыйПутьФайла = ПрисоединенныеФайлыСобытия.УстановитьИмяФайлаПриОтправкеДанныхФайла(ЭлементДанных, ИмяКаталогаФайлов, УникальныйИдентификатор);
	КонецЕсли;
	// Конец ПрисоединенныеФайлы
	
	Возврат НовыйПутьФайла;
	
КонецФункции

// Удаляет файл при обмене
//
Процедура УдалитьФайлыПриПолученииДанныхФайла(ЭлементДанных, ПутьСПодкаталогом) Экспорт
	
	// РаботаСФайлами
	РаботаСФайламиВызовСервера.УдалитьФайлыПриПолученииДанныхФайла(ЭлементДанных, ПутьСПодкаталогом);
	// Конец РаботаСФайлами
	
КонецПроцедуры

// Добавляет файл на том при обмене
Процедура ДобавитьНаДискПриПолученииДанныхФайла(ЭлементДанных, ДвоичныеДанные, ПутьКФайлуНаТоме, СсылкаНаТом, ВремяИзменения, ИмяБезРасширения, Расширение, РазмерФайла, Зашифрован) Экспорт
	
	// РаботаСФайлами
	РаботаСФайламиСобытия.ДобавитьНаДискПриПолученииДанныхФайла(ЭлементДанных, ДвоичныеДанные, ПутьКФайлуНаТоме, СсылкаНаТом, ВремяИзменения, ИмяБезРасширения, Расширение, РазмерФайла);
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	ПрисоединенныеФайлыСобытия.ДобавитьНаДискПриПолученииДанныхФайла(ЭлементДанных, ДвоичныеДанные, ПутьКФайлуНаТоме, СсылкаНаТом, ВремяИзменения, ИмяБезРасширения, Расширение, РазмерФайла, Зашифрован);
	// Конец ПрисоединенныеФайлы
	
КонецПроцедуры

// Добавляет файл на том при "Разместить файлы начального образа"
Процедура ДобавитьФайлыВТомаПриРазмещении(СоответствиеПутейФайлов, ТипХраненияФайлов, ПрисоединяемыеФайлы) Экспорт
	
	НачатьТранзакцию();
	Попытка
		// РаботаСФайлами
		РаботаСФайламиВызовСервера.ДобавитьФайлыВТомаПриРазмещении(СоответствиеПутейФайлов, ТипХраненияФайлов);
		// Конец РаботаСФайлами
		
		// ПрисоединенныеФайлы
		ПрисоединенныеФайлы.ДобавитьФайлыВТомаПриРазмещении(СоответствиеПутейФайлов, ТипХраненияФайлов, ПрисоединяемыеФайлы);
		// Конец ПрисоединенныеФайлы
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Удаляет регистрацию изменений после "Разместить файлы начального образа"
Процедура УдалитьРегистрациюИзменений(ПланОбменаСсылка, ПрисоединяемыеФайлы) Экспорт
	
	// РаботаСФайлами
	РаботаСФайламиВызовСервера.УдалитьРегистрациюИзменений(ПланОбменаСсылка);
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	ПрисоединенныеФайлы.УдалитьРегистрациюИзменений(ПланОбменаСсылка, ПрисоединяемыеФайлы);
	// Конец ПрисоединенныеФайлы
	
КонецПроцедуры

// Возвращает Истина, если это элемент данных - Файл или Присоединенный файл.
Функция ЭтоЭлементФайл(ЭлементДанных) Экспорт
	
	Если 
		// РаботаСФайлами
		РаботаСФайламиСобытия.ЭтоЭлементРаботаСФайлами(ЭлементДанных)
		// Конец РаботаСФайлами
		
		// ПрисоединенныеФайлы
		ИЛИ
		ПрисоединенныеФайлыСобытия.ЭтоЭлементПрисоединенныеФайлы(ЭлементДанных)
		// Конец ПрисоединенныеФайлы
		
		Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Возвращает структуру с двоичными данными файла и подписи
Функция ПолучитьДвоичныеДанныеФайлаИПодписи(ДанныеСтроки) Экспорт
	
	// РаботаСФайлами
	Если РаботаСФайламиСобытия.ЭтоЭлементРаботаСФайлами(ДанныеСтроки.Объект) Тогда
		Возврат РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаИДвоичныеДанные(, ДанныеСтроки.Объект, ДанныеСтроки.АдресПодписи);
	КонецЕсли;
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	Если ПрисоединенныеФайлыСобытия.ЭтоЭлементПрисоединенныеФайлы(ДанныеСтроки.Объект) Тогда
		Возврат ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайлаИПодписи(ДанныеСтроки.Объект, ДанныеСтроки.АдресПодписи);
	КонецЕсли;
	// Конец ПрисоединенныеФайлы
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает текст запроса для извлечения текста
Функция ПолучитьТекстЗапроса() Экспорт
	
	ТекстЗапроса = "";
	
	// РаботаСФайлами
	РаботаСФайламиВызовСервера.ПолучитьТекстЗапроса(ТекстЗапроса);
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	ПрисоединенныеФайлы.ПолучитьТекстЗапроса(ТекстЗапроса);
	// Конец ПрисоединенныеФайлы
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Получает полный путь к файлу на диске
Функция ПолучитьИмяФайлаСПутемКДвоичнымДанным(ФайлСсылка) Экспорт
	
	// РаботаСФайлами
	Если РаботаСФайламиСобытия.ЭтоЭлементРаботаСФайлами(ФайлСсылка) Тогда
		Возврат РаботаСФайламиВызовСервера.ПолучитьИмяФайлаСПутемКДвоичнымДанным(ФайлСсылка);
	КонецЕсли;
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	Если ПрисоединенныеФайлыСобытия.ЭтоЭлементПрисоединенныеФайлы(ФайлСсылка) Тогда
		Возврат ПрисоединенныеФайлы.ПолучитьИмяФайлаСПутемКДвоичнымДанным(ФайлСсылка);
	КонецЕсли;
	// Конец ПрисоединенныеФайлы
	
КонецФункции

// Записывает извлеченный текст
Процедура ЗаписатьИзвлеченныйТекст(ФайлОбъект) Экспорт
	
	// РаботаСФайлами
	Если РаботаСФайламиСобытия.ЭтоЭлементРаботаСФайлами(ФайлОбъект) Тогда
		РаботаСФайламиВызовСервера.ЗаписатьИзвлеченныйТекст(ФайлОбъект);
	КонецЕсли;
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	Если ПрисоединенныеФайлыСобытия.ЭтоЭлементПрисоединенныеФайлы(ФайлОбъект) Тогда
		ПрисоединенныеФайлы.ЗаписатьИзвлеченныйТекст(ФайлОбъект);
	КонецЕсли;
	// Конец ПрисоединенныеФайлы
	
КонецПроцедуры

// Возвращает навигационную ссылку на файл (на реквизит или во временное хранилище)
Функция ПолучитьНавигационнуюСсылкуФайла(ФайлСсылка, УникальныйИдентификатор) Экспорт
	
	// РаботаСФайлами
	Если РаботаСФайламиСобытия.ЭтоЭлементРаботаСФайлами(ФайлСсылка) Тогда
		Возврат РаботаСФайламиВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ФайлСсылка, УникальныйИдентификатор);
	КонецЕсли;
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	Если ПрисоединенныеФайлыСобытия.ЭтоЭлементПрисоединенныеФайлы(ФайлСсылка) Тогда
		Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлСсылка, УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла;
	КонецЕсли;
	// Конец ПрисоединенныеФайлы
	
КонецФункции

// Возвращает количество файлов в томах
Функция ПолучитьКоличествоФайловВТомах() Экспорт
	
	КоличествоФайловВТомах = 0;
	
	// РаботаСФайлами
	КоличествоФайловВТомах = КоличествоФайловВТомах + РаботаСФайламиВызовСервера.ПодсчитатьКоличествоФайловВТомах();
	// Конец РаботаСФайлами
	
	// ПрисоединенныеФайлы
	КоличествоФайловВТомах = КоличествоФайловВТомах + ПрисоединенныеФайлы.ПодсчитатьКоличествоФайловВТомах();
	// Конец ПрисоединенныеФайлы
	
	Возврат КоличествоФайловВТомах;
	
КонецФункции

// Выполняет дополнительную обработку при отправке данных обмена.
//
Процедура ВыполнитьДополнительнуюОбработкуПриОтправкеДанных(ЭлементДанных) Экспорт
	
	// ПрисоединенныеФайлы
	ПрисоединенныеФайлыСобытия.ВыполнитьДополнительнуюОбработкуПриОтправкеДанных(ЭлементДанных);
	// Конец ПрисоединенныеФайлы
	
КонецПроцедуры

// Выполняет дополнительную обработку при получении данных обмена.
//
Процедура ВыполнитьДополнительнуюОбработкуПриПолученииДанных(ЭлементДанных) Экспорт
	
	// ПрисоединенныеФайлы
	ПрисоединенныеФайлыСобытия.ВыполнитьДополнительнуюОбработкуПриПолученииДанных(ЭлементДанных);
	// Конец ПрисоединенныеФайлы
	
КонецПроцедуры
