
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СИСТЕМНЫХ СОБЫТИЙ
//

// Обработчик события ПриНачалеРаботыСистемы вызывается
// для выполнения действий, требуемых для подсистемы РегламентныеЗадания.
//
Процедура ПриНачалеРаботыСистемы() Экспорт

	Если Найти(ПараметрЗапуска, "DoScheduledJobs") <> 0 Тогда
		Предупреждать  = (Найти(ПараметрЗапуска, "SkipMessageBox") =  0);
		ОтдельныйСеанс = (Найти(ПараметрЗапуска, "AloneIBSession") <> 0);
		#Если ВебКлиент Тогда
			ЗавершитьРаботуСистемы(Ложь);
		#КонецЕсли
		Если СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая Тогда
			ЗаданияОбрабатываютсяНормально = Неопределено;
			ОписаниеОшибки = "";
			Если РегламентныеЗаданияСервер.ТекущийСеансОбрабатываетЗадания(ЗаданияОбрабатываютсяНормально, Истина, ОписаниеОшибки) Тогда
				УстановитьЗаголовокПриложения(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Обработка регламентных заданий: %1'"),
				                                                                                      ПолучитьЗаголовокПриложения() ));
				Если ОтдельныйСеанс Тогда
					// Обрабатывать в отдельном сеансе.
					ОсновноеОкно = ОсновноеОкно();
					Если ОсновноеОкно = Неопределено Тогда
						ОткрытьФорму("Обработка.РегламентныеИФоновыеЗадания.Форма.РабочийСтолОтдельногоСеансаОбработкиРегламентныхЗаданий" );
					Иначе
						ОткрытьФорму("Обработка.РегламентныеИФоновыеЗадания.Форма.РабочийСтолОтдельногоСеансаОбработкиРегламентныхЗаданий",,,, ОсновноеОкно);
					КонецЕсли;
					Если ОткрытьФормуМодально("Обработка.РегламентныеИФоновыеЗадания.Форма.ОбработкаРегламентныхЗаданий") = "Перезапустить" Тогда
						ЗавершитьРаботуСистемы(Ложь, Истина, " /C""" + ПараметрЗапуска + """");
					КонецЕсли;
					ЗавершитьРаботуСистемы(Ложь);
				Иначе
					// Обрабатывать в этом сеансе.
					ПодключитьОбработчикОжидания("ОбработкаРегламентныхЗаданийВОсновномСеансе", 1, Истина);
				КонецЕсли;
			Иначе
				Если Предупреждать Тогда
					Если ЗаданияОбрабатываютсяНормально Тогда
						Предупреждение(НСтр("ru = 'Сеанс, обрабатывающий регламентные задания, уже открыт!'"));
					Иначе
						Предупреждение(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сеанс, обрабатывающий регламентные задания, уже открыт!
						                                                                                  | 
						                                                                                  |%1'"), ОписаниеОшибки ));
					КонецЕсли;
				КонецЕсли;
				Если ОтдельныйСеанс Тогда
					ЗавершитьРаботуСистемы(Ложь);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если Предупреждать Тогда
				Предупреждение(НСтр("ru = 'Регламентные задания обрабатываются на сервере!'"));
			КонецЕсли;
			Если ОтдельныйСеанс Тогда
				ЗавершитьРаботуСистемы(Ложь);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая Тогда
		
		ПараметрыТолькоЧтение = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ПараметрыОткрытияСеансаОбработкиРегламентныхЗаданий;
		
		Если ПараметрыТолькоЧтение.Отказ Тогда
			ПриОшибкеОбработкиРегламентныхЗаданий(ПараметрыТолькоЧтение.ОписаниеОшибки);
		ИначеЕсли ПараметрыТолькоЧтение.ТребуетсяОткрытьОтдельныйСеанс Тогда
			ПодключитьОбработчикОжидания("ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданийЧерезОбработчикОжидания", 1, Истина);
		КонецЕсли;
		
		Если ПараметрыТолькоЧтение.УведомлятьОНекорректномСостоянииОбработки Тогда
			ПодключитьОбработчикОжидания("УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий", ПараметрыТолькоЧтение.ПериодУведомления * 60, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеРаботыСистемы()


////////////////////////////////////////////////////////////////////////////////
// МЕТОДЫ РАСШИРЕНИЯ МЕНЕДЖЕРА РЕГЛАМЕНТНЫХ ЗАДАНИЙ
//

// Функция ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий() запускает новый сеанс,
// обрабатывающий регламентные задания.
//  Только для тонкого и обычного клиентов (Web не поддерживается).
//
// Возвращаемое значение:
//  Структура
//    Отказ             - Булево.
//    ОписаниеОшибки    - Строка.
// 
Функция ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий() Экспорт
                                                          
	Параметры = РегламентныеЗаданияСервер.ПараметрыОткрытияСеансаОбработкиРегламентныхЗаданий(Ложь);
	
	Если НЕ Параметры.Отказ И Параметры.ТребуетсяОткрытьОтдельныйСеанс Тогда
		ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий(Параметры);
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции // ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий()

// Процедура ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий()
// делает попытку открытия нового сеанса, обрабатывающего регламентные задания.
//
// Параметры:
//  Параметры    - Структура, используемые свойства:
//                   ДополнительныеПараметрыКоманднойСтроки - Строка.
//                   Отказ                                  - Булево, выходной параметр.
//                   ОписаниеОшибки                         - Строка, выходной параметр.
// 
Процедура ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий(Знач Параметры) Экспорт
	
	#Если НЕ ВебКлиент Тогда
		Попытка
			Параметры.ВыполненаПопыткаОткрытия = Истина;
			ЗапуститьСистему(
				?(Найти(ВРег(ПараметрЗапуска), "/DEBUG") = Неопределено, "", "/DEBUG ")
				+ Параметры.ДополнительныеПараметрыКоманднойСтроки);
		Исключение
			Параметры.ОписаниеОшибки = ОписаниеОшибки();
			Параметры.Отказ = Истина;
		КонецПопытки;
	#Иначе
		Параметры.Отказ = Истина;
		Параметры.ОписаниеОшибки = НСтр("ru = 'Обработка регламентных заданий в
		                                      |отдельном сеансе веб-клиента невозможна!
		                                      |
		                                      |Для обработки регламентных заданий, необходимо,
		                                      |чтобы администратор настроил запуск обычного
		                                      |или тонкого клиента на веб-сервере!'");
	#КонецЕсли
	Параметры.ОписаниеОшибки = ?(ПустаяСтрока(Параметры.ОписаниеОшибки),
	                             "",
	                             СтрЗаменить(НСтр("ru = 'Ошибка открытия сеанса обработки регламентных заданий:
	                                              |
	                                              |%1'"), "%1", Параметры.ОписаниеОшибки));
	
КонецПроцедуры // ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий()


////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ
//

// Процедура ПриОшибкеОбработкиРегламентныхЗаданий вызывается
// из процедуры РегламентныеЗаданияГлобальный.УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий()
// и РегламентныеЗаданияКлиент.ПриНачалеРаботыСистемы().
//  Вызов происходит, если обнаружено, что что-то не так в обработке регламентных заданий:
// нет сеанса обработки, "висит" сеанс, сеанс долго "не работает".
//
// Параметры:
//  ОписаниеОшибки - Строка
//
Процедура ПриОшибкеОбработкиРегламентныхЗаданий(ОписаниеОшибки) Экспорт
	
	Если СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ПараметрыОткрытияСеансаОбработкиРегламентныхЗаданий.ТекущийПользовательАдминистратор Тогда
		ПоказатьОповещениеПользователя(
				НСтр("ru = 'Регламентные задания не обрабатываются.'"),
				"e1cib/app/Обработка.РегламентныеИФоновыеЗадания",
				ОписаниеОшибки,
				БиблиотекаКартинок.ОшибкаОбработкиРегламентныхЗаданий);
	Иначе
		ПоказатьОповещениеПользователя(
				НСтр("ru = 'Регламентные задания не обрабатываются.'"),
				,
				ОписаниеОшибки + Символы.ПС + НСтр("ru = 'Обратитесь к администратору.'"),
				БиблиотекаКартинок.ОшибкаОбработкиРегламентныхЗаданий);
	КонецЕсли;
	
	
КонецПроцедуры

// Процедура ПодключитьГлобальныйОбработчикОжидания() применяется
// из экранных форм, т.к. в модуле формы метод переопределен.
//
Процедура ПодключитьГлобальныйОбработчикОжидания(ИмяПроцедуры, Интервал, Однократно = Ложь) Экспорт

	ПодключитьОбработчикОжидания(ИмяПроцедуры, Интервал, Однократно);
	
КонецПроцедуры

// Процедура ОтключитьГлобальныйОбработчикОжидания() применяется
// из экранных форм, т.к. в модуле формы метод переопределен.
//
Процедура ОтключитьГлобальныйОбработчикОжидания(ИмяПроцедуры) Экспорт
	
	ОтключитьОбработчикОжидания(ИмяПроцедуры);

КонецПроцедуры

Функция ОсновноеОкно() Экспорт
	
	ОсновноеОкно = Неопределено;
	
	Окна = ПолучитьОкна();
	Если Окна <> Неопределено Тогда
		Для каждого Окно Из Окна Цикл
			Если Окно.Основное Тогда
				ОсновноеОкно = Окно;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ОсновноеОкно;
	
КонецФункции
