
Перем ОграничениеДоступаНаУровнеЗаписейВключено;
Перем ОграничениеДоступаНаУровнеЗаписейИзменено;

Процедура ПередЗаписью(Отказ)
	
	ОграничениеДоступаНаУровнеЗаписейВключено = Значение И НЕ Константы.ОграничиватьДоступНаУровнеЗаписей.Получить();
	ОграничениеДоступаНаУровнеЗаписейИзменено = Значение <>   Константы.ОграничиватьДоступНаУровнеЗаписей.Получить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОграничениеДоступаНаУровнеЗаписейВключено Тогда
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Управление доступом.Заполнение данных для ограничения доступа'"), 
			УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Начато заполнение данных для ограничения доступа'"), 
			РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		
		// Дополнительно обновим таблицы прав, т.к. они будут использоваться
		// в процедуре заполнения регистра сведений ТаблицыГруппДоступа.
		УправлениеДоступом.ОбновитьТаблицыРолейПрофилейГруппДоступа();
		
		// Обновим РегистрСведений.ТаблицыГруппДоступа,
		// и       РегистрСведений.ЗначенияГруппДоступа.
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ГруппыДоступа.Ссылка
			|ИЗ
			|	Справочник.ГруппыДоступа КАК ГруппыДоступа
			|ГДЕ
			|	(НЕ ГруппыДоступа.ЭтоГруппа)");
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			УправлениеДоступом.ОбновитьТаблицыГруппДоступа(Выборка.Ссылка);
			УправлениеДоступом.ЗаписатьЗначенияГруппДоступа(Выборка.Ссылка);
		КонецЦикла;
		
		УстановитьПривилегированныйРежим(Истина);
		Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ЗаполнениеДанныхДляОграниченияДоступа);
		Задание.Использование = Истина;
		Задание.Записать();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Если ОграничениеДоступаНаУровнеЗаписейИзменено Тогда
		// Обновление параметров сеанса.
		// Требуется для того, чтобы администратор не выполнял перезапуск.
		УстановленныеПараметры = Новый Массив;
		УправлениеДоступом.УстановитьПараметрыСеансаОграниченияДоступа("ОграничиватьДоступПоВиду", УстановленныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

