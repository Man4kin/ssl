
Процедура ПередЗаписью(Отказ)
	
	Если ИдентификаторПользователяИБ <> Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") И
	     Пользователи.ПользовательПоИдентификаторуСуществует(ИдентификаторПользователяИБ, Ссылка) Тогда
	
		ВызватьИсключение(НСтр("ru = 'Один пользователь информационной базы
		                             |может быть связан только с одним пользователем или внешним пользователем!'"));
	КонецЕсли;
	
	//Если ОбменДанными.Загрузка Тогда
	//	Возврат;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.СоставГруппПользователей.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ГруппаПользователей = Ссылка;
	МенеджерЗаписи.Пользователь        = Ссылка;
	МенеджерЗаписи.Прочитать();
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.ГруппаПользователей = Ссылка;
		МенеджерЗаписи.Пользователь        = Ссылка;
		МенеджерЗаписи.Записать();
		// Обновление состава автоматической группы "Все пользователи".
		Пользователи.ОбновитьСоставГруппПользователей(Справочники.ГруппыПользователей.ВсеПользователи);
		
		Если ДополнительныеСвойства.Свойство("ГруппаНовогоПользователя") И
		     ЗначениеЗаполнено(ДополнительныеСвойства.ГруппаНовогоПользователя) Тогда
			
			ОбъектГруппы = ДополнительныеСвойства.ГруппаНовогоПользователя.ПолучитьОбъект();
			ОбъектГруппы.Состав.Добавить().Пользователь = Ссылка;
			ОбъектГруппы.Записать();
			Пользователи.ОбновитьСоставГруппПользователей(ОбъектГруппы.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если Пользователи.ПользовательИБСуществует(ИдентификаторПользователяИБ) Тогда
		ОписаниеОшибки = "";
		Если НЕ Пользователи.УдалитьПользователяИБ(ИдентификаторПользователяИБ, ОписаниеОшибки) Тогда
			ВызватьИсключение(ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
