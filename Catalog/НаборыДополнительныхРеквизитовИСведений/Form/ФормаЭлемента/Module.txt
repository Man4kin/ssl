////////////////////////////////////////////////////////////////////////////////
// Процедуры - обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//////////////////////////////////////////////////////////////////////////////
	// Поддержка раздельной настройки доп. реквизитов и доп. сведений
	//
	
	Перем ПерваяЧастьИмени, ВтораяЧастьИмени;
	
	Если Объект.Предопределенный Тогда
		Элементы.Наименование.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.Ссылка.Предопределенный И Объект.Ссылка.Родитель = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка() Тогда
		СсылкаПредопределенного = Объект.Ссылка;
	Иначе
		СсылкаПредопределенного = Объект.Ссылка.Родитель;
	КонецЕсли;
	
	Если СсылкаПредопределенного = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка() Тогда
		ВызватьИсключение НСтр("ru = 'Не найден владелец свойств!'");
	КонецЕсли;
	
	Справочники.НаборыДополнительныхРеквизитовИСведений.ПолучитьЧастиИмени(СсылкаПредопределенного, ПерваяЧастьИмени, ВтораяЧастьИмени);
	ИспользоватьДопРеквизиты = Справочники.НаборыДополнительныхРеквизитовИСведений.ИспользуютсяДопРеквизиты(ПерваяЧастьИмени, ВтораяЧастьИмени);
	ИспользоватьДопСведения = Справочники.НаборыДополнительныхРеквизитовИСведений.ИспользуютсяДопСведения(ПерваяЧастьИмени, ВтораяЧастьИмени);
	
	Если НЕ ИспользоватьДопРеквизиты И НЕ ИспользоватьДопСведения Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Использование свойств не определено!'");
	КонецЕсли;
	
	Если НЕ ИспользоватьДопРеквизиты Тогда
		Элементы.ТабРеквизиты.Видимость = Ложь;
		Элементы.ТабСведения.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ИначеЕсли НЕ ИспользоватьДопСведения Тогда
		Элементы.ТабСведения.Видимость = Ложь;
		Элементы.ТабРеквизиты.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЕсли;
	
	Если ИспользоватьДопРеквизиты Тогда
		Для Каждого ДополнительныйРеквизит Из Объект.ДополнительныеРеквизиты Цикл
			Если НЕ ДополнительныйРеквизит.Свойство.ЭтоДополнительноеСведение Тогда
				ТабРеквизиты.Добавить().Свойство = ДополнительныйРеквизит.Свойство;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ИспользоватьДопСведения Тогда
		Для Каждого ДополнительноеСведение Из Объект.ДополнительныеСведения Цикл
			Если ДополнительноеСведение.Свойство.ЭтоДополнительноеСведение Тогда
				ТабСведения.Добавить().Свойство = ДополнительноеСведение.Свойство;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//
	//////////////////////////////////////////////////////////////////////////////
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	ТекущийОбъект.ДополнительныеРеквизиты.Очистить();
	ТекущийОбъект.ДополнительныеСведения.Очистить();
	
	Если ИспользоватьДопРеквизиты Тогда
		Для Каждого ДополнительныйРеквизит Из ТабРеквизиты Цикл
			ТекущийОбъект.ДополнительныеРеквизиты.Добавить().Свойство = ДополнительныйРеквизит.Свойство;
		КонецЦикла;
	КонецЕсли;
	
	Если ИспользоватьДопСведения Тогда
		Для каждого ДополнительноеСведение Из ТабСведения Цикл
			ТекущийОбъект.ДополнительныеСведения.Добавить().Свойство = ДополнительноеСведение.Свойство;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененНаборСвойств", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	/////////////////////////////////////////////////////////
	// При записи свойства необходимо перенести свойство в
	// соответствующую группу и обновить поле комментария,
	// при необходимости
	
	Если ИмяСобытия = "ЗаписаноДополнительноеСвойство" Тогда
		ПроверитьСоставыТаблицПослеЗаписиСвойства(Параметр.ЭтоДополнительноеСведение, Источник);
		
	ИначеЕсли ИмяСобытия = "ПодборСвойствВНабор" Тогда
		
		МассивДобавляемых = Новый Массив;
		
		Если Параметр.ЭтоДополнительноеСведение Тогда
			Таблица = ТабСведения;
		Иначе
			Таблица = ТабРеквизиты
		КонецЕсли;
		
		Для Каждого Добавляемый Из Параметр.МассивДобавляемых Цикл
			Отбор = Новый Структура("Свойство", Добавляемый);
			Если Таблица.НайтиСтроки(Отбор).Количество() = 0 Тогда
				МассивДобавляемых.Добавить(Добавляемый);
			КонецЕсли;
		КонецЦикла;
		
		Если МассивДобавляемых.Количество() > 0 Тогда
			ДобавитьСвойства(МассивДобавляемых);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры - обработчики команд табличных частей формы

&НаКлиенте
Процедура ТабРеквизитыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТабСведенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТабРеквизитыПередУдалением(Элемент, Отказ)
	
	ТабСвойстваПередУдалением(Элемент, ТабРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабСведенияПередУдалением(Элемент, Отказ)
	
	ТабСвойстваПередУдалением(Элемент, ТабСведения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабСвойстваПередУдалением(Элемент, ТаблицаСвойств)
	
	МассивУдаляемыхСвойств = Новый Массив;
	
	Для Каждого ВыдСтрока Из Элемент.ВыделенныеСтроки Цикл
		Свойство = Элемент.ДанныеСтроки(ВыдСтрока).Свойство;
		МассивУдаляемыхСвойств.Добавить(Свойство);
		Строки = ТаблицаСвойств.НайтиСтроки(Новый Структура("Свойство", Свойство));
		ТаблицаСвойств.Удалить(Строки[0]);
	КонецЦикла;
	
	Если МассивУдаляемыхСвойств.Количество() > 0 Тогда
		ОповеститьОбИзмененииНабора("Удаление", МассивУдаляемыхСвойств);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабСведенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборДопРеквизитов(Команда)
	ВызватьФормуПодбора(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПодборДопСведений(Команда)
	ВызватьФормуПодбора(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВызватьФормуПодбора(ЭтоДополнительноеСведение)
	
	СтруктрураПараметров = Новый Структура;
	СтруктрураПараметров.Вставить("ЭтоДополнительноеСведение", ЭтоДополнительноеСведение);
	
	МасВыбранных = Новый Массив;
	
	Если ЭтоДополнительноеСведение Тогда
		Для Каждого ЭлементСтр Из ТабСведения Цикл
			МасВыбранных.Добавить(ЭлементСтр.Свойство);
		КонецЦикла;
	Иначе
		Для Каждого ЭлементСтр Из ТабРеквизиты Цикл
			МасВыбранных.Добавить(ЭлементСтр.Свойство);
		КонецЦикла;
	КонецЕсли;
	СтруктрураПараметров.Вставить("МасВыбранных", МасВыбранных);
	
	ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.Форма.ПодборСвойств", СтруктрураПараметров, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции

&НаКлиенте
Процедура ОповеститьОбИзмененииНабора(Операция, МассивСвойств)
	
	Оповестить("ИзменилсяНаборВыбранных", 
				Новый Структура("Операция,МассивСвойств",
								Операция,
								МассивСвойств),
				ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоставыТаблицПослеЗаписиСвойства(ЭтоДополнительноеСведение, ДопСвойствоСсылка)
	
	// Определим, из какой таблицы в какую возможно может потребоваться переносить доп. свойство
	Если ЭтоДополнительноеСведение Тогда
		Таблица1 = ТабСведения;
		Таблица2 = ТабРеквизиты;
	Иначе
		Таблица1 = ТабРеквизиты;
		Таблица2 = ТабСведения;
	КонецЕсли;
	
	// Проверим, входит ли свойство в таблицу, из которой нужно переносить
	Свойство = ДопСвойствоСсылка;
	Строки = Таблица2.НайтиСтроки(Новый Структура("Свойство", Свойство));
	Если Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Удалим из одной таблицы
	Индекс = Таблица2.Индекс(Строки[0]);
	Таблица2.Удалить(Индекс);
	
	// Добавим в другую
	новСтр = Таблица1.Добавить();
	новСтр.Свойство = Свойство;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСвойства(масДобавлять)
	
	масР = Новый Массив;
	Для Каждого Стр Из ТабРеквизиты Цикл
		масР.Добавить(Стр.Свойство);
	КонецЦикла;
	
	масС = Новый Массив;
	Для Каждого Стр Из ТабСведения Цикл
		масС.Добавить(Стр.Свойство);
	КонецЦикла;
	
	ОбщийМассивСвойств = Новый Массив;
	
	Если ПроизвестиДобавлениеВыделенныхСвойств(масДобавлять, масР, масС) Тогда
		Модифицированность = Истина;
		
		Для Каждого Свойство Из масР Цикл
			новСтр = ТабРеквизиты.Добавить();
			новСтр.Свойство = Свойство;
			ОбщийМассивСвойств.Добавить(Свойство);
		КонецЦикла;
		
		Для Каждого Свойство Из масС Цикл
			новСтр = ТабСведения.Добавить();
			новСтр.Свойство = Свойство;
			ОбщийМассивСвойств.Добавить(Свойство);
		КонецЦикла;
		
		ОповеститьОбИзмененииНабора("Добавление", ОбщийМассивСвойств);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроизвестиДобавлениеВыделенныхСвойств(масСсылок, масР, масС)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Свойство
	|ПОМЕСТИТЬ Временная
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	(ДополнительныеРеквизитыИСведения.Ссылка В (&масР)
	|			ИЛИ ДополнительныеРеквизитыИСведения.Ссылка В (&масС))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка,
	|	ДополнительныеРеквизитыИСведения.ЭтоДополнительноеСведение
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Временная КАК Временная
	|		ПО ДополнительныеРеквизитыИСведения.Ссылка = Временная.Свойство
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка В ИЕРАРХИИ(&масСсылок)
	|	И (НЕ ДополнительныеРеквизитыИСведения.ЭтоГруппа)
	|	И Временная.Свойство ЕСТЬ NULL 
	|	И (НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДополнительныеРеквизитыИСведения.Наименование";
	
	Запрос.УстановитьПараметр("масСсылок", масСсылок);
	Запрос.УстановитьПараметр("масР", масР);
	Запрос.УстановитьПараметр("масС", масС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	масР.Очистить();
	масС.Очистить();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоДополнительноеСведение Тогда
			масС.Добавить(Выборка.Ссылка);
		Иначе
			масР.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОткрываетсяИзНабораСвойств", Истина);
	ПараметрыОткрытия.Вставить("Ключ", Элемент.ДанныеСтроки(ВыбраннаяСтрока).Свойство);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаЭлемента", ПараметрыОткрытия);
	
КонецПроцедуры
