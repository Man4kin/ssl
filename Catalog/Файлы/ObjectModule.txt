
Перем ЗаписьПодписанногоОбъекта Экспорт;


// Обработка события ПередЗаписью
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВладелецФайла) Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя записать файл с пустым полем Владелец.'");
	КонецЕсли;
	
	Если НЕ ПривилегированныйРежим() И ЗаписьПодписанногоОбъекта <> Истина Тогда
		
		Если ЗначениеЗаполнено(Ссылка) Тогда
			
			СсылкаПодписан = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "Подписан");
			Если Подписан И СсылкаПодписан Тогда
				ВызватьИсключение НСтр("ru = 'Подписанный файл нельзя редактировать.'");
			КонецЕсли;	
			
			СсылкаЗашифрован = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "Зашифрован");
			Если Зашифрован И СсылкаЗашифрован И Подписан И НЕ СсылкаПодписан Тогда
				ВызватьИсключение НСтр("ru = 'Зашифрованный файл нельзя подписывать.'");
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если Не ЭтоНовый() Тогда
		
		Если Не ТекущаяВерсия.Пустая() Тогда
			
			// Сменим индекс картинки, возможно, появилась версия или сменился индекс картинки у версии
			РеквизитыТекущейВерсии = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ТекущаяВерсия, 
				"ИндексКартинки, Размер, ДатаСоздания, Автор, Расширение, НомерВерсии, Том, ПутьКФайлу, Код, ПолноеНаименование");
			
			ИндексКартинки = РеквизитыТекущейВерсии.ИндексКартинки;
			
			// копируем реквизиты для ускорения работы RLS
			ТекущаяВерсияРазмер = РеквизитыТекущейВерсии.Размер;
			ТекущаяВерсияДатаСоздания = РеквизитыТекущейВерсии.ДатаСоздания;
			ТекущаяВерсияАвтор = РеквизитыТекущейВерсии.Автор;
			ТекущаяВерсияРасширение = РеквизитыТекущейВерсии.Расширение;
			ТекущаяВерсияНомерВерсии = РеквизитыТекущейВерсии.НомерВерсии;
			ТекущаяВерсияТом = РеквизитыТекущейВерсии.Том;
			ТекущаяВерсияПутьКФайлу = РеквизитыТекущейВерсии.ПутьКФайлу;
			ТекущаяВерсияКод = РеквизитыТекущейВерсии.Код;
			
			// Проверим равенство имени файла и его текущей версии
			// Если имена отличаются - имя у версии должно стать как у карточки с файлом
			Если РеквизитыТекущейВерсии.ПолноеНаименование <> ПолноеНаименование Тогда
				Объект = ТекущаяВерсия.ПолучитьОбъект();
				ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка);
				Если Объект <> Неопределено Тогда
					УстановитьПривилегированныйРежим(Истина);
					Объект.ПолноеНаименование = ПолноеНаименование;
					Объект.Записать();
					УстановитьПривилегированныйРежим(Ложь);
				КонецЕсли;	
			КонецЕсли;
		Иначе
			ИндексКартинки = РаботаСФайламиКлиентСервер.ПолучитьИндексПиктограммыФайла(Неопределено);
		КонецЕсли;
		
		Если ПометкаУдаления И Не ПометкаУдаленияВИБ() Тогда
			
			// Проверка права "Пометка на удаление".
			Если НЕ РаботаСФайламиПереопределяемый.ПометкаУдаленияРазрешена(ВладелецФайла) Тогда
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				                     НСтр("ru = 'У вас нет права ""Пометка на удаление"" файла ""%1"".'"),
				                     Строка(Ссылка));
			КонецЕсли;
			
			// Попытка установить пометку удаления
			Если Не Редактирует.Пустая() Тогда
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				                    НСтр("ru = 'Нельзя удалить файл ""%1"", т.к. он занят для редактирования пользователем ""%2"".'"),
				                    ПолноеНаименование,
				                    Строка(Редактирует) );
			КонецЕсли;
			
		КонецЕсли;
		
		НаименованиеВИБ = НаименованиеВИБ();
		Если ПолноеНаименование <> НаименованиеВИБ Тогда 
			Если Не Редактирует.Пустая() Тогда
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				                    НСтр("ru = 'Нельзя переименовать файл ""%1"", т.к. он занят для редактирования пользователем ""%2"".'"),
				                    НаименованиеВИБ,
				                    Строка(Редактирует) );
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	
	Наименование = СокрЛП(ПолноеНаименование);
КонецПроцедуры

// Возвращает текущее значение пометки удаления в информационной базе
Функция ПометкаУдаленияВИБ()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Файлы.ПометкаУдаления
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ПометкаУдаления;
	КонецЕсли;	
	
	Возврат Неопределено;
КонецФункции

// Возвращает текущее значение наименования в информационной базе
Функция НаименованиеВИБ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Файлы.ПолноеНаименование
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ПолноеНаименование;
	КонецЕсли;
	
	Возврат Неопределено;	
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ЭтоНовый() Тогда
		ДатаСоздания = ТекущаяДата();
		ХранитьВерсии = Истина;
		ИндексКартинки = РаботаСФайламиКлиентСервер.ПолучитьИндексПиктограммыФайла(Неопределено);
		
		Автор = ОбщегоНазначения.ТекущийПользователь();
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;
КонецПроцедуры

