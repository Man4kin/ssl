
Перем ЗаписьПодписанногоОбъекта Экспорт;

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		РодительскаяВерсия = Владелец.ТекущаяВерсия;
	КонецЕсли;	
	
	Если НЕ ПривилегированныйРежим() И ЗаписьПодписанногоОбъекта <> Истина Тогда
		
		Если ЗначениеЗаполнено(Ссылка) Тогда
			
			СсылкаПодписан = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "Подписан");
			Если Подписан И СсылкаПодписан Тогда
				ВызватьИсключение НСтр("ru = 'Подписанную версию нельзя редактировать.'");
			КонецЕсли;	
			
			СсылкаЗашифрован = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "Зашифрован");
			Если Зашифрован И СсылкаЗашифрован И Подписан И НЕ СсылкаПодписан Тогда
				ВызватьИсключение НСтр("ru = 'Зашифрованный файл нельзя подписывать.'");
			КонецЕсли;	
			
		КонецЕсли;	
	
	КонецЕсли;	
	
	// Выполним установку индекса пиктограммы при записи объекта
	ИндексКартинки = РаботаСФайламиКлиентСервер.ПолучитьИндексПиктограммыФайла(Расширение);
	
	Если СтатусИзвлеченияТекста.Пустая() Тогда
		СтатусИзвлеченияТекста = Перечисления.СтатусыИзвлеченияТекстаФайлов.НеИзвлечен;
	КонецЕсли;	
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Файлы") Тогда
		Наименование = СокрЛП(ПолноеНаименование);
	КонецЕсли;	
	
	Если Владелец.ТекущаяВерсия = Ссылка Тогда
		Если ПометкаУдаления = Истина И Владелец.ПометкаУдаления <> Истина Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Активную версию нельзя удалить!'"));
		КонецЕсли;
	ИначеЕсли РодительскаяВерсия.Пустая() Тогда
		Если ПометкаУдаления = Истина И Владелец.ПометкаУдаления <> Истина Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Первую версию нельзя удалить!'"));
		КонецЕсли;
	ИначеЕсли ПометкаУдаления = Истина И Владелец.ПометкаУдаления <> Истина Тогда
		// Очищаем у версий, дочерних к помеченной, ссылку на родительскую - 
		// переставляем на родительскую версию удаляемой версии
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВерсииФайлов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ВерсииФайлов КАК ВерсииФайлов
			|ГДЕ
			|	ВерсииФайлов.РодительскаяВерсия = &РодительскаяВерсия";

		Запрос.УстановитьПараметр("РодительскаяВерсия", Ссылка);

		Результат = Запрос.Выполнить();

		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка);
			Объект.РодительскаяВерсия = РодительскаяВерсия;
			Объект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВТомахНаДиске Тогда
		Если НЕ Том.Пустая() Тогда
			ПолныйПуть = РаботаСФайлами.ПолныйПутьТома(Том) + ПутьКФайлу; 
			Попытка
				Файл = Новый Файл(ПолныйПуть);
				Файл.УстановитьТолькоЧтение(Ложь);
				УдалитьФайлы(ПолныйПуть);
				
				ПутьСПодкаталогом = Файл.Путь;
				МассивФайловВКаталоге = НайтиФайлы(ПутьСПодкаталогом, "*.*");
				Если МассивФайловВКаталоге.Количество() = 0 Тогда
					УдалитьФайлы(ПутьСПодкаталогом);
				КонецЕсли;
				
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
