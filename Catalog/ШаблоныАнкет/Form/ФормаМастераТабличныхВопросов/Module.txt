&НаКлиенте
Перем ЗначенияПеречисленияТипыТабличныхВопросов;
&НаКлиенте
Перем ЗначенияПустыеСсылки;
&НаКлиенте
Перем ЗначенияПеречисленияТипыОтветовНаВопрос;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ 

&НаКлиенте
Процедура УстановитьИнформационныеНадписи()

	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Элементы.СтраницаРезультирущаяТаблица Тогда
		ИнформацияШапка 				= НСтр("ru='Результирующая таблица:'");
		ИнформацияПодвал			 	= НСтр("ru='Нажмите Готово для окончания редактирования.'");
		Элементы.КнопкаВперед.Заголовок 	= НСтр("ru='Готово'");
	Иначе
		Элементы.КнопкаВперед.Заголовок = НСтр("ru='Вперед>>'");
		Если ТекущаяСтраница = Элементы.СтраницаВопросы Тогда
			Если ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.Составной Тогда
				 ИнформацияШапка 		= НСтр("ru='Подбор вопросов. Укажите хотя бы один вопрос:'");
				 ИнформацияПодвал		= НСтр("ru='Нажмите Вперед для просмотра получившейся таблицы.'");
			 ИначеЕсли ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда
                 ИнформацияШапка 		=НСтр("ru='Подбор вопросов. Укажите три вопроса:'");
				 ИнформацияПодвал		=НСтр("ru='Нажмите Вперед для подбора предопределенных ответов.'");
			 Иначе
				 ИнформацияШапка 		=НСтр("ru='Подбор вопросов. Укажите как минимум два вопроса:'");
				 ИнформацияПодвал		=НСтр("ru='Нажмите Вперед для подбора предопределенных ответов.'");
			 КонецЕсли;	 
		ИначеЕсли ТекущаяСтраница = Элементы.СтраницаТипТабличногоВопроса Тогда
			 ИнформацияШапка 		= НСтр("ru='Выбор типа табличного вопроса:'");                               
			 ИнформацияПодвал		= НСтр("ru='Нажмите Вперед для подбора вопросов:'");
		 Иначе
			 ИнформацияШапка		= НСтр("ru='Подбор предопределенных ответов:'");
			 ИнформацияПодвал		= НСтр("ru='Нажмите Вперед для просмотра получившейся таблицы:'");
		КонецЕсли;	
	КонецЕсли;	

КонецПроцедуры
// Управляет доступностью реквизитов формы
&НаКлиенте                                                                                               
Процедура УправлениеДоступностью()

	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	
	Элементы.КнопкаНазад.Доступность 	= (НЕ ТекущаяСтраница = Элементы.СтраницаТипТабличногоВопроса);
		
	Если ТекущаяСтраница = Элементы.СтраницаПредопределенныеОтветыВСтрокахИКолонках Тогда
		 		
		Если НЕ ВсеОтветыЗаполнены() Тогда
			Элементы.КнопкаВперед.Доступность = Ложь;
			Возврат;
		КонецЕсли;			
		
		Элементы.ЗаполнитьКолонкиВариантыОтветовОтветыСтрокахИКолонках.Доступность 	= (Вопросы[1].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.НесколькоВариантовИз 
																				   Или Вопросы[1].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.ОдинВариантИз);
																				  
		Элементы.ЗаполнитьСтрокиВариантыОтветовОтветыСтрокиИКолонки.Доступность 	= (Вопросы[0].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.НесколькоВариантовИз 
																				   Или Вопросы[0].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.ОдинВариантИз);
		
		Если Ответы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",ВопросДляКолонок)).Количество() > 0 
			И Ответы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",ВопросДляСтрок)).Количество() > 0  Тогда
			
			Элементы.КнопкаВперед.Доступность = Истина;
			
		Иначе
			
			Элементы.КнопкаВперед.Доступность = Ложь;
			
		КонецЕсли;	
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаПредопределенныеОтветыВСтроках Тогда
		
		Элементы.ЗаполнитьВариантыОтветовОтветыСтроки.Доступность = (Вопросы[0].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.НесколькоВариантовИз 
													 			 Или Вопросы[0].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.ОдинВариантИз);
		
		Если НЕ ВсеОтветыЗаполнены() Тогда
			Элементы.КнопкаВперед.Доступность = Ложь;
			Возврат;
		КонецЕсли;
		
		Элементы.КнопкаВперед.Доступность = (Ответы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",ВопросДляСтрок)).Количество() > 0);
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаПредопределенныеОтветыВКолонках Тогда
		
		Элементы.ЗаполнитьВариантыОтветовОтветыКолонки.Доступность = (Вопросы[0].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.НесколькоВариантовИз 
																  Или Вопросы[0].ТипОтвета = ЗначенияПеречисленияТипыОтветовНаВопрос.ОдинВариантИз);
																				  
		Если НЕ ВсеОтветыЗаполнены() Тогда
			Элементы.КнопкаВперед.Доступность = Ложь;
			Возврат;
		КонецЕсли;
		
		Элементы.КнопкаВперед.Доступность = (Ответы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",ВопросДляКолонок)).Количество() > 0);
        		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаТипТабличногоВопроса Тогда	
				
		Элементы.КнопкаВперед.Доступность 	= ТипТабличногоВопроса <> ЗначенияПеречисленияТипыТабличныхВопросов.ПустаяСсылка;
				
		Если ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.Составной Тогда
			
			Элементы.СтраницыТипТабличногоВопросаКартинки.ТекущаяСтраница = Элементы.СтраницаКартинкаСоставной;
			
		ИначеЕсли ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтроках Тогда
			
			Элементы.СтраницыТипТабличногоВопросаКартинки.ТекущаяСтраница = Элементы.СтраницаКартинкаОтветыВСтроках;
	
		ИначеЕсли ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках Тогда
			
			Элементы.СтраницыТипТабличногоВопросаКартинки.ТекущаяСтраница = Элементы.СтраницаКартинкаОтветыВКолонках;
			
		ИначеЕсли ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда
			
			Элементы.СтраницыТипТабличногоВопросаКартинки.ТекущаяСтраница = Элементы.СтраницаКартинкаОтветыВСтрокахИКолонках;
			
		Иначе
			
			Элементы.СтраницыТипТабличногоВопросаКартинки.ТекущаяСтраница = Элементы.СтраницаКартинкаПустая;
			
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаВопросы Тогда	
		
		Если Вопросы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",ЗначенияПустыеСсылки.ВопросыДляАнкетирования)).Количество() <> 0  Тогда
		     Элементы.КнопкаВперед.Доступность = Ложь;
			 Возврат;
		КонецЕсли;
		
		Если ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.Составной Тогда
			
			Элементы.КнопкаВперед.Доступность = (Вопросы.Количество() > 0); 
			
		ИначеЕсли ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтроках Тогда
			
			Элементы.КнопкаВперед.Доступность = (Вопросы.Количество() > 1);
			
		ИначеЕсли ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках Тогда
			
			Элементы.КнопкаВперед.Доступность = (Вопросы.Количество() > 1);
			
		ИначеЕсли ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда
			
			Элементы.КнопкаВперед.Доступность = (Вопросы.Количество() = 3);
			
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаРезультирущаяТаблица Тогда	
		
		Элементы.КнопкаВперед.Доступность 	=  ЗначениеЗаполнено(Формулировка);
		
	КонецЕсли; 	

КонецПроцедуры // УправлениеДоступностью()

// Проверяет, все ли ответы заполнены
//
// Возвращаемое значение:
//   Булево   - Истина если все ответы заполнены
//
&НаКлиенте
Функция ВсеОтветыЗаполнены()

	Для каждого Ответ Из Ответы Цикл
	
		Если НЕ ЗначениеЗаполнено(Ответ.Ответ) Тогда		
			Возврат  Ложь;		
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Истина;

КонецФункции // ()
  
// Процедура получает необходмые значения предопределенных значений,
// необходимых на клиенте.
&НаСервере                                                                                            
Процедура ПолучениеПредопределенныхЗначенийНеобходимыхНаКлиенте()
    	
	ПеречислениеТипыТабличныхВопросов = Анкетирование.ПолучитьСтруктуруЗначенияПеречисления("ТипыТабличныхВопросов",Истина);
	ПредопределеныеЗначенияНеобходимыеНаКлиенте.Вставить(0,ПеречислениеТипыТабличныхВопросов);
	
	СтруктураПустыеСсылки = Новый Структура();
	СтруктураПустыеСсылки.Вставить("ВопросыДляАнкетирования",ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка());
	ПредопределеныеЗначенияНеобходимыеНаКлиенте.Вставить(1,СтруктураПустыеСсылки);
	
	ПеречислениеТипыОтветовНаВопрос = Анкетирование.ПолучитьСтруктуруЗначенияПеречисления("ТипыОтветовНаВопрос",Истина);
	ПредопределеныеЗначенияНеобходимыеНаКлиенте.Вставить(2,ПеречислениеТипыОтветовНаВопрос);

                                                                                                               
КонецПроцедуры // ПредопределеныеЗначенияНеобходимыеНаКлиенте() 
                                                                                                                   
// Процедура обрабатывает начало выбора из списков, и устанавливает отборы в формах выбора
&НаКлиенте
Процедура НачалоВыбораСписков(Элемент,СтандартнаяОбработка,ОписаниеДоступныхТипов)
	
	Если ТипЗнч(ЭтаФорма[Элемент.СвязьПоТипу.ПутьКДанным]) = Тип("ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования") Тогда
		
		Если ОписаниеДоступныхТипов.СодержитТип(Тип("СправочникСсылка.ВариантыОтветовАнкет")) И (ОписаниеДоступныхТипов.Типы().Количество() = 1 ) Тогда
			
			СтандартнаяОбработка = ЛОЖЬ;
			
			МассивОтбора = Новый Массив;
			МассивОтбора.Добавить(АнкетированиеКлиент.СоздатьСтруктуруПараметраОтбора(Тип("ЭлементОтбораКомпоновкиДанных"),"Владелец",ВидСравненияКомпоновкиДанных.Равно,ЭтаФорма[Элемент.СвязьПоТипу.ПутьКДанным]));
			МассивОтбора.Добавить(АнкетированиеКлиент.СоздатьСтруктуруПараметраОтбора(Тип("ЭлементОтбораКомпоновкиДанных"),"ПометкаУдаления",ВидСравненияКомпоновкиДанных.Равно,ЛОЖЬ));
			
			ОткрытьФорму("Справочник.ВариантыОтветовАнкет.Форма.ФормаВыбора",Новый Структура("МассивОтбора",МассивОтбора),Элемент);
			
		КонецЕсли;	
		
	КонецЕсли; 
	
КонецПроцедуры // ()

// Процедура очищает таблицу ответов, от ответов, родительский вопрос которых
// не входит в МассивВопросов, выступающий в качестве параметра
&НаКлиенте
Процедура ОчиститьСписокОтветовЕслиНеобходимо(МассивВопросов)
	
	УдаляемыеОтветы = Новый Массив;
	
	Для каждого Ответ Из Ответы Цикл
		
		Если МассивВопросов.Найти(Ответ.ЭлементарныйВопрос) = Неопределено Тогда		
			 УдаляемыеОтветы.Добавить(Ответ);		
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого УдаляемыйОтвет Из УдаляемыеОтветы Цикл	
		Ответы.Удалить(УдаляемыйОтвет);	
	КонецЦикла;
		
КонецПроцедуры // ОчиститьПодчиненныйСписокЕслиНеобходимо() 

 // Устанавливает нужную страницу формирвания структуры табличного вопроса в зависимости от
 // выбранного типа табличного вопроса
&НаКлиенте
Процедура УстановитьСтраницуОтветы()
	
	
	МассивВопросовДляКоторыйДолжныБытьОтветы = Новый Массив;	
	
	Если ТипТабличногоВопроса =  ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда 
		
		Элементы.Страницы.ТекущаяСтраница 	= Элементы.СтраницаПредопределенныеОтветыВСтрокахИКолонках;
		ПредставлениеВопросаДляСтрок 		= Вопросы[0].Формулировка;
		ВопросДляСтрок						= Вопросы[0].ЭлементарныйВопрос;
		ПредставлениеВопросаДляКолонок   	= Вопросы[1].Формулировка;
		ВопросДляКолонок					= Вопросы[1].ЭлементарныйВопрос;
		
		МассивВопросовДляКоторыйДолжныБытьОтветы.Добавить(ВопросДляСтрок);
		МассивВопросовДляКоторыйДолжныБытьОтветы.Добавить(ВопросДляКолонок);
		
	ИначеЕсли ТипТабличногоВопроса =  ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтроках Тогда 
		
		Элементы.Страницы.ТекущаяСтраница 	= Элементы.СтраницаПредопределенныеОтветыВСтроках;
		ПредставлениеВопросаДляСтрок 		= Вопросы[0].Формулировка;
		ВопросДляСтрок					  	= Вопросы[0].ЭлементарныйВопрос; 
		
		МассивВопросовДляКоторыйДолжныБытьОтветы.Добавить(ВопросДляСтрок);		
		
	ИначеЕсли ТипТабличногоВопроса 		=  ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках Тогда 
		
		Элементы.Страницы.ТекущаяСтраница 	= Элементы.СтраницаПредопределенныеОтветыВКолонках;
		ПредставлениеВопросаДляКолонок    	= Вопросы[0].Формулировка;
		ВопросДляКолонок					= Вопросы[0].ЭлементарныйВопрос;
		
		МассивВопросовДляКоторыйДолжныБытьОтветы.Добавить(ВопросДляКолонок);
		
	КонецЕсли; 
	
	ОчиститьСписокОтветовЕслиНеобходимо(МассивВопросовДляКоторыйДолжныБытьОтветы);
	УстановитьОтборы();
			
КонецПроцедуры // ()

// Формирует результирующую таблицу вопроса
&НаСервере
Процедура СформироватьРезультирующуюТаблицу()
	
	Анкетирование.ОбновитьПревьюТабличныйВопрос(РеквизитФормыВЗначение("Вопросы"),Ответы,ТипТабличногоВопроса,ЭтаФорма,"РезультирующаяТаблица","");
	 	
КонецПроцедуры // ()

// Формирует структуру возврата для передачи в форму владельца
&НаКлиенте
Функция СформироватьСтруктуруПараметровДляПередачиВладельцу()

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТипТабличногоВопроса",ТипТабличногоВопроса);
	
	ВопросыКВозврату = Новый Массив;
	Для каждого СтрокаТаблицы Из Вопросы Цикл
	    ВопросыКВозврату.Добавить(СтрокаТаблицы.ЭлементарныйВопрос);	
	КонецЦикла;
	СтруктураПараметров.Вставить("Вопросы",ВопросыКВозврату);
	СтруктураПараметров.Вставить("Ответы" ,Ответы);
	СтруктураПараметров.Вставить("Формулировка",Формулировка);

	Возврат СтруктураПараметров;	

КонецФункции // ()

// Обрабатывает параметры формы владельца
//
&НаСервере
Процедура ОбработатьПараметрыФормыВладельца()
	
	Формулировка = Параметры.Формулировка;
	
	Если НЕ Параметры.ТипТабличногоВопроса.Пустая() Тогда
		ТипТабличногоВопроса = Параметры.ТипТабличногоВопроса;
	Иначе
		ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.Составной;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Вопросы.ЭлементарныйВопрос,
	|	Вопросы.НомерСтроки
	|ПОМЕСТИТЬ ЭлементарныеВопросы
	|ИЗ
	|	&Вопросы КАК Вопросы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭлементарныеВопросы.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.Представление, """""""") КАК Представление,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.Формулировка, """""""") КАК Формулировка,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ТипОтвета, """") КАК ТипОтвета
	|ИЗ
	|	ЭлементарныеВопросы КАК ЭлементарныеВопросы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|		ПО ЭлементарныеВопросы.ЭлементарныйВопрос = ВопросыДляАнкетирования.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭлементарныеВопросы.НомерСтроки"; 	
	
	Запрос.УстановитьПараметр("Вопросы",Параметры.СоставТабличногоВопроса.Выгрузить());
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Вопросы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
			
		КонецЦикла;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Параметры.ПредопределенныеОтветы,Ответы);	
	
КонецПроцедуры // ОбработатьПараметрыФормыВладельца()                                     

// Устанавливает отборы в элементы форм, предназначенные для
// составления списка предопределенных ответов
&НаКлиенте
Процедура УстановитьОтборы()
	
	Если ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда
		
		Элементы.ОтветыКолонкиОтветыВСтрокахИКолонках.ОтборСтрок 	= Новый ФиксированнаяСтруктура("ЭлементарныйВопрос",ВопросДляКолонок);
		Элементы.ОтветыСтрокиОтветыВСтрокахИКолонках.ОтборСтрок 	= Новый ФиксированнаяСтруктура("ЭлементарныйВопрос",ВопросДляСтрок);
		
	ИначеЕсли ТипТабличногоВопроса =  ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВСтроках Тогда 
		
		Элементы.ОтветыСтрокиОтветыВСтроках.ОтборСтрок				= Новый ФиксированнаяСтруктура("ЭлементарныйВопрос",ВопросДляСтрок);
		
	ИначеЕсли ТипТабличногоВопроса 		=  ЗначенияПеречисленияТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках Тогда 	 
		
		Элементы.ОтветыКолонкиОтветыВКолонках.ОтборСтрок			= Новый ФиксированнаяСтруктура("ЭлементарныйВопрос",ВопросДляКолонок);
		
	КонецЕсли;  	 
	
КонецПроцедуры // УстановитьОтборы()

// Вызывается при изменении элементов форма, связанных с таблицей ответов
// Параметры
// Элемент		  - ТаблицаФормы - ЭлементКоторыйВызвал изменение
&НаКлиенте
Процедура ПриИзмененииОтветов(Элемент)
 	
	УправлениеДоступностью();
	УстановитьОтборы();
	Элемент.Обновить();
	
КонецПроцедуры // ()

&НаКлиенте
Процедура ОбработатьЭлементПодбораОтветовПослеДобавления(Элемент,ДобавленнаяСтрока)
    	
	Элемент.ТекущаяСтрока = ДобавленнаяСтрока.ПолучитьИдентификатор();
	УстановитьОтборы();
	Элемент.Обновить();
	УправлениеДоступностью();

КонецПроцедуры //

&НаКлиенте
Функция ДобавлениеОтветаИнтерактивно(Элемент,Копирование,НомерОпорногоВопроса)

	Если Копирование Тогда
		
		НоваяСтрока = Ответы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Элемент.ТекущиеДанные);
		
	Иначе	
		
		Если Вопросы.Количество() >= НомерОпорногоВопроса+1 Тогда
			
			НоваяСтрока = Ответы.Добавить();
			НоваяСтрока.ЭлементарныйВопрос = Вопросы[НомерОпорногоВопроса].ЭлементарныйВопрос;
			
		Иначе
			Возврат Неопределено;				
		КонецЕсли;
		
	КонецЕсли; 

	
	Возврат НоваяСтрока;
	
КонецФункции 

&НаКлиенте                                                                                     
Процедура ЗакончитьРедактированиеИЗакрыть()
	
	Если ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.Составной Тогда
	     Ответы.Очистить();	
	КонецЕсли;
	
	Оповестить("ОкончаниеРедактированияПараметровТабличногоВопроса",СформироватьСтруктуруПараметровДляПередачиВладельцу()); 	
	Закрыть();
	
КонецПроцедуры 

// Очищает ответы и заполняет их вариантами ответов
//
// Параметры
//  ЭлементарныйВопрос  - ПланВидовХарактеристик.ВопросыДляАнкетирования - вопрос для которого будут заполнены его варианты ответов
//
&НаСервере
Процедура ОчиститьЗаполнитьВариантыОтветов(ЭлементарныйВопрос)
	
	Если Не ЗначениеЗаполнено(ЭлементарныйВопрос) Тогда
		Возврат;	
	КонецЕсли;
	
	НайденныеСтроки = Ответы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",ЭлементарныйВопрос));
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Ответы.Удалить(Ответы.Индекс(НайденнаяСтрока));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВариантыОтветовАнкет.Ссылка КАК Ответ
	               |ИЗ
	               |	Справочник.ВариантыОтветовАнкет КАК ВариантыОтветовАнкет
	               |ГДЕ
	               |	ВариантыОтветовАнкет.Владелец = &ЭлементарныйВопрос
	               |	И (НЕ ВариантыОтветовАнкет.ПометкаУдаления)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВариантыОтветовАнкет.РеквизитДопУпорядочивания";
	
	Запрос.УстановитьПараметр("ЭлементарныйВопрос",ЭлементарныйВопрос);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Ответы.Добавить();
			НоваяСтрока.ЭлементарныйВопрос 	= ЭлементарныйВопрос;
			НоваяСтрока.Ответ				= Выборка.Ответ;
		КонецЦикла;
		
	КонецЕсли; 	
	
КонецПроцедуры // ()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗначенияПеречисленияТипыТабличныхВопросов 	= ПредопределеныеЗначенияНеобходимыеНаКлиенте.Получить(0).Значение;
	ЗначенияПустыеСсылки						= ПредопределеныеЗначенияНеобходимыеНаКлиенте.Получить(1).Значение;
	ЗначенияПеречисленияТипыОтветовНаВопрос     = ПредопределеныеЗначенияНеобходимыеНаКлиенте.Получить(2).Значение;

	УправлениеДоступностью();
	УстановитьИнформационныеНадписи();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//получим предопределенные значения, которые нам понадобятся на клиенты 
	ПолучениеПредопределенныхЗначенийНеобходимыхНаКлиенте();
	
	//Установим список выбора для типа табличного вопроса
	Для каждого ЭлементМетаданных Из Метаданные.Перечисления.ТипыТабличныхВопросов.ЗначенияПеречисления Цикл
		Элементы.ТипТабличногоВопроса.СписокВыбора.Добавить(Перечисления.ТипыТабличныхВопросов[ЭлементМетаданных.Имя],ЭлементМетаданных.Синоним);
	КонецЦикла;
	
	//Установим первую страницу
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТипТабличногоВопроса;
	
	//Примем параметры формы владельца
	ОбработатьПараметрыФормыВладельца(); 	
	                            			 		
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ ФОРМЫ 

&НаКлиенте
Процедура СледующаяСтраница(Команда)
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Элементы.СтраницаТипТабличногоВопроса Тогда	
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы;
		
	ИначеЕсли (ТекущаяСтраница = Элементы.СтраницаВопросы) И (ТипТабличногоВопроса <> ЗначенияПеречисленияТипыТабличныхВопросов.Составной) Тогда
		
		УстановитьСтраницуОтветы();
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаРезультирущаяТаблица Тогда
		
		ЗакончитьРедактированиеИЗакрыть(); 		
		
	Иначе
		
		СформироватьРезультирующуюТаблицу();
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРезультирущаяТаблица;		
		
	КонецЕсли;
	
	УправлениеДоступностью();
	УстановитьИнформационныеНадписи();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяСтраница(Команда)

	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРезультирущаяТаблица Тогда
		
		Если ТипТабличногоВопроса = ЗначенияПеречисленияТипыТабличныхВопросов.Составной Тогда
		   Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы;
		Иначе
		   УстановитьСтраницуОтветы();
		КонецЕсли;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТипТабличногоВопроса;
		
	Иначе 
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы;
		
	КонецЕсли;
	
	УправлениеДоступностью();
	УстановитьИнформационныеНадписи(); 
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьВариантыОтветовОтветыВСтроках(Команда)
	
	ОчиститьЗаполнитьВариантыОтветов(ВопросДляСтрок);
	УстановитьОтборы();
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВариантыОтветовОтветыВКолонках(Команда)
	
	ОчиститьЗаполнитьВариантыОтветов(ВопросДляКолонок);
	УстановитьОтборы();
	УправлениеДоступностью();
	
КонецПроцедуры 

//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ                                                   

&НаКлиенте                                                                                            
Процедура ТипТабличногоВопросаПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// КОМАНДЫ ФОРМЫ 
&НаКлиенте
Процедура ВопросыВопросОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = Неопределено Тогда
	    Возврат;	
	КонецЕсли;
	
	РеквизитыВопрос = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ВыбранноеЗначение,"Представление,Формулировка,ЭтоГруппа,ТипОтвета");
    Если РеквизитыВопрос.ЭтоГруппа Тогда
	     Возврат;	
	КонецЕсли;
		
	ТекЭлемент = Вопросы.НайтиПоИдентификатору(Элементы.Вопросы.ТекущаяСтрока);
	ТекЭлемент.ЭлементарныйВопрос = ВыбранноеЗначение;
	
	ТекЭлемент.Представление 	= РеквизитыВопрос.Представление;
	ТекЭлемент.Формулировка 	= РеквизитыВопрос.Формулировка;
	ТекЭлемент.ТипОтвета	    = РеквизитыВопрос.ТипОтвета;
	
	УправлениеДоступностью();
	
КонецПроцедуры
 
&НаКлиенте
Процедура ОтветыСтрокиОтветыВСтрокахПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	НоваяСтрока = ДобавлениеОтветаИнтерактивно(Элемент,Копирование,0);
	ОбработатьЭлементПодбораОтветовПослеДобавления(Элемент,НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыКолонкиОтветыВКолонкахПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	НоваяСтрока = ДобавлениеОтветаИнтерактивно(Элемент,Копирование,0);
	ОбработатьЭлементПодбораОтветовПослеДобавления(Элемент,НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыКолонкиОтветыВСтрокахИКолонкахОтветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСписков(Элемент,СтандартнаяОбработка,ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВопросДляКолонок,"ТипЗначения"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыСтрокиОтветыВСтрокахОтветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСписков(Элемент,СтандартнаяОбработка,ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВопросДляСтрок,"ТипЗначения"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыСтрокиОтветыВСтрокахИКолонкахОтветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСписков(Элемент,СтандартнаяОбработка,ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВопросДляСтрок,"ТипЗначения"));	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыКолонкиОтветыВКолонкахОтветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСписков(Элемент,СтандартнаяОбработка,ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВопросДляКолонок,"ТипЗначения"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыКолонкиОтветыВСтрокахИКолонкахПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	НоваяСтрока = ДобавлениеОтветаИнтерактивно(Элемент,Копирование,1);
	ОбработатьЭлементПодбораОтветовПослеДобавления(Элемент,НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыСтрокиОтветыВСтрокахИКолонкахПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	НоваяСтрока = ДобавлениеОтветаИнтерактивно(Элемент,Копирование,0);
	ОбработатьЭлементПодбораОтветовПослеДобавления(Элемент,НоваяСтрока);
	
КонецПроцедуры
 
&НаКлиенте
Процедура ВопросыПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыКолонкиОтветыВСтрокахИКолонкахПриИзменении(Элемент)
	
	ПриИзмененииОтветов(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыСтрокиОтветыВСтрокахИКолонкахПриИзменении(Элемент)
	
	ПриИзмененииОтветов(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыКолонкиОтветыВКолонкахПриИзменении(Элемент)
	
	ПриИзмененииОтветов(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыСтрокиОтветыВСтрокахПриИзменении(Элемент)
	
	ПриИзмененииОтветов(Элемент);
	
КонецПроцедуры
 
&НаКлиенте
Процедура ФормулировкаПриИзменении(Элемент)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРезультирущаяТаблица Тогда	
		
		Элементы.КнопкаВперед.Доступность 	=  ЗначениеЗаполнено(Формулировка);
		
	КонецЕсли;
	
КонецПроцедуры

   