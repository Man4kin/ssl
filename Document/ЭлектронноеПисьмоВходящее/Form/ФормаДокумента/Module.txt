
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Запретим создание новых
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Установим текст и вид текста
	Если Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML Тогда
		ТекстПисьма = Объект.ТекстHTML;
		Элементы.ТекстПисьма.Вид = ВидПоляФормы.ПолеHTMLДокумента;
	Иначе
		ТекстПисьма = Объект.Текст;
		Элементы.ТекстПисьма.Вид = ВидПоляФормы.ПолеТекстовогоДокумента;
	КонецЕсли;
	
	// Сформируем представление отправителя
	ОтправительПредставление = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеАдресата(Объект.ОтправительПредставление, Объект.ОтправительАдрес, Объект.ОтправительКонтакт);
	
	// Сформируем представление Кому и Копии
	ПолучателиПредставление            = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиПисьма);
	ПолучателиКопийПредставление       = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиКопий);
	ПолучателиОтветаПредставление      = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиОтвета);
	
	// Заполним вложения
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		табВложения = УправлениеЭлектроннойПочтой.ПолучитьВложенияЭлектронногоПисьма(Объект.Ссылка);
		
		Если табВложения.Количество() > 0 Тогда
			ЗначениеВРеквизитФормы(табВложения, "Вложения");
		Иначе
			Элементы.ОткрытьВложение.Видимость = Ложь;
			Элементы.СохранитьВложение.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполним список выбора для поля ОтработатьПосле
	Взаимодействия.ЗаполнитьСписокВыбораДляОтработатьПосле(Элементы.ОтработатьПосле.СписокВыбора);
	Если Объект.Отработано Тогда
		Элементы.ОтработатьПосле.Доступность = Ложь;
	КонецЕсли;
		
	ДополнительнаяИнформацияОПисьме = НСтр("ru = 'Создано:'") + "   " + Объект.Дата + НСтр("ru = '
	|Получено:'") + "  " + Объект.ДатаПолучения + НСтр("ru = '
	|Важность:'") + "  " + Объект.Важность + НСтр("ru = '
	|Кодировка:'") + " " + Объект.Кодировка;

	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Контакт создан" И Параметр.Основание = Объект.Ссылка Тогда
		Элементы.Участники.ТекущиеДанные.Контакт = Параметр.Ссылка;
		Элементы.СоздатьКонтакт.Доступность = Ложь;
		Модифицированность = Истина;
		Если ПустаяСтрока(Элементы.Участники.ТекущиеДанные.Представление) Тогда
			Элементы.Участники.ТекущиеДанные.Представление = Параметр.Наименование;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Создан предмет взаимодействия" И Параметр.Основание = Объект.Ссылка Тогда
		Прочитать();
		ОтобразитьИзменениеДанных(Объект.Предмет, ВидИзмененияДанных.Изменение);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, РежимЗаписи, РежимПроведения)
	
	Взаимодействия.ПередЗаписьюВзаимодействияИзФормы(ТекущийОбъект);
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура УточнитьКонтактыВыполнить()

	РедактироватьПолучателей();

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВложениеВыполнить()
	
	ОткрытьВложение();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВложениеВыполнить()
	
	ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ДанныеФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ТекущиеДанные.Ссылка,УникальныйИдентификатор);
		ПрисоединенныеФайлыКлиент.СохранитьФайлКак(ДанныеФайла);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительноВыполнить()
	
	Текст = Новый ТекстовыйДокумент;
	Текст.ДобавитьСтроку(ДополнительнаяИнформацияОПисьме);
	Текст.ДобавитьСтроку("");
	Текст.ДобавитьСтроку("");
	Текст.ДобавитьСтроку("-------------------------------------------------");
	Текст.ДобавитьСтроку(Объект.ВнутреннийЗаголовок);
	Текст.Показать();

КонецПроцедуры

&НаКлиенте
Процедура СвязанныеВзаимодействияВыполнить()

	ОткрытьФормуМодально("ЖурналДокументов.Взаимодействия.ФормаСписка",
	Новый Структура("ОбъектОтбора", Объект.Предмет));

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКодировку(Команда)
	
	СписокКодировок = УправлениеЭлектроннойПочтой.ПолучитьСписокКодировок();
	ВыбраннаяКодировка = СписокКодировок.ВыбратьЭлемент("ВыберитеКодировку",СписокКодировок.НайтиПоЗначению(НРег(Объект.Кодировка)));
	Если ВыбраннаяКодировка <> Неопределено Тогда
	    ПреобразоватьКодировкуПисьма(ВыбраннаяКодировка.Значение);	
	КонецЕсли;
	
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОткрытьВложение();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработатьПослеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВзаимодействияКлиент.ОбработатьВыборВПолеОтработатьПосле(Объект.ОтработатьПосле, ВыбранноеЗначение, СтандартнаяОбработка, Модифицированность);

КонецПроцедуры

&НаКлиенте
Процедура ОтработаноПриИзменении(Элемент)
	
	Элементы.ОтработатьПосле.Доступность = НЕ Объект.Отработано;	
	Если Объект.Отработано Тогда
		Объект.ОтработатьПосле = Неопределено;
	КонецЕсли;
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ОткрытьВложение()
	
	ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		УправлениеЭлектроннойПочтойКлиент.ОткрытьВложение(ТекущиеДанные.Ссылка,УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПолучателей()

	// Получим список адресатов
	масОтправитель = Новый Массив;
	масОтправитель.Добавить(Новый Структура("Адрес,Представление,Контакт", Объект.ОтправительАдрес, Объект.ОтправительПредставление, Объект.ОтправительКонтакт));

	спсПолучатели = Новый СписокЗначений;
	спсПолучатели.Добавить(масОтправитель, "Отправитель");
	спсПолучатели.Добавить(УправлениеЭлектроннойПочтойКлиент.ТаблицуКонтактовВМассив(Объект.ПолучателиПисьма), "Получатели");
	спсПолучатели.Добавить(УправлениеЭлектроннойПочтойКлиент.ТаблицуКонтактовВМассив(Объект.ПолучателиКопий),  "Копии");
	спсПолучатели.Добавить(УправлениеЭлектроннойПочтойКлиент.ТаблицуКонтактовВМассив(Объект.ПолучателиОтвета), "Ответ");

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗапись",   Объект.УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("СписокВыбранных", спсПолучатели);
	ПараметрыОткрытия.Вставить("Предмет",         Объект.Предмет);

	// Откроем форму для редактирования списка адресатов
	Результат = ОткрытьФормуМодально("ОбщаяФорма.УточнениеКонтактов", ПараметрыОткрытия);
	Если ТипЗнч(Результат) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;

	// Исправим выбранные контакты
	УправлениеЭлектроннойПочтойКлиент.ИсправитьКонтакт(Объект.ОтправительАдрес, Объект.ОтправительПредставление, Объект.ОтправительКонтакт, Результат);
	ИсправитьКонтактыВТаблице(Объект.ПолучателиПисьма, Результат);
	ИсправитьКонтактыВТаблице(Объект.ПолучателиКопий,  Результат);
	ИсправитьКонтактыВТаблице(Объект.ПолучателиОтвета, Результат);
	
	// Сформируем представления контактов
	СформироватьПредставленияКонтактов();

	// Установим признак модифицированности
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ИсправитьКонтактыВТаблице(ТабЧасть, соотвКонтактов)
	
	Для Каждого Стр Из ТабЧасть Цикл
		УправлениеЭлектроннойПочтойКлиент.ИсправитьКонтакт(Стр.Адрес, Стр.Представление, Стр.Контакт, соотвКонтактов);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставленияКонтактов() 

	// Сформируем представление отправителя
	ОтправительПредставление = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеАдресата(Объект.ОтправительПредставление, Объект.ОтправительАдрес, Объект.ОтправительКонтакт);
	
	// Сформируем представление Кому и Копии
	ПолучателиПредставление            = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиПисьма);
	ПолучателиКопийПредставление       = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиКопий);
	ПолучателиОтветаПредставление      = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиОтвета);

КонецПроцедуры

&НаСервере
Процедура ПреобразоватьКодировкуПисьма(ВыбраннаяКодировка)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла,Объект.Кодировка);
	ЗаписьТекста.Записать(?(Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML,Объект.ТекстHTML,Объект.Текст));
	ЗаписьТекста.Закрыть();
	
	ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла,ВыбраннаяКодировка);
	Если Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML Тогда	
		Объект.ТекстHTML = ЧтениеТекста.Прочитать();
		ТекстПисьма = Объект.ТекстHTML;
	Иначе
		Объект.Текст = ЧтениеТекста.Прочитать();
		ТекстПисьма = Объект.Текст;
	КонецЕсли;
	ЧтениеТекста.Закрыть();
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла,Объект.Кодировка);
	ЗаписьТекста.ЗаписатьСтроку(ОтправительПредставление);
	ЗаписьТекста.ЗаписатьСтроку(ПолучателиКопийПредставление);
	ЗаписьТекста.ЗаписатьСтроку(ПолучателиОтветаПредставление);
	ЗаписьТекста.ЗаписатьСтроку(ПолучателиПредставление);
	ЗаписьТекста.ЗаписатьСтроку(Объект.Тема);
	ЗаписьТекста.Закрыть();
	
	ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла,ВыбраннаяКодировка);
	ОтправительПредставление = ЧтениеТекста.ПрочитатьСтроку();
	ПолучателиКопийПредставление = ЧтениеТекста.ПрочитатьСтроку();
	ПолучателиОтветаПредставление = ЧтениеТекста.ПрочитатьСтроку();
	ПолучателиПредставление = ЧтениеТекста.ПрочитатьСтроку();
	Объект.Тема = ЧтениеТекста.ПрочитатьСтроку();
	ЧтениеТекста.Закрыть();
	
	Объект.Кодировка = ВыбраннаяКодировка;
	
КонецПроцедуры // ()
