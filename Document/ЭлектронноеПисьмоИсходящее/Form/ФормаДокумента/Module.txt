
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если Параметры.Свойство("Вложения") Тогда
			
			Для каждого Вложение Из Параметры.Вложения Цикл
				
				новСтр = Вложения.Добавить();
				новСтр.Расположение = 2;
				новСтр.ИмяФайлаНаКомпьютере = Вложение.Значение;
				
				ИмяФайла   = "";
				Расширение = "";
				ВзаимодействияКлиентСервер.ПолучитьКаталогИИмяФайла(Вложение.Значение, "", ИмяФайла);
				новСтр.ИмяФайла = Вложение.Представление;
				
				Расширение = ВзаимодействияКлиентСервер.ПолучитьРасширениеФайла(ИмяФайла);
				новСтр.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(Расширение);
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Параметры.Свойство("Тема") Тогда
			Объект.Тема = Параметры.Тема;
		КонецЕсли;
		
		Если Параметры.Свойство("Тело") Тогда
			Объект.Текст = Параметры.Тело;
		КонецЕсли;
		
		Если Параметры.Свойство("УчетнаяЗапись") Тогда
			
			Объект.УчетнаяЗапись = Параметры.УчетнаяЗапись;
			РеквизитыОтправителя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Параметры.УчетнаяЗапись,"Ссылка,ИмяПользователя,АдресЭлектроннойПочты");
			Объект.ОтправительПредставление = УправлениеЭлектроннойПочтой.ПолучитьПредставлениеАдресата(РеквизитыОтправителя.ИмяПользователя,РеквизитыОтправителя.АдресЭлектроннойПочты,"");
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполним список кодировок
	СписокКодировок = УправлениеЭлектроннойПочтой.ПолучитьСписокКодировок();
	Для Каждого Элемент Из СписокКодировок Цикл
		Элементы.Кодировка.СписокВыбора.Добавить(Элемент.Значение);
	КонецЦикла;

	Если Объект.СтатусПисьма <> Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик Тогда
		Элементы.Отправить.Доступность = Ложь;
		Элементы.ОтправительПредставление.ТолькоПросмотр = Истина;
		Элементы.ГруппаДоступныТолькоДляЧерновика.ТолькоПросмотр = Истина;
		
		Элементы.СписокПолучателейПисьма.РедактированиеТекста       = Ложь;
		Элементы.СписокПолучателейКопий.РедактированиеТекста        = Ложь;
		Элементы.СписокПолучателейСкрытыхКопий.РедактированиеТекста = Ложь;
		
		Элементы.ГруппаДоступныТолькоДляЧерновика.ТолькоПросмотр 	= Истина;
		Элементы.ДобавитьВложение.Доступность 						= Ложь
		
	Иначе
		// Заполним список выбора учетных записей
		УправлениеЭлектроннойПочтой.ПолучитьДоступныеУчетныеЗаписиДляОтправки(Элементы.ОтправительПредставление.СписокВыбора);
		
	КонецЕсли;

	Для Каждого Стр Из Объект.ПолучателиПисьма Цикл
		Если ЗначениеЗаполнено(Стр.Контакт) Тогда
			СоответствияАдресовИКонтактов.Добавить(Стр.Контакт, Стр.Адрес);
		КонецЕсли;
	КонецЦикла;

	// Заполним вложения
	табВложения = УправлениеЭлектроннойПочтой.ПолучитьВложенияЭлектронногоПисьма(Объект.Ссылка);
	Для Каждого Стр Из табВложения Цикл
		новСтр = Вложения.Добавить();
		новСтр.Ссылка         = Стр.Ссылка;
		новСтр.ИмяФайла       = Стр.ИмяФайла;
		новСтр.ИндексКартинки = Стр.ИндексКартинки;
		новСтр.Размер         = Стр.Размер;
		новСтр.Расположение   = 0;
	КонецЦикла;

	Взаимодействия.ЗаполнитьСписокВыбораДляОтработатьПосле(Элементы.ОтработатьПосле.СписокВыбора);	

	// Если письмо отправлено, переименуем команду "ПодобратьКонтакты"
	Если Объект.СтатусПисьма <> Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик Тогда
		Элементы.ПодобратьКонтакты.Видимость = Ложь;
	Иначе
		Элементы.УточнитьКонтакты.Видимость = Ложь;
	КонецЕсли;

	//подготовить оповещения взаимодействий
	Взаимодействия.ПодготовитьОповещения(ЭтаФорма,Параметры);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	#Если Не ВебКлиент Тогда
	Для Каждого Стр Из Вложения Цикл
		Если Стр.Расположение = 2 Тогда
			Данные = Новый ДвоичныеДанные(Стр.ИмяФайлаНаКомпьютере);
			Стр.ИмяФайлаНаКомпьютере = ПоместитьВоВременноеХранилище(Данные, "");
			Стр.Расположение = 4;
		КонецЕсли;
	КонецЦикла;
	#КонецЕсли

	Объект.ЕстьВложения = (Вложения.Количество() <> 0);
	
КонецПроцедуры
 
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, РежимЗаписи, РежимПроведения)
		
	Взаимодействия.ПередЗаписьюВзаимодействияИзФормы(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Стр Из Вложения Цикл
		
		Размер = 0;
		ИмяФайла = Стр.ИмяФайла;
		Письмо = ТекущийОбъект.Ссылка;
		
		Если Стр.Расположение = 4 Тогда
			// из временного хранилища
			УправлениеЭлектроннойПочтой.ЗаписатьВложениеЭлектронногоПисьмаИзВременногоХранилища(Письмо, Стр.ИмяФайлаНаКомпьютере, ИмяФайла, Размер);
			
		ИначеЕсли Стр.Расположение = 3 Тогда
			// из файла на сервере
			
		ИначеЕсли Стр.Расположение = 1 Тогда
			// из двоичных данных другого вложения
			
		ИначеЕсли Стр.Расположение = 0 Тогда
			// перезаписать вложение
			
		КонецЕсли;
		
		Стр.Расположение = 0;
		
	КонецЦикла;
	
	// Удалим удаленные вложения
	Для Каждого УдаленноеВложение Из УдаленныеВложения Цикл
		ОбъектВложение = УдаленноеВложение.Значение.ПолучитьОбъект();
		ОбъектВложение.Удалить();
	КонецЦикла;
	
	УдаленныеВложения.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Вложения.Очистить();
	табВложения = УправлениеЭлектроннойПочтой.ПолучитьВложенияЭлектронногоПисьма(Объект.Ссылка);
	Для Каждого Стр Из табВложения Цикл
		новСтр = Вложения.Добавить();
		новСтр.Ссылка         = Стр.Ссылка;
		новСтр.ИмяФайла       = Стр.ИмяФайла;
		новСтр.ИндексКартинки = Стр.ИндексКартинки;
		новСтр.Размер         = Стр.Размер;
		новСтр.Расположение   = 0;
	КонецЦикла;
	
КонецПроцедуры  

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	//оповестить взаимодействия о создании сделки
	ВзаимодействияКлиент.ВзаимодействиеПослеЗаписи(ЭтаФорма,Объект);
	
	ОбновитьОтображениеДанных();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Контакт создан" И Параметр.Основание = Объект.Ссылка Тогда
		Элементы.Участники.ТекущиеДанные.Контакт = Параметр.Ссылка;
		Элементы.СоздатьКонтакт.Доступность = Ложь;
		Модифицированность = Истина;
		Если ПустаяСтрока(Элементы.Участники.ТекущиеДанные.Представление) Тогда
			Элементы.Участники.ТекущиеДанные.Представление = Параметр.Наименование;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Создан предмет взаимодействия" И Параметр.Основание = Объект.Ссылка Тогда
		Прочитать();
		ОтобразитьИзменениеДанных(Объект.Предмет, ВидИзмененияДанных.Изменение);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОтправитьВыполнить()
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	Результат = ВыполнитьОтправкуНаСервере();
	
	Если Результат = "" Тогда
		Закрыть();
	Иначе
		Предупреждение(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаДополнительноВыполнить()
		
	Текст = Новый ТекстовыйДокумент;
	Текст.ДобавитьСтроку("Создано:    " + Объект.Дата);
	Текст.ДобавитьСтроку("Отправлено: " + Объект.ДатаОтправления);
	Текст.ДобавитьСтроку("");
	Текст.ДобавитьСтроку("");
	Текст.ДобавитьСтроку("-------------------------------------------------");
	Текст.ДобавитьСтроку("Идентификатор сообщения:  " + Объект.ИдентификаторСообщения);
	Текст.ДобавитьСтроку("Идентификатор основания:  " + Объект.ИдентификаторОснования);
	Текст.ДобавитьСтроку("Идентификаторы оснований: " + ПолучитьПредставлениеИдентификаторовОснований(Объект.ИдентификаторыОснований));
	Текст.Показать();

КонецПроцедуры

&НаКлиенте
Процедура ОтработатьПослеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВзаимодействияКлиент.ОбработатьВыборВПолеОтработатьПосле(
		Объект.ОтработатьПосле, ВыбранноеЗначение, СтандартнаяОбработка, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОтправителяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Объект.УчетнаяЗапись = ВыбранноеЗначение;
	ЭлементСписка = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
	Если ЭлементСписка <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		Объект.ОтправительПредставление = ЭлементСписка.Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьВложениеВыполнить();
	
КонецПроцедуры

// ------------------------------------------------------------------
// РАБОТА С ПОЛЯМИ ПОЛУЧАТЕЛЕЙ

&НаКлиенте
Процедура СписокПолучателейПисьмаПриИзменении(Элемент)
	
	ПреобразоватьИменаПолучателей(Объект.СписокПолучателейПисьма, "ПолучателиПисьма");

КонецПроцедуры

&НаКлиенте
Процедура СписокПолучателейКопийПриИзменении(Элемент)
	
	ПреобразоватьИменаПолучателей(Объект.СписокПолучателейКопий, "ПолучателиКопий");

КонецПроцедуры

&НаКлиенте
Процедура СписокПолучателейСкрытыхКопийПриИзменении(Элемент)
	
	ПреобразоватьИменаПолучателей(Объект.СписокПолучателейСкрытыхКопий, "ПолучателиСкрытыхКопий");

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьКонтактыВыполнить()

	РедактироватьСписокПолучателей(Истина);

КонецПроцедуры

&НаКлиенте
Процедура УточнитьКонтактыВыполнить()

	РедактироватьСписокПолучателей(Ложь);

КонецПроцедуры
 

// РАБОТА С ВЛОЖЕНИЯМИ

&НаКлиенте
Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ДобавитьВложениеВыполнить();

КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередУдалением(Элемент, Отказ)
	
	УдалитьВложениеВыполнить();
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВложениеВыполнить()
	
	#Если Не ВебКлиент Тогда
		
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.МножественныйВыбор = Истина;
		Если Не Диалог.Выбрать() Тогда
			Возврат;
		КонецЕсли;
		
		Для Каждого ВыбранныйФайл Из Диалог.ВыбранныеФайлы Цикл
			новСтр = Вложения.Добавить();
			новСтр.Расположение = 2;
			новСтр.ИмяФайлаНаКомпьютере = ВыбранныйФайл;

			ИмяФайла   = "";
			Расширение = "";
			ВзаимодействияКлиентСервер.ПолучитьКаталогИИмяФайла(ВыбранныйФайл, "", ИмяФайла);
			новСтр.ИмяФайла = ИмяФайла;

			Расширение = ВзаимодействияКлиентСервер.ПолучитьРасширениеФайла(ИмяФайла);
			новСтр.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(Расширение);
		КонецЦикла;
		
	#Иначе

		Адрес = "";
		ВыбранныйФайл = "";
		Если Не ПоместитьФайл(Адрес, "", ВыбранныйФайл, Истина, УникальныйИдентификатор) Тогда
			Возврат;
		КонецЕсли;

		новСтр = Вложения.Добавить();
		новСтр.Расположение = 4;
		новСтр.ИмяФайлаНаКомпьютере = Адрес;
		новСтр.ИмяФайла = ВыбранныйФайл;
		
		Расширение = ВзаимодействияКлиентСервер.ПолучитьРасширениеФайла(ВыбранныйФайл);
		новСтр.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(Расширение);

		ОбновитьОтображениеДанных();
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВложениеВыполнить()

	ДобавитьВложениеВСписокУдаленных();
	
	текДанные = Элементы.Вложения.ТекущиеДанные;
	Если текДанные <> Неопределено Тогда
		Индекс = Вложения.Индекс(текДанные);
		Вложения.Удалить(Индекс);
 		ОбновитьОтображениеДанных();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВложениеВСписокУдаленных()

	текДанные = Элементы.Вложения.ТекущиеДанные;
	Если (текДанные <> Неопределено) И (текДанные.Расположение = 0) Тогда
		УдаленныеВложения.Добавить(текДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВложениеВыполнить()
	
	текДанные = Элементы.Вложения.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если (текДанные.Расположение = 0) ИЛИ (текДанные.Расположение = 1) Тогда
		УправлениеЭлектроннойПочтойКлиент.ОткрытьВложение(текДанные.Ссылка,УникальныйИдентификатор);
		
	ИначеЕсли текДанные.Расположение = 2 Тогда
		#Если Не ВебКлиент Тогда
			ЗапуститьПриложение("""" + текДанные.ИмяФайлаНаКомпьютере + """");
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры
  
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ВыполнитьОтправкуПисьма()
	
	ПараметрыПисьма = Новый Структура;

	ДобавитьВПараметрАдресатов(ПараметрыПисьма, "Кому", "ПолучателиПисьма");
	ДобавитьВПараметрАдресатов(ПараметрыПисьма, "Копии", "ПолучателиКопий");
	ДобавитьВПараметрАдресатов(ПараметрыПисьма, "СкрытыеКопии", "ПолучателиСкрытыхКопий");
	ПараметрыПисьма.Вставить("Тема",      Объект.Тема);
	ПараметрыПисьма.Вставить("Тело",      Объект.Текст);
	ПараметрыПисьма.Вставить("Кодировка", Объект.Кодировка);
	ПараметрыПисьма.Вставить("Важность",  УправлениеЭлектроннойПочтой.ПолучитьВажность(Объект.Важность));
	
	Если Не ПустаяСтрока(Объект.ИдентификаторыОснований) Тогда
		ПараметрыПисьма.Вставить("ИдентификаторыОснований", Объект.ИдентификаторыОснований);
	КонецЕсли;
	
	соотвВложения = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Файлы.Наименование КАК ПолноеНаименование,
	|	Файлы.Расширение КАК Расширение,
	|	Файлы.Ссылка КАК Ссылка,
	|	Файлы.ЭлектронныеЦифровыеПодписи.(
	|		НомерСтроки,
	|		Подпись
	|	)
	|ИЗ
	|	Справочник.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла = &ВладелецФайла";
	Запрос.УстановитьПараметр("ВладелецФайла", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать(); 

	Пока Выборка.Следующий() Цикл
		ИмяФайла = Выборка.ПолноеНаименование + ?(Выборка.Расширение = "", "", "." + Выборка.Расширение);
		соотвВложения.Вставить(ИмяФайла, ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Выборка.Ссылка));
		Для каждого ЭЦП Из Выборка.ЭлектронныеЦифровыеПодписи.Выгрузить() Цикл
		
			соотвВложения.Вставить(Выборка.ПолноеНаименование + "-DS("+ ЭЦП.НомерСтроки + ").p7s",ЭЦП.Подпись.Получить());
		
		КонецЦикла;
	КонецЦикла;
	ПараметрыПисьма.Вставить("Вложения", соотвВложения);
	
	Возврат ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(Объект.УчетнаяЗапись, ПараметрыПисьма);
	
КонецФункции

&НаСервере
Процедура ДобавитьВПараметрАдресатов(ПараметрыПисьма, ИмяПараметра, ИмяТаблицы)
	
	ТабЗн = Объект[ИмяТаблицы];
	Если ТабЗн.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Адресаты = Новый Массив;
	Для Каждого Стр Из ТабЗн Цикл
		Адресаты.Добавить(Новый Структура("Адрес,Представление", Стр.Адрес, Стр.Представление));
	КонецЦикла;
	
	ПараметрыПисьма.Вставить(ИмяПараметра, Адресаты);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтактПоАдресу(Адрес)
	
	Для Каждого Элемент Из СоответствияАдресовИКонтактов Цикл
		Если Элемент.Представление = Адрес Тогда
			Возврат Элемент.Значение;
		КонецЕсли;
	КонецЦикла;

	Контакт = Адрес;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектСКонтактнойИнформацией.Ссылка
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК ОбъектСКонтактнойИнформацией
	|ГДЕ
	|	ОбъектСКонтактнойИнформацией.АдресЭП = &АдресЭП
	|	И ОбъектСКонтактнойИнформацией.Тип = &Тип
	|	И (НЕ ОбъектСКонтактнойИнформацией.Ссылка.ПометкаУдаления)";
	
	МассивОписанияТиповКонтактов = ВзаимодействияКлиентСервер.ПолучитьМассивОписанияВозможныхКонтактов();
	Для каждого ЭлементМассиваОписания Из МассивОписанияТиповКонтактов Цикл
		
		Если ЭлементМассиваОписания.Имя = "Пользователи" Тогда
		    Продолжить;
		КонецЕсли;	
		
		Запрос.Текст = Запрос.Текст + "
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ОбъектСКонтактнойИнформацией.Ссылка
		|ИЗ
		|	Справочник." + ЭлементМассиваОписания.Имя + ".КонтактнаяИнформация КАК ОбъектСКонтактнойИнформацией
		|ГДЕ
		|	ОбъектСКонтактнойИнформацией.АдресЭП = &АдресЭП
		|	И ОбъектСКонтактнойИнформацией.Тип = &Тип
		|	И (НЕ ОбъектСКонтактнойИнформацией.Ссылка.ПометкаУдаления)
		|";		
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("АдресЭП", Адрес);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Контакт = Выборка.Ссылка;
	КонецЕсли;
	
	СоответствияАдресовИКонтактов.Добавить(Контакт, Адрес);
	Возврат Контакт;
	
КонецФункции

&НаКлиенте
Функция ПолучитьПредставлениеИдентификаторовОснований(Знач Идентификаторы)

	Идентификаторы = СтрЗаменить(Идентификаторы, "<",  " ");
	Идентификаторы = СтрЗаменить(Идентификаторы, ">",  " ");
	Идентификаторы = СтрЗаменить(Идентификаторы, "  ", " ");
	Идентификаторы = СокрЛП(СтрЗаменить(Идентификаторы, "  ", " "));
	Идентификаторы = СтрЗаменить(Идентификаторы, " ", Символы.ПС + "                          ");
	
	Возврат Идентификаторы;

КонецФункции

&НаСервере
Процедура ПреобразоватьИменаПолучателей(СтрокаИмен, ИмяТаблицы)
	
	табПолучатели = Объект[ИмяТаблицы];

	табПолучатели.Очистить();
	Если ПустаяСтрока(СтрокаИмен) Тогда
		Возврат;
	КонецЕсли;

	Результат = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(СтрокаИмен);
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Стр Из Результат Цикл
		новСтр = табПолучатели.Добавить();
		новСтр.Адрес = Стр.Адрес;
		новСтр.Представление = Стр.Представление;
		новСтр.Контакт = ПолучитьКонтактПоАдресу(Стр.Адрес);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСписокПолучателей(ДляПодбора)
	
	// Получим список адресатов
	соотвТабЧастей = Новый Соответствие;
	соотвТабЧастей.Вставить("Кому",    Объект.ПолучателиПисьма);
	соотвТабЧастей.Вставить("Копии",   Объект.ПолучателиКопий);
	соотвТабЧастей.Вставить("Скрытые", Объект.ПолучателиСкрытыхКопий);
	соотвТабЧастей.Вставить("Ответ",   Объект.ПолучателиОтвета);
	
	СписокВыбранных = Новый СписокЗначений;
	Для Каждого ТабЧасть Из соотвТабЧастей Цикл
		СписокВыбранных.Добавить(УправлениеЭлектроннойПочтойКлиент.ТаблицуКонтактовВМассив(ТабЧасть.Значение), ТабЧасть.Ключ);
	КонецЦикла;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗапись",   Объект.УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("СписокВыбранных", СписокВыбранных);
	ПараметрыОткрытия.Вставить("Предмет",         Объект.Предмет);
	
	// Откроем форму для редактирования списка адресатов
	ИмяОбщейФормы = ?(ДляПодбора, "ОбщаяФорма.АдреснаяКнига", "ОбщаяФорма.УточнениеКонтактов");
	Результат = ОткрытьФормуМодально(ИмяОбщейФормы, ПараметрыОткрытия);
	Если (ТипЗнч(Результат) <> Тип("Массив")) И (ТипЗнч(Результат) <> Тип("Соответствие")) Тогда
		Возврат;
	КонецЕсли;

	// Заполним адресатов
	Если ДляПодбора Тогда
		ЗаполнитьПодобранныхПолучателей(соотвТабЧастей, Результат);
	Иначе
		ЗаполнитьУточненныеКонтакты(соотвТабЧастей, Результат);
	КонецЕсли;

	// Сформируем представления контактов
	СформироватьПредставленияКонтактов();

	// Установим признак модифицированности
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодобранныхПолучателей(соотвТабЧастей, Результат)

	Для Каждого ТабЧасть Из соотвТабЧастей Цикл
		ТабЧасть.Значение.Очистить();
	КонецЦикла;
	
	Для Каждого Элемент Из Результат Цикл
		
		ТабЧасть = соотвТабЧастей.Получить(Элемент.Группа);
		Если ТабЧасть = Неопределено Тогда
			ТабЧасть = Объект.ПолучателиПисьма;
		КонецЕсли;
		
		новСтр = ТабЧасть.Добавить();
		новСтр.Адрес = Элемент.Адрес;
		новСтр.Представление = Элемент.Представление;
		новСтр.Контакт = Элемент.Контакт;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУточненныеКонтакты(соотвТабЧастей, соотвКонтактов)

	Для Каждого ТабЧасть Из соотвТабЧастей Цикл
		Для Каждого Стр Из ТабЧасть.Значение Цикл
			УправлениеЭлектроннойПочтойКлиент.ИсправитьКонтакт(Стр.Адрес, Стр.Представление, Стр.Контакт, соотвКонтактов);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СформироватьПредставленияКонтактов() 

	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	ЭтотОбъект.СформироватьПредставленияКонтактов();
	ЗначениеВРеквизитФормы(ЭтотОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура СвязанныеВзаимодействияВыполнить()

	ОткрытьФормуМодально("ЖурналДокументов.Взаимодействия.ФормаСписка",
	Новый Структура("ОбъектОтбора", Объект.Предмет));

КонецПроцедуры

&НаСервере
Функция ВыполнитьОтправкуНаСервере()
	
	текОбъект = РеквизитФормыВЗначение("Объект");
	
	Попытка
	   ИдентификаторПисьма = ВыполнитьОтправкуПисьма();
	Исключение
	    ЗначениеВРеквизитФормы(текОбъект, "Объект");
		Возврат КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	текОбъект.ИдентификаторСообщения = ИдентификаторПисьма;
	текОбъект.СтатусПисьма = Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Отправлено;
	текОбъект.ДатаОтправления = ТекущаяДата();
	текОбъект.Записать(РежимЗаписиДокумента.Запись);
	ЗначениеВРеквизитФормы(текОбъект, "Объект");
	
	Возврат "";

КонецФункции
