
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ПроверитьДоступностьСозданияКонтакта()
	
	текДанные = Элементы.Участники.ТекущиеДанные;
	Элементы.СоздатьКонтакт.Доступность = ((текДанные <> Неопределено) И (НЕ ЗначениеЗаполнено(текДанные.Контакт)));
	
КонецПроцедуры

&НаКлиенте
Функция ВыделитьВремя(Дата)

	Возврат Час(Дата) * 3600 + Минута(Дата) * 60;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Взаимодействия.ЗаполнитьСписокВыбораДляОтработатьПосле(Элементы.ОтработатьПосле.СписокВыбора);
	
	ДатаНачала        = Объект.ДатаНачала;
	ВремяНачала       = Объект.ДатаНачала;
	ДатаОкончания     = Объект.ДатаОкончания;
	ВремяОкончания    = Объект.ДатаОкончания;
	Продолжительность = Объект.ДатаОкончания - Объект.ДатаНачала;
	
	//Определим типы контактов, которые можно создать
	СписокИнтерактивноСоздаваемыхКонтактов = Взаимодействия.СоздатьСписокЗначенийИнтерактивноСоздаваемыхКонтактов();
	Элементы.СоздатьКонтакт.Видимость	   = СписокИнтерактивноСоздаваемыхКонтактов.Количество() > 0;	
	
	//подготовить оповещения взаимодействий
	Взаимодействия.ПодготовитьОповещения(ЭтаФорма,Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если Не ВебКлиент Тогда
		ПроверитьДоступностьСозданияКонтакта();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Контакт создан" И Параметр.Основание = Объект.Ссылка Тогда
		Элементы.Участники.ТекущиеДанные.Контакт = Параметр.Ссылка;
		Элементы.СоздатьКонтакт.Доступность = Ложь;
		Модифицированность = Истина;
		Если ПустаяСтрока(Элементы.Участники.ТекущиеДанные.ПредставлениеКонтакта) Тогда
			Элементы.Участники.ТекущиеДанные.ПредставлениеКонтакта = Параметр.Наименование;
		КонецЕсли;
			
	ИначеЕсли ИмяСобытия = "Создан предмет взаимодействия" И Параметр.Основание = Объект.Ссылка Тогда
		Прочитать();
		ОтобразитьИзменениеДанных(Объект.Предмет, ВидИзмененияДанных.Изменение);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, РежимЗаписи, РежимПроведения)
	
	Взаимодействия.ПередЗаписьюВзаимодействияИзФормы(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ВзаимодействияКлиент.ВзаимодействиеПослеЗаписи(ЭтаФорма,Объект);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьКонтактВыполнить()
	
	текДанные = Элементы.Участники.ТекущиеДанные;
	Если текДанные <> Неопределено Тогда
		ВзаимодействияКлиент.СоздатьКонтакт(
			текДанные.ПредставлениеКонтакта, текДанные.КакСвязаться, Объект.Ссылка, СписокИнтерактивноСоздаваемыхКонтактов
		);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанныеВзаимодействияВыполнить()
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Предмет", Объект.Предмет);
	
	ОткрытьФорму("ЖурналДокументов.Взаимодействия.ФормаСписка", ПараметрыОтбора,ЭтаФорма,,Окно);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КонтактНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	текДанные = Элементы.Участники.ТекущиеДанные;
	Если ВзаимодействияКлиент.ВыбратьКонтакт(Объект.Предмет, текДанные.КакСвязаться, текДанные.ПредставлениеКонтакта, текДанные.Контакт, Ложь, Ложь, Истина) Тогда
		Модифицированность = Истина;
		ПроверитьДоступностьСозданияКонтакта();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиПриАктивизацииСтроки(Элемент)
	
	ПроверитьДоступностьСозданияКонтакта();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеКонтактаПриИзменении(Элемент)
	
	ПроверитьДоступностьСозданияКонтакта();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактПриИзменении(Элемент)
	
	ПроверитьДоступностьСозданияКонтакта();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработатьПослеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВзаимодействияКлиент.ОбработатьВыборВПолеОтработатьПосле(Объект.ОтработатьПосле, ВыбранноеЗначение, СтандартнаяОбработка, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ВыбранноеВремя = ВзаимодействияКлиент.ВыбратьВремя(ЭтаФорма, Элемент, ВремяНачала, 1800);

	Если ВыбранноеВремя = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ВремяНачала = ВыбранноеВремя;

	ВремяНачалаПриИзменении(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ВыбранноеВремя = ВзаимодействияКлиент.ВыбратьВремя(ЭтаФорма, Элемент, ВремяОкончания, 1800);

	Если ВыбранноеВремя = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ВремяОкончания = ВыбранноеВремя;

	ВремяОкончанияПриИзменении(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаПриИзменении(Элемент)

	Объект.ДатаНачала = НачалоДня(Объект.ДатаНачала) + ВыделитьВремя(ВремяНачала);
	Объект.ДатаОкончания = Объект.ДатаНачала + Продолжительность;
	ВремяОкончания = Объект.ДатаОкончания;

КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияПриИзменении(Элемент)

	Если НачалоДня(Объект.ДатаОкончания) + ВыделитьВремя(ВремяОкончания) < Объект.ДатаНачала Тогда
		Сообщить(НСтр("ru='Время окончания не может быть меньше времени начала.'"));
		ВремяОкончания = ВремяНачала + 1800;
		Возврат;
	КонецЕсли;

	Объект.ДатаОкончания = НачалоДня(Объект.ДатаОкончания) + ВыделитьВремя(ВремяОкончания);
	Продолжительность = Объект.ДатаОкончания - Объект.ДатаНачала;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)

	Объект.ДатаНачала = НачалоДня(ДатаНачала) + ВыделитьВремя(ВремяНачала);
	Объект.ДатаОкончания = Объект.ДатаНачала + Продолжительность;
	ДатаОкончания = Объект.ДатаОкончания;

КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)

	Если НачалоДня(ДатаОкончания) + ВыделитьВремя(ВремяОкончания) < Объект.ДатаНачала Тогда
		Сообщить(НСтр("ru='Дата окончания не может быть меньше даты начала.'"));
		ДатаОкончания = Объект.ДатаНачала;
		Возврат;
	КонецЕсли;

	Объект.ДатаОкончания = НачалоДня(ДатаОкончания) + ВыделитьВремя(ВремяОкончания);
	Продолжительность = Объект.ДатаОкончания - Объект.ДатаНачала;

КонецПроцедуры
