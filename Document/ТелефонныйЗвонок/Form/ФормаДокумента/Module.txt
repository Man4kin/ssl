////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМЫ


&НаСервере
Процедура ЗаполнитьНаОснованииУчастника(ДанныеУчастника)
	
	Объект.АбонентКонтакт = ДанныеУчастника.Контакт;
	Если ПустаяСтрока(ДанныеУчастника.КакСвязаться) Тогда
		
		Объект.АбонентКакСвязаться = "";
		Взаимодействия.ДозаполнитьПоляКонтактов(Объект.АбонентКонтакт,Объект.АбонентПредставление,Объект.АбонентКакСвязаться,Перечисления.ТипыКонтактнойИнформации.Телефон);
		
	Иначе
		
		Объект.АбонентКакСвязаться = ДанныеУчастника.КакСвязаться;
		
		
	КонецЕсли;
	
	Объект.АбонентПредставление = ДанныеУчастника.Представление;
	
КонецПроцедуры // ()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Взаимодействия.ЗаполнитьСписокВыбораДляОтработатьПосле(Элементы.ОтработатьПосле.СписокВыбора);
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Входящий = НЕ (Параметры.Свойство("Основание") И НЕ (Параметры.Основание = Ложь ИЛИ Параметры.Основание = Неопределено));
	КонецЕсли;
	
	//Определим типы контактов, которые можно создать
	СписокИнтерактивноСоздаваемыхКонтактов = Взаимодействия.СоздатьСписокЗначенийИнтерактивноСоздаваемыхКонтактов();
	Элементы.СоздатьКонтакт.Видимость	   = СписокИнтерактивноСоздаваемыхКонтактов.Количество() > 0;

	//подготовить оповещения взаимодействий
	Взаимодействия.ПодготовитьОповещения(ЭтаФорма,Параметры);
	
	Если Параметры.Свойство("ДанныеУчастника") И Объект.АбонентКонтакт <> Параметры.ДанныеУчастника.Контакт Тогда
	    ЗаполнитьНаОснованииУчастника(Параметры.ДанныеУчастника);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если Не ВебКлиент Тогда
		ПроверитьДоступностьСозданияКонтакта();
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, РежимЗаписи, РежимПроведения)
	
	Взаимодействия.ПередЗаписьюВзаимодействияИзФормы(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ВзаимодействияКлиент.ВзаимодействиеПослеЗаписи(ЭтаФорма,Объект);
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Контакт создан" И Параметр.Основание = Объект.Ссылка Тогда
		Объект.АбонентКонтакт = Параметр.Ссылка;
		Элементы.СоздатьКонтакт.Доступность = Ложь;
		Модифицированность = Истина;
		Если ПустаяСтрока(Объект.АбонентПредставление) Тогда
			Объект.АбонентПредставление = Параметр.Наименование;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Создан предмет взаимодействия" И Параметр.Основание = Объект.Ссылка Тогда
		Прочитать();
		ОтобразитьИзменениеДанных(Объект.Предмет, ВидИзмененияДанных.Изменение);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьКонтактВыполнить()

	ВзаимодействияКлиент.СоздатьКонтакт(
		Объект.АбонентПредставление, Объект.АбонентКакСвязаться, Объект.Ссылка, СписокИнтерактивноСоздаваемыхКонтактов
	);

КонецПроцедуры

&НаКлиенте
Процедура СвязанныеВзаимодействияВыполнить()

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Предмет", Объект.Предмет);

	ОткрытьФорму("ЖурналДокументов.Взаимодействия.ФормаСписка", ПараметрыОтбора, ЭтаФорма, , Окно);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КонтактНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВзаимодействияКлиент.ВыбратьКонтакт(Объект.Предмет, Объект.АбонентКакСвязаться, Объект.АбонентПредставление, Объект.АбонентКонтакт, Ложь, Ложь, Истина) Тогда
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеКонтактаПриИзменении(Элемент)
	
	ПроверитьДоступностьСозданияКонтакта();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактПриИзменении(Элемент)
	
	ПроверитьДоступностьСозданияКонтакта();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработатьПослеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВзаимодействияКлиент.ОбработатьВыборВПолеОтработатьПосле(Объект.ОтработатьПосле, ВыбранноеЗначение, СтандартнаяОбработка, Модифицированность);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ПроверитьДоступностьСозданияКонтакта()
	
	Элементы.СоздатьКонтакт.Доступность = (Не ЗначениеЗаполнено(Объект.АбонентКонтакт)) И (Не ПустаяСтрока(Объект.АбонентПредставление));
	
КонецПроцедуры
