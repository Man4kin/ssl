Перем СоответсвиеВариантовГруппировке, СоответсвиеВариантовНомеруСортировки, СписокОтчетов; 
Перем ПараметрыВызова, СтрокаФиксированнаяГруппировка, ТаблицаВариантов;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Подсистемы           = Параметры.Подсистемы;
	ИмяФормыОтчетов      = Параметры.ИмяФормы;
	КартинкаФормы        = Параметры.КартинкаФормы;
	ГруппироватьВарианты = истина;
    	
	Заголовок = Параметры.ИмяФормы;
	Если Параметры.КартинкаФормы <> "" тогда 
		Элементы.КартинкаОтчета.Картинка = БиблиотекаКартинок[Параметры.КартинкаФормы];
		Элементы.КартинкаОтчета.Видимость = истина;
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Подсистемы) = Тип("СписокЗначений") тогда
		ПутиПодсистемы = Параметры.Подсистемы;
	Иначе
		ПутиПодсистемы = Новый СписокЗначений;
		ПутиПодсистемы.Добавить(Параметры.Подсистемы);
	КонецЕсли;
	
	НарисоватьПанель(Отказ);
	
КонецПроцедуры           

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура НарисоватьПанель(Отказ = ложь)
	
	МассивЭлементов = Новый Массив;

	Для каждого ЭлементГруппыСсылка из Элементы.ГруппаОсновная.ПодчиненныеЭлементы Цикл
		Если ЭлементГруппыСсылка.Имя = "КартинкаОтчета" тогда
			Продолжить;
		КонецЕсли;
		МассивЭлементов.Добавить(ЭлементГруппыСсылка);
	КонецЦикла;
	
	Для каждого ЭлементГруппыСсылка из Элементы.ГруппаСмТакжеСпискиОтчетов.ПодчиненныеЭлементы Цикл
		МассивЭлементов.Добавить(ЭлементГруппыСсылка);
	КонецЦикла;
	
	Для каждого ЭлементГруппыСсылка из МассивЭлементов Цикл
		Элементы.Удалить(ЭлементГруппыСсылка);		
	КонецЦикла;
	
	МассивКоманд = Новый Массив;
	
	Для каждого Команда из Команды Цикл
		Если Команда.Имя = "ОбщийСписокВариантовОтчетов" тогда
			Продолжить;
		КонецЕсли;
		МассивКоманд.Добавить(Команда);
	КонецЦикла;
	
	Для каждого Команда из МассивКоманд Цикл
		Команды.Удалить(Команда);
	КонецЦикла;
	
	//Подсистемы = Неопределено;
	
	СписокОтчетов = ВариантыОтчетовПереопределяемый.СписокОтчетовПоддерживаемыхПодсистемой();
	
	ДеревоПодсистем = Новый ДеревоЗначений;
	ДеревоПодсистем.Колонки.Добавить("Подсистема");
	ДеревоПодсистем.Колонки.Добавить("Название");
	
	// Сделаем список отчетов
	СписокПодсистем = ВариантыОтчетов.ПолучитьСписокПодсистем(ПутиПодсистемы, ДеревоПодсистем);
	
	Если СписокПодсистем.Количество() = 0 тогда
		ВызватьИсключение НСТр("ru = 'Некорректное значение параметра формы Подсистемы.'");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	МаксимальнаяДлинна = 0;
	
	Для каждого ЭлементСпПодсистема из СписокПодсистем Цикл
		МаксимальнаяДлинна = Макс(СтрДлина(ЭлементСпПодсистема.Значение), МаксимальнаяДлинна);
	КонецЦикла;
	
	
	// Получить вариантов отчетов с разделами 
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ВариантыОтчетов.Наименование КАК Представление,
	|	ВариантыОтчетов.Описание,
	|	ВариантыОтчетов.Видимость,
	|	ВариантыОтчетов.Наименование КАК Сортировка,
	|	ВариантыОтчетов.ТипВариантаОтчета,
	|	ВариантыОтчетовПодсистемы.Подсистема
	|ИЗ
	|	Справочник.ВариантыОтчетов.Подсистемы КАК ВариантыОтчетовПодсистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ПО ВариантыОтчетовПодсистемы.Ссылка = ВариантыОтчетов.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВЫРАЗИТЬ(ВариантыОтчетовПодсистемы.Подсистема КАК Строка("+Формат(МаксимальнаяДлинна, "ЧГ=0")+"))В (&Подсистемы)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка";
	
	Запрос = Новый Запрос(ТЗ);
	Запрос.УстановитьПараметр("Подсистемы",       СписокПодсистем);
	Запрос.УстановитьПараметр("СписокОтчетов", СписокОтчетов);
	УстановитьПривилегированныйРежим(истина);
	ТаблицаВариантов = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);

	// роли вариантов
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ВариантыОтчетовНастройкаВидимости.Пользователь,
	|	НЕ ВариантыОтчетовНастройкаВидимости.Ссылка.Видимость КАК Видимость
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов.НастройкаВидимости КАК ВариантыОтчетовНастройкаВидимости
	|		ПО ВариантыОтчетов.Ссылка = ВариантыОтчетовНастройкаВидимости.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта В (&Ключи)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|	И (ВариантыОтчетовНастройкаВидимости.Пользователь = Пользователь)";
	
	Запрос.Текст = ТЗ;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Ключи", ТаблицаВариантов.ВыгрузитьКолонку("Ключ"));
	УстановитьПривилегированныйРежим(истина);
	ТаблицаПользователей = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);
	
	ТаблицаВариантов.Колонки.Добавить("Группировка", Новый ОписаниеТипов(,, Новый КвалификаторыСтроки()));
	
	СписокГруппировок = Новый ТаблицаЗначений;
	СписокГруппировок.Колонки.Добавить("Группировка");
	СписокГруппировок.Колонки.Добавить("ГруппировкаПредставление");
	
	Для каждого СтрокаПодсистемы из ДеревоПодсистем.Строки Цикл
		ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
		ДанныеГруппировки.Группировка              = СтрокаПодсистемы.Подсистема;
		ДанныеГруппировки.ГруппировкаПредставление = "";
		Для каждого СтрокаГруппировки из СтрокаПодсистемы.Строки Цикл
			ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
			ДанныеГруппировки.Группировка              = СтрокаГруппировки.Подсистема;
			ДанныеГруппировки.ГруппировкаПредставление = СтрокаГруппировки.Название;
		КонецЦикла;
	КонецЦикла;
	
	// создадим дерево вариантов
	
	ГруппировкиВариантов = Новый Соответствие;
	
	ГруппировкиВариантовСмТакже = Новый СписокЗначений;
	
	СгруппированныйСписокВариантовОтчетов = Новый ДеревоЗначений;
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Ключ");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Представление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Описание");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Группировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("ГруппировкаПредставление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Сортировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Видимость");
	
	Если ГруппироватьВарианты тогда
		Для каждого ГруппировкаВар из СписокГруппировок Цикл
			Если Найти(ГруппировкаВар.Группировка, "СмТакже") > 0  тогда
				Продолжить;
			КонецЕсли;
			СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
			СтрокаГруппировкиОтчета.Группировка = ГруппировкаВар.Группировка;
			СтрокаГруппировкиОтчета.ГруппировкаПредставление = ГруппировкаВар.ГруппировкаПредставление;
			ГруппировкиВариантов.Вставить(ГруппировкаВар.Группировка, СтрокаГруппировкиОтчета);
		КонецЦикла;
	КонецЕсли;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'Прочие'");
	ГруппировкиВариантов.Вставить("ПрочиеИПользовательскиеВариантыОтчета", СтрокаГруппировкиОтчета);
	СтрокаФиксированнаяГруппировка = СтрокаГруппировкиОтчета;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "СмТакже";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'См. также'");
	ГруппировкиВариантов.Вставить("СмТакже", СтрокаГруппировкиОтчета);
	СтрокаГруппировкаСмТакже = СтрокаГруппировкиОтчета;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "ДополнительныеОтчеты";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'Дополнительные отчеты'");
	ГруппировкиВариантов.Вставить("ДополнительныеОтчеты", СтрокаГруппировкиОтчета);
	СтрокаГруппировкаДополнительныеОтчеты = СтрокаГруппировкиОтчета;
	
	ТаблицаДополнительныхКоманд = Новый ТаблицаЗначений;
	ТаблицаДополнительныхКоманд.Колонки.Добавить("УникальныйИдентификатор");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("Представление");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("Описание");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("Видимость");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("ПараметрКоманды");
	
	ВариантыОтчетовПереопределяемый.СписокДополнительныхКоманд(ТаблицаДополнительныхКоманд, ПутиПодсистемы);
	
	ПараметрыКоманд = Новый Массив;
	
	Если ТаблицаДополнительныхКоманд.Количество() > 0 Тогда
		Индекс = 0;
		Для Каждого СтрокаДополнительногоОтчета из ТаблицаДополнительныхКоманд Цикл
			
			СтрокаТаблицаВариантов = ТаблицаВариантов.Добавить();
			СтрокаТаблицаВариантов.Ключ	             = "Отчет._ДопонительнаяКоманда\"+СтрокаДополнительногоОтчета.УникальныйИдентификатор;
			СтрокаТаблицаВариантов.Представление     = СтрокаДополнительногоОтчета.Представление;
			СтрокаТаблицаВариантов.Описание          = СтрокаДополнительногоОтчета.Описание;
			СтрокаТаблицаВариантов.Видимость         = СтрокаДополнительногоОтчета.Видимость;
			СтрокаТаблицаВариантов.Сортировка        = СтрокаДополнительногоОтчета.Представление;
			СтрокаТаблицаВариантов.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.ДополнительнаяКоманда;
			СтрокаТаблицаВариантов.Подсистема        = "ДополнительныеОтчеты";
			
			СтрокаЗначенияКоманды = ЗначениеПараметровКоманд.Добавить();
			СтрокаЗначенияКоманды.Ключ = СтрокаДополнительногоОтчета.УникальныйИдентификатор;
			СтрокаЗначенияКоманды.ИндексПозицииЭлемента   = Индекс;
			ПараметрыКоманд.Добавить(Новый ФиксированнаяСтруктура(СтрокаДополнительногоОтчета.ПараметрКоманды));
			Индекс = Индекс + 1;
			
		КонецЦикла;
	КонецЕсли;
	
	МассивПараметровКомманд = Новый ФиксированныйМассив(ПараметрыКоманд);
	
	// Составим список отчетов
	СоответсвиеВариантовГруппировке      = Новый Соответствие;
	СоответсвиеВариантовНомеруСортировки = Новый Соответствие;
	
	Для каждого СтрокаВариантаОтчета из ТаблицаВариантов Цикл
		
		Если НЕ ГруппироватьВарианты или НЕ ЗначениеЗаполнено(СтрокаВариантаОтчета.Подсистема ) тогда
			СтрокаВариантаОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
			СоответсвиеВариантовГруппировке.Вставить(СтрокаВариантаОтчета.Ключ, "ПрочиеИПользовательскиеВариантыОтчета");
		Иначе
			Если Найти(СтрокаВариантаОтчета.Подсистема, "СмТакже") > 0  тогда
				СтрокаВариантаОтчета.Группировка = "СмТакже";
			ИначеЕсли СтрокаВариантаОтчета.Подсистема = СтрокаВариантаОтчета.Подсистема тогда
				Для каждого ГруппировкаВараинта из ГруппировкиВариантов Цикл
					Если СтрокаВариантаОтчета.Подсистема = ГруппировкаВараинта.Ключ тогда
						СтрокаВариантаОтчета.Группировка = ГруппировкаВараинта.Ключ;
					КонецЕсли;
				КонецЦикла;
				СоответсвиеВариантовГруппировке.Вставить(СтрокаВариантаОтчета.Ключ, СтрокаВариантаОтчета.Подсистема);
			КонецЕсли;
		КонецЕсли;
		
		СоответсвиеВариантовНомеруСортировки.Вставить(СтрокаВариантаОтчета.Ключ, СтрокаВариантаОтчета.Сортировка);
	КонецЦикла;
	
	Для каждого СтрокаВарианта из ТаблицаВариантов Цикл
		Видимость = СтрокаВарианта.Видимость;
		СтрокиПользователи = ТаблицаПользователей.НайтиСтроки(Новый Структура("Ключ, Пользователь", СтрокаВарианта.Ключ, ПараметрыСеанса.ТекущийПользователь));
		Для каждого СтрокаПользователи из СтрокиПользователи Цикл
			Видимость = СтрокаПользователи.Видимость;
		КонецЦикла;
		ДобавитьВариантыОтчета(ГруппировкиВариантов, СтрокаВарианта.Ключ,  СтрокаВарианта.Представление, СтрокаВарианта.Описание, СтрокаВарианта.ТипВариантаОтчета, СтрокаВарианта.Группировка, Видимость);
	КонецЦикла;
	
	//Удалить лишние группировки
	УдаляемыеГруппировки = Новый Массив;
	Для каждого СтрокаГруппировки из СгруппированныйСписокВариантовОтчетов.Строки Цикл
		Если СтрокаГруппировки.Строки.Количество() = 0 тогда
			УдаляемыеГруппировки.Добавить(СтрокаГруппировки);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаГруппировки из УдаляемыеГруппировки Цикл
		СгруппированныйСписокВариантовОтчетов.Строки.Удалить(СтрокаГруппировки);
	КонецЦикла;
	
	// Вывести группировки отчета
	Если СгруппированныйСписокВариантовОтчетов.Строки.Количество() = 1 тогда 
		СтрокаГруппировки = СгруппированныйСписокВариантовОтчетов.Строки[0];
		Элементы.ГруппаОсновная.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Элементы.ГруппаОсновная);
	Иначе
		Элементы.ГруппаОсновная.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Для каждого СтрокаГруппировки из СгруппированныйСписокВариантовОтчетов.Строки Цикл
			
			Если Найти(СтрокаГруппировки.Группировка, "СмТакже") > 0 тогда
				Продолжить;
			КонецЕсли;
			
			// ПРОПУСТИТЬ ГРУППУ СМ ТАКЖЕ
			УИ = "ГруппаРаздела_" + СтрокаГруппировки.Группировка;
			Группа = ДобавитьГруппу(УИ, Элементы.ГруппаОсновная, СтрокаГруппировки.ГруппировкаПредставление, истина);
			ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Группа);
		КонецЦикла;
	КонецЕсли;
	
	Если СгруппированныйСписокВариантовОтчетов.Строки.Найти("СмТакже", "Группировка") <>  Неопределено тогда
		Элементы.ГруппаСмТакже.Видимость = Истина;
		СтрокаГруппировки = СтрокаГруппировкаСмТакже;
		Элементы.ГруппаСмТакжеСпискиОтчетов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Элементы.ГруппаСмТакжеСпискиОтчетов);
	КонецЕсли;
	
КонецПроцедуры           


&НаСервере
Процедура ПолучитьСписокОбъектовОтчетов(Массив,Подсистема)
	
	ДобавитьВСписокОтчетыПодсистемы(Массив, Подсистема);
	
	Для каждого ОбъектПодсистемы из Подсистема.Подсистемы Цикл
		ПолучитьСписокОбъектовОтчетов(Массив, ОбъектПодсистемы);
	КонецЦикла
	
КонецПроцедуры

Процедура ДобавитьВСписокОтчетыПодсистемы(Массив, Подсистема)
	
	Для каждого Объект из Подсистема.Состав Цикл
		ПолноеИмя = Объект.ПолноеИмя();
		Если Найти(ПолноеИмя, "Отчет.") = 0 
			или СписокОтчетов.НайтиПоЗначению(ПолноеИмя) = Неопределено 
			или Параметры.НеВыводить.НайтиПоЗначению(ПолноеИмя) <> Неопределено 
			тогда
			Продолжить;
		КонецЕсли;
		Массив.Добавить(ПолноеИмя);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВариантыОтчета(ГруппировкиВариантов, Ключ, Представление, Описание, ТипВарианта, ГруппировкаРаздела, Видимость)
	
	Если ГруппировкаРаздела <> Неопределено тогда
		Если ГруппировкиВариантов[ГруппировкаРаздела].Строки.НайтиСтроки(Новый Структура("Ключ", Ключ)).Количество() > 0 тогда
			Возврат;
		КонецЕсли;
		СтрокаВариантаОтчета = ГруппировкиВариантов[ГруппировкаРаздела].Строки.Добавить();
	Иначе
		Если СтрокаФиксированнаяГруппировка.Строки.НайтиСтроки(Новый Структура("Ключ", Ключ)).Количество() > 0 тогда
			Возврат;
		КонецЕсли;
		СтрокаВариантаОтчета = СтрокаФиксированнаяГруппировка.Строки.Добавить();
	КонецЕсли;
	Если ТипВарианта = Перечисления.ТипыВариантовОтчетов.Отчет тогда
		СтрокаВариантаОтчета.Ключ          = Ключ+"_Отчет_";
	Иначе	
		СтрокаВариантаОтчета.Ключ          = Ключ;
	КонецЕсли;
	СтрокаВариантаОтчета.Представление = Представление;
	СтрокаВариантаОтчета.Описание      = Описание;
	СтрокаВариантаОтчета.Видимость     = Видимость;
	НомерСортировки                    = СоответсвиеВариантовНомеруСортировки[Ключ];
	СтрокаВариантаОтчета.Сортировка    = ?(НомерСортировки <> Неопределено, НомерСортировки, "ЯЯ9999999999999");
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Группа)
	
	СтрокаГруппировки.Строки.Сортировать("Сортировка, Представление");
	
	ИмяГруппировки = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(СтрокаГруппировки.Группировка);
	
	ИмяГруппировки = "_ГруппаРаздела_" + ИмяГруппировки;
	
	Колонка1 = ДобавитьГруппу(ИмяГруппировки + "Колонки1", Группа, "Первая колонка", , ложь);
	Колонка2 = ДобавитьГруппу(ИмяГруппировки + "Колонки2", Группа, "Вторая колонка", , ложь);
	Колонка3 = ДобавитьГруппу(ИмяГруппировки + "Колонки3", Группа, "Третья колонка", , ложь);
	
	КоличетвоВариантов = СтрокаГруппировки.Строки.Количество();
	
	МинимальноКолВоВариантов = Цел(КоличетвоВариантов/3);
	Остаток                  = КоличетвоВариантов - МинимальноКолВоВариантов*3;
	
	КоличествоВариантовВКолонке1 = МинимальноКолВоВариантов + ?(Остаток >= 1, 1, 0);
	КоличествоВариантовВКолонке2 = МинимальноКолВоВариантов + ?(Остаток >= 2, 1, 0);
	КоличествоВариантовВКолонке3 = МинимальноКолВоВариантов;
	
	Для Сч = 0 по КоличествоВариантовВКолонке1-1 Цикл
		СтрокаСсылки = СтрокаГруппировки.Строки[Сч];
		ДобавитьСсылкуНаВариантОтчета(СтрокаСсылки.Ключ + ИмяГруппировки, СтрокаСсылки.Представление,  СтрокаСсылки.Описание, Колонка1, СтрокаСсылки.Видимость);
	КонецЦикла;
	
	Для Сч = КоличествоВариантовВКолонке1 по КоличествоВариантовВКолонке1 + КоличествоВариантовВКолонке2-1 Цикл
		СтрокаСсылки = СтрокаГруппировки.Строки[Сч];
		ДобавитьСсылкуНаВариантОтчета(СтрокаСсылки.Ключ + ИмяГруппировки, СтрокаСсылки.Представление, СтрокаСсылки.Описание, Колонка2, СтрокаСсылки.Видимость);
	КонецЦикла;

	Для Сч = КоличествоВариантовВКолонке1 + КоличествоВариантовВКолонке2 по КоличествоВариантовВКолонке1 + КоличествоВариантовВКолонке2 + КоличествоВариантовВКолонке3-1 Цикл
		СтрокаСсылки = СтрокаГруппировки.Строки[Сч];
		ДобавитьСсылкуНаВариантОтчета(СтрокаСсылки.Ключ + ИмяГруппировки, СтрокаСсылки.Представление,  СтрокаСсылки.Описание, Колонка3, СтрокаСсылки.Видимость);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьГруппу(Имя, Родитель, Заголовок = "", Горизонтально = ложь, ОтображатьЗаголовок = истина)
	
	Имя = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(Имя);
	
	Группа = Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	Группа.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Заголовок           = Заголовок;
	Группа.ОтображатьЗаголовок = ОтображатьЗаголовок;
	Если Группа.ОтображатьЗаголовок тогда
		Группа.ШрифтЗаголовка = Новый Шрифт(Группа.ШрифтЗаголовка, , , истина);
	КонецЕсли;
	Группа.Отображение         = ОтображениеОбычнойГруппы.Отступ;
	Группа.Группировка         = ?(Горизонтально, ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);
	Группа.РастягиватьПоГоризонтали = Истина;
	
	Возврат Группа;
КонецФункции

&НаСервере
Процедура ДобавитьСсылкуНаВариантОтчета(Ключ, Представление, Описание, Родитель, Видимость)
	
	ИмяОтчета = Ключ;
	
	Ключ = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(Ключ);
	
	НоваяКоманда = Команды.Добавить(Ключ);
	НоваяКоманда.Действие = "ОткрытьОтчет";
	НоваяКоманда.Подсказка = Описание;
	
	Если Найти(Ключ, "Отчет_Точка__ДопонительнаяКоманда") = 0 тогда
		ПозицияВарианта = Найти(ИмяОтчета, "\");
		ИмяОтчета = Лев(ИмяОтчета, ПозицияВарианта-1);
		ИмяОтчета = СтрЗаменить(ИмяОтчета, "Отчет.", "");
		
		Отчет = Метаданные.Отчеты.Найти(ИмяОтчета);
		Если Отчет = Неопределено тогда
			Возврат;
		КонецЕсли;
		
		ЕстьПравоПросмотра  = ПравоДоступа("Просмотр", Отчет);
		Если НЕ ЕстьПравоПросмотра тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФО = Новый Структура("");
		
		ДоступенПоФоОпциям = ложь;
		СодержитсяВФО = ложь;
		Для каждого ФО из Метаданные.ФункциональныеОпции Цикл
			
			Если ФО.Состав.Найти(Отчет.Имя) = Неопределено тогда
				Продолжить;
			КонецЕсли;
			
			СодержитсяВФО = Истина;
			
			ЗначениеФО = ПолучитьФункциональнуюОпцию(ФО.Имя, ПараметрыФО);
			Если ТипЗнч(ЗначениеФО) = Тип("Булево") тогда
				Если ЗначениеФО тогда
					ДоступенПоФоОпциям = истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СодержитсяВФО = ложь;
		ДоступенПоФоОпциям = истина;
	КонецЕсли;
	
	Если СодержитсяВФО И НЕ ДоступенПоФоОпциям тогда
		Возврат;
	КонецЕсли;
		
	НоваяКнопка = Элементы.Добавить(Ключ, Тип("КнопкаФормы"), Родитель);
	НоваяКнопка.Заголовок  = Представление;
	НоваяКнопка.ИмяКоманды = Ключ;
	НоваяКнопка.Вид        = ВидКнопкиФормы.Гиперссылка;
	НоваяКнопка.Видимость  = Видимость;
	
Конецпроцедуры

&НаКлиенте             
Процедура ОткрытьОтчет(Команда)
	
	Ключ = Команда.Имя;
	Ключ = Лев(Ключ, Найти(Ключ, "_ГруппаРаздела_")-1);
	Ключ = ВариантыОтчетовКлиент.ВосстановитьЗапрещенныеСимволы(Ключ);
	
	ПозицияВарианта = Найти(Ключ, "\");
	ИмяОтчета = Лев(Ключ, ПозицияВарианта-1);
	КлючВарианта = Прав(Ключ, СтрДлина(Ключ)-ПозицияВарианта);
	
	ПараметрыОтчета = Новый Структура("КлючВарианта", КлючВарианта);
	
	СтандартнаяОбработка = истина;
	
	ВариантыОтчетовКлиентПереопределяемый.ПередОткрытиемФормыОтчета(Ключ, ПараметрыОтчета, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка тогда
		Если ИмяОтчета = "Отчет._ДопонительнаяКоманда" тогда
			ПараметрКоманды = ВариантыОтчетовКлиент.ПолучитьПараметрыКоманды(ЗначениеПараметровКоманд, МассивПараметровКомманд, КлючВарианта);
			Если ПараметрКоманды <> Неопределено тогда
				ВариантыОтчетовКлиентПереопределяемый.ВыполнитьВнешнююКоманду(КлючВарианта, ПараметрКоманды);
			КонецЕсли;
		Иначе
			ОткрытьФорму(ИмяОтчета + ".Форма", ПараметрыОтчета, , Ключ);
		КОнецЕсли;
	КонецЕсли;
	
КонецПроцедуры


// Процедура открывает форму выбора варианта отчета
//
&НаКлиенте
Процедура ОбщийСписокВариантовОтчетов(Команда)
	
	ПараметрыФормы = Новый Структура("Подсистемы, ИмяФормы, КартинкаФормы");
	
	ПараметрыФормы.Подсистемы           = Подсистемы;
	ПараметрыФормы.ИмяФормы             = "Все " + Нрег(ИмяФормыОтчетов);
	ПараметрыФормы.КартинкаФормы        = КартинкаФормы;
	
	СтруктураПараметров = ОткрытьФорму("ОбщаяФорма.ВсеОтчеты", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьВариантовОтчета(СтруктураПараметров)
	
	СписокКлючей = СтруктураПараметров.СписокВариантов;
	
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.Ссылка,
	|	ВариантыОтчетов.Видимость,
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта В (&Ключ)";
		 
	Запрос = Новый Запрос(ТЗ);
	Запрос.УстановитьПараметр("Ключ", СписокКлючей);
	
	УстановитьПривилегированныйРежим(истина);
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Пока Выборка.Следующий() Цикл
		ЗначениеЭлемент = СписокКлючей.НайтиПоЗначению(Выборка.Ключ);
		Если ЗначениеЭлемент <> Неопределено тогда
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			СтрокиПользователя = Объект.НастройкаВидимости.НайтиСтроки(Новый Структура("Пользователь", ТекущийПользователь));
			Если ЗначениеЭлемент.Пометка <> Выборка.Видимость тогда
				Если СтрокиПользователя.Количество() = 0 тогда
					СтрокаПользователя              = Объект.НастройкаВидимости.Добавить();
					СтрокаПользователя.Пользователь = ТекущийПользователь;
					Объект.Записать();
				КонецЕсли;
			Иначе
				Если СтрокиПользователя.Количество() > 0 тогда
 					Объект.НастройкаВидимости.Удалить(СтрокиПользователя[0]);
					Объект.Записать();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СписокВнешниихКоманд = Новый Массив;
	
	Для каждого Ключ из СписокКлючей Цикл
		Если Найти(Ключ.Значение, "Отчет._ДопонительнаяКоманда") > 0 Тогда
			КлючВарианта = СтрЗаменить(Ключ.Значение, "Отчет._ДопонительнаяКоманда\", "");
			ПараметрКоманды = Неопределено;
			Для Каждого СтрокаПараметра из ЗначениеПараметровКоманд Цикл
				Если СтрокаПараметра.Ключ = КлючВарианта Тогда
					ПараметрКоманды = МассивПараметровКомманд[СтрокаПараметра.ИндексПозицииЭлемента];
				КонецЕсли;
			КонецЦикла;
			СтруктураПараметра = Новый Структура("УникальныйИдентификатор, Видимость, ПараметрКоманды", 
			КлючВарианта, 
			Ключ.Пометка, 
			ПараметрКоманды);
			
			СписокВнешниихКоманд.Добавить(СтруктураПараметра);
			
		КонецЕсли;
	КонецЦикла;
	
	Если СписокВнешниихКоманд.Количество() > 0 Тогда
		ВариантыОтчетовПереопределяемый.УстановитьБыстрыйДоступВнешнихКоманд(СписокВнешниихКоманд);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(ложь);
	
	СписокЭлементов = СтруктураПараметров.СписокЭлементов;
	
	Для каждого Элемент из СписокЭлементов Цикл
		ЭлементФормы = Элементы.Найти(Элемент.Значение);
		Если ЭлементФормы <> Неопределено тогда
			 ЭлементФормы.Видимость = Элемент.Пометка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение <> Неопределено тогда
		УстановитьВидимостьВариантовОтчета(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьПанельОтчетов" тогда
		НарисоватьПанель();
	КонецЕсли;
	
КонецПроцедуры
