&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяРаздела = Параметры.ИмяРаздела;
	
	ВидОбработокСтрока = Параметры.Вид;
	
	Если	  ВидОбработокСтрока = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиЗаполнениеОбъекта() Тогда
		Заголовок = НСтр("ru = 'Команды заполнения объектов'");
	ИначеЕсли ВидОбработокСтрока = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиОтчет() Тогда
		Заголовок = НСтр("ru = 'Отчеты'");
	ИначеЕсли ВидОбработокСтрока = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма() Тогда
		Заголовок = НСтр("ru = 'Дополнительные печатные формы'");
	ИначеЕсли ВидОбработокСтрока = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиСозданиеСвязанныхОбъектов() Тогда
		Заголовок = НСтр("ru = 'Команды создания связанных объектов'");
	ИначеЕсли ВидОбработокСтрока = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка() Тогда
		Заголовок = НСтр("ru = 'Дополнительные обработки ('") + ДополнительныеОтчетыИОбработки.ПолучитьИмяРабочегоМеста(ИмяРаздела) + ")";
	ИначеЕсли ВидОбработокСтрока = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет()Тогда
		Заголовок = НСтр("ru = 'Дополнительные отчеты ('") + ДополнительныеОтчетыИОбработки.ПолучитьИмяРабочегоМеста(ИмяРаздела) + ")";
	КонецЕсли;
	
	ВидОбработок = ДополнительныеОтчетыИОбработки.ПолучитьВидОбработкиПоСтроковомуПредставлениюВида(ВидОбработокСтрока);
	
	Если ВидОбработок = Перечисления.ВидыДополнительныхОтчетовИОбработок.ДополнительныйОтчет
	 ИЛИ ВидОбработок = Перечисления.ВидыДополнительныхОтчетовИОбработок.Отчет Тогда
		Элементы.НастроитьСписокБыстрогоДоступа.Заголовок = НСтр("ru = 'Настроить список моих отчетов'");
	Иначе
		Элементы.НастроитьСписокБыстрогоДоступа.Заголовок = НСтр("ru = 'Настроить список моих обработок'");
	КонецЕсли;
	
	ЭтоГлобальныеОбработки = ДополнительныеОтчетыИОбработки.ПроверитьГлобальнаяОбработка(ВидОбработок);
	
	ЭтоНазначаемыеОбработки = ДополнительныеОтчетыИОбработки.ПроверитьНазначаемаяОбработка(ВидОбработок);
	
	Если ЭтоНазначаемыеОбработки Тогда
		
		Элементы.НастроитьСписокБыстрогоДоступа.Видимость = Ложь;
		
		ОбъектыНазначения.ЗагрузитьЗначения(Параметры.ОбъектыНазначения.ВыгрузитьЗначения());
		ОбНазначенияСсылка = ОбъектыНазначения.Получить(0).Значение;
		МетаданныеОбНазначения = ОбъектыНазначения.Получить(0).Значение.Метаданные();
		
		ПолноеИмяОбъектаМетаданных = МетаданныеОбНазначения.ПолноеИмя();
		
		ЭтоФормаОбъекта = ДополнительныеОтчетыИОбработки.ЭтоФормаОбъекта(ПолноеИмяОбъектаМетаданных, Параметры.ИмяФормы);
		
	КонецЕсли;
	
	ЗаполнитьТаблицуОбработок();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДоступныеКоманды(ЭтоНазначаемыеОбработки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДополнительныеОтчетыИОбработкиКоманды.Представление КАК Представление,
			|	ДополнительныеОтчетыИОбработкиКоманды.Идентификатор КАК Идентификатор,
			|	ДополнительныеОтчетыИОбработкиКоманды.ПоказыватьОповещение КАК ПоказыватьОповещение,
			|	ДополнительныеОтчетыИОбработкиКоманды.Модификатор КАК Модификатор,
			|	ВЫБОР
			|		КОГДА ДополнительныеОтчетыИОбработкиКоманды.ВариантЗапуска = ЗНАЧЕНИЕ(Перечисление.СпособыВызоваДополнительныхОбработок.ВызовКлиентскогоМетода)
			|			ТОГДА ""ВызовКлиентскогоМетода""
			|		КОГДА ДополнительныеОтчетыИОбработкиКоманды.ВариантЗапуска = ЗНАЧЕНИЕ(Перечисление.СпособыВызоваДополнительныхОбработок.ВызовСерверногоМетода)
			|			ТОГДА ""ВызовСерверногоМетода""
			|		КОГДА ДополнительныеОтчетыИОбработкиКоманды.ВариантЗапуска = ЗНАЧЕНИЕ(Перечисление.СпособыВызоваДополнительныхОбработок.ОткрытиеФормы)
			|			ТОГДА ""ОткрытиеФормы""
			|	КОНЕЦ КАК ВариантЗапуска,
			|	ДополнительныеОтчетыИОбработки.Ссылка			КАК Ссылка,
			|	ДополнительныеОтчетыИОбработки.БезопасныйРежим	КАК БезопасныйРежим
			|ИЗ
			|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
			|	СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки.Команды КАК ДополнительныеОтчетыИОбработкиКоманды
			|			ПО ДополнительныеОтчетыИОбработкиКоманды.Ссылка = ДополнительныеОтчетыИОбработки.Ссылка";
	
	Если ЭтоНазначаемыеОбработки Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки.Назначение КАК ДополнительныеОтчетыИОбработкиНазначение
			|			ПО ДополнительныеОтчетыИОбработкиНазначение.Ссылка = ДополнительныеОтчетыИОбработки.Ссылка";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
			|	СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки.Разделы КАК ДополнительныеОтчетыИОбработкиРазделы
			|			ПО ДополнительныеОтчетыИОбработкиРазделы.Ссылка = ДополнительныеОтчетыИОбработки.Ссылка
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПользовательскиеНастройкиДоступаКОбработкам КАК ПользовательскиеНастройкиДоступаКОбработкам
			|			ПО ПользовательскиеНастройкиДоступаКОбработкам.ДополнительныйОтчетИлиОбработка = ДополнительныеОтчетыИОбработки.Ссылка
			|			 И ПользовательскиеНастройкиДоступаКОбработкам.ИдентификаторКоманды = ДополнительныеОтчетыИОбработкиКоманды.Идентификатор
			|			 И ПользовательскиеНастройкиДоступаКОбработкам.Пользователь = &Пользователь";
		Запрос.Параметры.Вставить("Пользователь", ОбщегоНазначения.ТекущийПользователь());
	КонецЕсли;
	
	//////////////////////////
	// блок наложения фильтров
	
	ТекстЗапроса = ТекстЗапроса + "
			|ГДЕ
			|	ДополнительныеОтчетыИОбработки.Вид = &ВидОбработок
			|	И НЕ ДополнительныеОтчетыИОбработки.ПометкаУдаления
			|	И (
			|		ДополнительныеОтчетыИОбработки.Публикация = ЗНАЧЕНИЕ(Перечисление.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется)";
			
	Если РольДоступна(Метаданные.Роли.ДобавлениеИзменениеДополнительныхОтчетовИОбработок)
		ИЛИ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	ИЛИ ДополнительныеОтчетыИОбработки.Публикация = ЗНАЧЕНИЕ(Перечисление.ВариантыПубликацииДополнительныхОтчетовИОбработок.РежимОтладки)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
									| )";
	
	Если ЭтоНазначаемыеОбработки Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	И ДополнительныеОтчетыИОбработкиНазначение.ПолноеИмяОбъектаМетаданных ПОДОБНО &ПолноеИмяОбъектаМетаданных";
			
		Запрос.Параметры.Вставить("ПолноеИмяОбъектаМетаданных", ПолноеИмяОбъектаМетаданных);
		
		Если ЭтоФормаОбъекта Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И ДополнительныеОтчетыИОбработки.ИспользоватьДляФормыОбъекта";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|	И ДополнительныеОтчетыИОбработки.ИспользоватьДляФормыСписка";
		КонецЕсли;
		
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
			|	И ДополнительныеОтчетыИОбработкиРазделы.ИмяРаздела = &ИмяРаздела
			|	И ПользовательскиеНастройкиДоступаКОбработкам.Доступно";
		Запрос.Параметры.Вставить("ИмяРаздела", ИмяРаздела);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Параметры.Вставить("ВидОбработок", ВидОбработок);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаКлиенте
Процедура ОбработкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыполнитьОбработкуПоПараметрам();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	
	ВыполнитьОбработкуПоПараметрам()
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуПоПараметрам()
	
	ТекущиеДанные = Элементы.Обработки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГлобальныеОбработки Тогда
		ОбъектыНазначенияМассив = Неопределено;
	Иначе
		ОбъектыНазначенияМассив = ОбъектыНазначения.ВыгрузитьЗначения();
	КонецЕсли;
	
	ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьОбработку(
					ТекущиеДанные.Ссылка,
					ВидОбработокСтрока,
					ТекущиеДанные.Идентификатор,
					ТекущиеДанные.БезопасныйРежим,
					ТекущиеДанные.ВариантЗапуска,
					ТекущиеДанные.ПоказыватьОповещение,
					ТекущиеДанные.Модификатор,
					ОбъектыНазначенияМассив);
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОбработок()
	
	ЗначениеВРеквизитФормы(ПолучитьДоступныеКоманды(ЭтоНазначаемыеОбработки), "Обработки");
	
КонецПроцедуры

&НаКлиенте
Процедура Настроить(Команда)
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.НастройкаМоихОтчетовИОбработок",
		Новый Структура("ВидОбработок,ЭтоГлобальныеОбработки,ТекущийРаздел", 
						ВидОбработок,
						ЭтоГлобальныеОбработки,
						ИмяРаздела
						) );
	
	Если ТипЗнч(Результат) = Тип("Булево") Тогда
		ЗаполнитьТаблицуОбработок();
	КонецЕсли;
	
КонецПроцедуры
