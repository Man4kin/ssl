////////////////////////////////////////////////////////////////////////////////
// БЛОК ОБРАБОТЧИКОВ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидОбработок = Параметры.ВидОбработок;
	ЭтоГлобальныеОбработки = Параметры.ЭтоГлобальныеОбработки;
	ТекущийРаздел = Параметры.ТекущийРаздел;
	
	ЗаполнитьДеревоОбработок(Истина, "МоиКоманды");
	ЗаполнитьДеревоОбработок(Ложь, "КомандыИсточник");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКоманду(Команда)
	
	ТекущиеДанные = Элементы.КомандыИсточник.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И НЕ ПустаяСтрока(ТекущиеДанные.Идентификатор) Тогда
		ДобавитьКомандуСервер(ТекущиеДанные.Обработка, ТекущиеДанные.Идентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКоманду(Команда)
	
	ТекущиеДанные = Элементы.МоиКоманды.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И НЕ ПустаяСтрока(ТекущиеДанные.Идентификатор) Тогда
		УдалитьКомандуСервер(ТекущиеДанные.Обработка, ТекущиеДанные.Идентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВсеКоманды(Команда)
	
	Если ЭтоГлобальныеОбработки Тогда
		КомандыИсточникЭлементы = КомандыИсточник.ПолучитьЭлементы();
		
		Для Каждого СтрокаРазделы Из КомандыИсточникЭлементы Цикл
			ЭлементРаздел = НайтиЭлементРаздел(МоиКоманды, СтрокаРазделы.ИмяРаздела, СтрокаРазделы.Наименование);
			ЭлементыКоманды = СтрокаРазделы.ПолучитьЭлементы();
			Для Каждого ЭлементКоманда Из ЭлементыКоманды Цикл
				НоваяКоманда = НайтиЭлементКоманду(ЭлементРаздел.ПолучитьЭлементы(), ЭлементКоманда.Идентификатор);
				ЗаполнитьЗначенияСвойств(НоваяКоманда, ЭлементКоманда);
			КонецЦикла;
		КонецЦикла;
	Иначе
		ДобавитьВсеКомандыСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеКоманды(Команда)
	
	МоиКоманды.ПолучитьЭлементы().Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаписатьНаборОбработокПользователя();
	Закрыть(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// БЛОК ВСПОМОГАТЕЛЬНЫХ ФУНКЦИЙ

&НаСервере
Функция ЗаполнитьДеревоОбработок(КомандыПользователя, ИмяЭлементыРеквизитаДерева)
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "
			|ВЫБРАТЬ";
	
	Если ЭтоГлобальныеОбработки Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	ДополнительныеОтчетыИОбработкиРазделы.ИмяРаздела КАК ИмяРаздела,";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
			|	ДополнительныеОтчетыИОбработкиКоманды.Представление КАК Наименование,
			|	ДополнительныеОтчетыИОбработкиКоманды.Идентификатор КАК Идентификатор,
			|	ДополнительныеОтчетыИОбработки.Ссылка			КАК Обработка
			|ИЗ
			|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
			|	СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки.Команды КАК ДополнительныеОтчетыИОбработкиКоманды
			|			ПО ДополнительныеОтчетыИОбработкиКоманды.Ссылка = ДополнительныеОтчетыИОбработки.Ссылка";
	
	Если ЭтоГлобальныеОбработки Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки.Разделы КАК ДополнительныеОтчетыИОбработкиРазделы
			|			ПО ДополнительныеОтчетыИОбработкиРазделы.Ссылка = ДополнительныеОтчетыИОбработки.Ссылка";
	КонецЕсли;
	
	Если КомандыПользователя Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПользовательскиеНастройкиДоступаКОбработкам КАК ПользовательскиеНастройкиДоступаКОбработкам
			|			ПО ПользовательскиеНастройкиДоступаКОбработкам.ДополнительныйОтчетИлиОбработка = ДополнительныеОтчетыИОбработки.Ссылка
			|			 И ПользовательскиеНастройкиДоступаКОбработкам.ИдентификаторКоманды = ДополнительныеОтчетыИОбработкиКоманды.Идентификатор
			|			 И ПользовательскиеНастройкиДоступаКОбработкам.Пользователь = &Пользователь";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
			|ГДЕ
			|	ДополнительныеОтчетыИОбработки.Вид = &ВидОбработок
			|	И НЕ ДополнительныеОтчетыИОбработки.ПометкаУдаления
			|	И (
			|		ДополнительныеОтчетыИОбработки.Публикация = ЗНАЧЕНИЕ(Перечисление.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется)";
			
	Если РольДоступна(Метаданные.Роли.ДобавлениеИзменениеДополнительныхОтчетовИОбработок)
		ИЛИ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	ИЛИ ДополнительныеОтчетыИОбработки.Публикация = ЗНАЧЕНИЕ(Перечисление.ВариантыПубликацииДополнительныхОтчетовИОбработок.РежимОтладки)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
									| )";
									
	Если КомандыПользователя Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	И ПользовательскиеНастройкиДоступаКОбработкам.Доступно";
	КонецЕсли;
	
	Если ЭтоГлобальныеОбработки Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|ИТОГИ ПО
			|	ИмяРаздела";
	КонецЕсли;
	
	Запрос.Параметры.Вставить("Пользователь", ОбщегоНазначения.ТекущийПользователь());
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Параметры.Вставить("ВидОбработок", ВидОбработок);
	
	Если ЭтоГлобальныеОбработки Тогда
		ДеревоКоманд = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе
		ТаблицаКоманд = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	КомандыДерево = РеквизитФормыВЗначение(ИмяЭлементыРеквизитаДерева);
	КомандыДерево.Строки.Очистить();
	
	СобственныйИндекс = 0;
	Индекс = 0;
	
	Если ЭтоГлобальныеОбработки Тогда
		Для Каждого СтрокаРазделы Из ДеревоКоманд.Строки Цикл
			СтрокаВерхнегоУровня = КомандыДерево.Строки.Добавить();
			СтрокаВерхнегоУровня.ИмяРаздела = СтрокаРазделы.ИмяРаздела;
			СтрокаВерхнегоУровня.Наименование = ДополнительныеОтчетыИОбработки.ПолучитьИмяРабочегоМеста(СтрокаРазделы.ИмяРаздела);
			Если СтрокаВерхнегоУровня.ИмяРаздела = ТекущийРаздел Тогда
				СобственныйИндекс = Индекс;
			КонецЕсли;
			Для Каждого СтрокаКоманды Из СтрокаРазделы.Строки Цикл
				СтрокаОписанияКоманд = СтрокаВерхнегоУровня.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаОписанияКоманд, СтрокаКоманды);
				Индекс = Индекс + 1;
			КонецЦикла;
			Индекс = Индекс + 1;
		КонецЦикла;
	Иначе
		Для Каждого ЭлементКоманда Из ТаблицаКоманд Цикл
			НоваяСтрока = КомандыДерево.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементКоманда);
		КонецЦикла;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(КомандыДерево, ИмяЭлементыРеквизитаДерева);
	
	Элементы[ИмяЭлементыРеквизитаДерева].ТекущаяСтрока = СобственныйИндекс;
	
КонецФункции

&НаСервере
Процедура ДобавитьКомандуСервер(Обработка, Идентификатор)
	
	МоиКомандыДерево = РеквизитФормыВЗначение("МоиКоманды");
	НайденныеСтроки = МоиКомандыДерево.Строки.НайтиСтроки(Новый Структура("Обработка,Идентификатор", Обработка, Идентификатор), Истина);
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	КомандыИсточникДерево = РеквизитФормыВЗначение("КомандыИсточник");
	НайденныеСтроки = КомандыИсточникДерево.Строки.НайтиСтроки(Новый Структура("Обработка,Идентификатор", Обработка, Идентификатор), Истина);
		
	Если ЭтоГлобальныеОбработки Тогда	
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ЭлементРаздел = НайтиЭлементРаздел(МоиКоманды, НайденнаяСтрока.ИмяРаздела, НайденнаяСтрока.Родитель.Наименование);
			НоваяКоманда = ЭлементРаздел.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяКоманда, НайденнаяСтрока);
		КонецЦикла;
	Иначе
		НоваяКоманда = МоиКоманды.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяКоманда, НайденныеСтроки[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВсеКомандыСервер()
	
	ЗначениеВРеквизитФормы(РеквизитФормыВЗначение("КомандыИсточник"), "МоиКоманды");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьКомандуСервер(Обработка, Идентификатор)
	
	МоиКомандыЭлементы = МоиКоманды.ПолучитьЭлементы();
	
	Если ЭтоГлобальныеОбработки Тогда
		
		УдаляемыеРазделы = Новый Массив;
		
		Для Каждого СтрокаРазделы Из МоиКомандыЭлементы Цикл
			ЭлементыКоманды = СтрокаРазделы.ПолучитьЭлементы();
			Для Каждого СтрокаКоманды Из ЭлементыКоманды Цикл
				Если СтрокаКоманды.Обработка = Обработка И СтрокаКоманды.Идентификатор = Идентификатор Тогда
					ЭлементыКоманды.Удалить(ЭлементыКоманды.Индекс(СтрокаКоманды));
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЭлементыКоманды.Количество() = 0 Тогда
				УдаляемыеРазделы.Добавить(МоиКомандыЭлементы.Индекс(СтрокаРазделы));
			КонецЕсли;
		КонецЦикла;
		
		УдаляемыеРазделыТаблица = Новый ТаблицаЗначений;
		УдаляемыеРазделыТаблица.Колонки.Добавить("Раздел", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(10)));
		Для Каждого УдаляемыйРаздел Из УдаляемыеРазделы Цикл
			Строка = УдаляемыеРазделыТаблица.Добавить();
			Строка.Раздел = УдаляемыйРаздел;
		КонецЦикла;
		УдаляемыеРазделыТаблица.Свернуть("Раздел");
		УдаляемыеРазделыТаблица.Сортировать("Раздел Убыв");
		
		УдаляемыеРазделы = УдаляемыеРазделыТаблица.ВыгрузитьКолонку("Раздел");
		
		Для Каждого УдаляемыйРаздел Из УдаляемыеРазделы Цикл
			МоиКомандыЭлементы.Удалить(УдаляемыйРаздел);
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаКоманды Из МоиКомандыЭлементы Цикл
			Если СтрокаКоманды.Обработка = Обработка И СтрокаКоманды.Идентификатор = Идентификатор Тогда
				МоиКомандыЭлементы.Удалить(МоиКомандыЭлементы.Индекс(СтрокаКоманды));
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НайтиЭлементРаздел(ДанныеФормыКоманды, ИмяРаздела, Наименование)
	
	Результат = Неопределено;
	
	Для Каждого ЭлементДанных Из ДанныеФормыКоманды.ПолучитьЭлементы() Цикл
		Если ЭлементДанных.ИмяРаздела = ИмяРаздела Тогда
			Результат = ЭлементДанных;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Результат = Неопределено Тогда
		НовыйРаздел = ДанныеФормыКоманды.ПолучитьЭлементы().Добавить();
		НовыйРаздел.ИмяРаздела = ИмяРаздела;
		НовыйРаздел.Наименование = Наименование;
		Результат = НовыйРаздел;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НайтиЭлементКоманду(ДанныеФормыКоллекцияЭлементовДерева, Идентификатор)
	
	Результат = Неопределено;
	
	Для Каждого ЭлементДанных Из ДанныеФормыКоллекцияЭлементовДерева Цикл
		Если ЭлементДанных.Идентификатор = Идентификатор Тогда
			Результат = ЭлементДанных;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Результат = Неопределено Тогда
		НовыйРаздел = ДанныеФормыКоллекцияЭлементовДерева.Добавить();
		Результат = НовыйРаздел;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// БЛОК РАБОТЫ С ЗАПИСЯМИ РЕГИСТРА ПОЛЬЗОВАТЕЛЬСКОЙ ДОСТУПНОСТИ ОБРАБОТОК

&НаСервере
Процедура ЗаписатьНаборОбработокПользователя()
	
	ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДополнительныеОтчетыИОбработкиКоманды.Идентификатор КАК Идентификатор,
			|	ДополнительныеОтчетыИОбработки.Ссылка				КАК Обработка
			|ИЗ
			|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
			|	СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки.Команды КАК ДополнительныеОтчетыИОбработкиКоманды
			|			ПО ДополнительныеОтчетыИОбработкиКоманды.Ссылка = ДополнительныеОтчетыИОбработки.Ссылка
			|ГДЕ
			|	ДополнительныеОтчетыИОбработки.Вид = &ВидОбработок";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ВидОбработок", ВидОбработок);
	Запрос.Текст = ТекстЗапроса;
	
	ТаблицаОбработок = Запрос.Выполнить().Выгрузить();
	
	МоиКомандыДерево = РеквизитФормыВЗначение("МоиКоманды");
	
	ТаблицаМоихКоманд = ПолучитьТаблицу();
	
	Если ЭтоГлобальныеОбработки Тогда
		Для Каждого СтрокаРазделы Из МоиКомандыДерево.Строки Цикл
			Для Каждого СтрокаКоманды Из СтрокаРазделы.Строки Цикл
				НоваяСтрока = ТаблицаМоихКоманд.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоманды);
			КонецЦикла;
		КонецЦикла;
	Иначе
		Для Каждого СтрокаКоманды Из МоиКомандыДерево.Строки Цикл
			НоваяСтрока = ТаблицаМоихКоманд.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоманды);
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаМоихКоманд.Свернуть("Обработка,Идентификатор");
	
	//----------------
	
	ТаблицаСравнения = ТаблицаОбработок.Скопировать();
	ТаблицаСравнения.Колонки.Добавить("Признак", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1)));
	Для Каждого Строка Из ТаблицаСравнения Цикл
		Строка.Признак = -1;
	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаМоихКоманд Цикл
		НоваяСтрока = ТаблицаСравнения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.Признак = +1;
	КонецЦикла;
	
	ТаблицаСравнения.Свернуть("Обработка,Идентификатор", "Признак");
	
	СтрокиДляИсключенияИзСпискаСвоих = ТаблицаСравнения.НайтиСтроки(Новый Структура("Признак", -1));
	СтрокиДляДобавленияВСписокСвоих = ТаблицаСравнения.НайтиСтроки(Новый Структура("Признак", 0));
	
	НачатьТранзакцию();
	
	Попытка
		ДополнительныеОтчетыИОбработки.УдалитьКомандыИзСпискаСвоих(СтрокиДляИсключенияИзСпискаСвоих);
		ДополнительныеОтчетыИОбработки.ДобавитьКомандыВСписокСвоих(СтрокиДляДобавленияВСписокСвоих);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТаблицу()
	
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Обработка", Новый ОписаниеТипов("СправочникСсылка.ДополнительныеОтчетыИОбработки"));
	ТаблицаКоманд.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат ТаблицаКоманд;
	
КонецФункции
