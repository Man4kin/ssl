
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Менеджер = ПланыОбмена[Параметры.Узел.Метаданные().Имя];
	Если Параметры.Узел = Менеджер.ЭтотУзел() Тогда
		
		ВызватьИсключение НСтр("ru = 'Создание начального образа для данного узла невозможно.'", "ru");
		
	Иначе
		
		ВидБазы = 0;	// файловая база
		ТипСУБД = "";
		Узел = Параметры.Узел;
		МожноСоздатьФайловуюБазу = Истина;
		СистемнаяИнформация = Новый СистемнаяИнформация;
		Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
			МожноСоздатьФайловуюБазу = Ложь;
		КонецЕсли;
		
		КодыЛокализации = ПолучитьДопустимыеКодыЛокализации();
		ЯзыкФайловойБазы = Элементы.Найти("ЯзыкФайловойБазы");
		ЯзыкБазыСервера = Элементы.Найти("ЯзыкБазыСервера");
		Для Каждого Код Из КодыЛокализации Цикл
			Представление = ПредставлениеКодаЛокализации(Код);
			ЯзыкФайловойБазы.СписокВыбора.Добавить(Код, Представление);
			ЯзыкБазыСервера.СписокВыбора.Добавить(Код, Представление);
		КонецЦикла;
		Язык = КодЛокализацииИнформационнойБазы();
		
	КонецЕсли;
	
	ТипПлатформыСервера = РаботаСФайламиПовтИсп.ТипПлатформыСервера();
	Если ТипПлатформыСервера = ТипПлатформы.Windows_x86 ИЛИ ТипПлатформыСервера = ТипПлатформы.Windows_x86_64 Тогда
		Элементы.ПолноеИмяФайловойБазы.АвтоОтметкаНезаполненного = Истина;
		Элементы.ПутьКАрхивуСФайламиТомов.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.ПолноеИмяФайловойБазыLinux.АвтоОтметкаНезаполненного = Истина;
		Элементы.ПутьКАрхивуСФайламиТомовLinux.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидБазыПриИзменении(Элемент)
	// переключить страницу параметров
	Страницы = Элементы.Найти("Страницы");
	Страницы.ТекущаяСтраница = Страницы.ПодчиненныеЭлементы[ВидБазы];
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНачальныйОбраз(Команда)
	ОчиститьСообщения();
	
	Состояние(НСтр("ru = 'Обмен данными'", "ru"), ,
						 НСтр("ru = 'Осуществляется создание начального образа...'", "ru"),
						 БиблиотекаКартинок.СоздатьНачальныйОбраз);
	ВременнаяСсылка = Неопределено;
	Если ВидБазы = 0 Тогда
		
		Если МожноСоздатьФайловуюБазу = Ложь Тогда
			
			ВызватьИсключение НСтр("ru = 'Создание начального образа файловой информационной базы на данной платформе не поддерживается.'", "ru");
			
		КонецЕсли;
		
		Если Не ОбменФайлами.СоздатьФайловыйНачальныйОбразНаСервере(Узел, УникальныйИдентификатор, Язык, ПолноеИмяФайловойБазыWindows, ПолноеИмяФайловойБазыLinux, ПутьКАрхивуСФайламиТомовWindows, ПутьКАрхивуСФайламиТомовLinux) Тогда
			Состояние();
			Возврат;
		КонецЕсли;	
		
	Иначе
		СтрокаСоединения = "Srvr=""" + Сервер + """;" 
		                 + "Ref=""" + ИмяБазы + """;"
		                 + "DBMS=""" + ТипСУБД + """;"
		                 + "DBSrvr=""" + СерверБазыДанных + """;"
						 + "DB=""" + ИмяБазыДанных + """;"
						 + "DBUID=""" + ПользовательБазыДанных + """;"
						 + "DBPwd=""" + ПарольПользователя + """;"
						 + "SQLYOffs=""" + СмещениеДат + """;"
						 + "Locale=""" + Язык + """;";
		Если Не ОбменФайлами.СоздатьСерверныйНачальныйОбразНаСервере(Узел, СтрокаСоединения, ПутьКАрхивуСФайламиТомовWindows, ПутьКАрхивуСФайламиТомовLinux) Тогда
			Состояние();
			Возврат;
		КонецЕсли;	
		
	КонецЕсли;

	Предупреждение(НСтр("ru = 'Создание начального образа успешно завершено.'", "ru"));
КонецПроцедуры

