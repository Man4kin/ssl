
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БылаНажатаКнопкаЗакрытия = Ложь;
	СсылкаНаОбъект = Параметры.Ссылка;
	
	// Получим список доступных наборов свойств
	ДоступныеНаборы = УправлениеСвойствами.ПолучитьДоступныеНаборыСвойств(Параметры.Ссылка);
	Если ТипЗнч(ДоступныеНаборы) = Тип("СписокЗначений") Тогда
		ДоступныеНаборыСвойств = ДоступныеНаборы;
	ИначеЕсли ДоступныеНаборы <> Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка() Тогда
		ДоступныеНаборыСвойств.Добавить(ДоступныеНаборы);
	КонецЕсли;
	
	// Установим заголовок
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	              НСтр("ru = 'Дополнительные сведения: %1'"), Строка(Параметры.Ссылка) );
	
	// Заполним таблицу значений свойств
	ЗаполнитьТаблицуЗначенийСвойств(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность И Не БылаНажатаКнопкаЗакрытия Тогда
		Результат = Вопрос(НСтр("ru = 'Значения были изменены. Сохранить?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Если Результат = КодВозвратаДиалога.Да Тогда
			ЗаписатьЗначенияСвойств();
		ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененНаборСвойств" Тогда
		Если ДоступныеНаборыСвойств.НайтиПоЗначению(Параметр) <> Неопределено Тогда
			ЗаполнитьТаблицуЗначенийСвойств(Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ДеревоЗначенийСвойств И команды РедактироватьСоставСвойств

&НаКлиенте
Процедура ТаблицаЗначенийСвойствПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийСвойствПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийСвойствПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.НомерКартинки = -1 Тогда
		Отказ = Истина;
		Элемент.ТекущиеДанные.Значение = Элемент.ТекущиеДанные.ТипЗначения.ПривестиЗначение(Неопределено);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийСвойствПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элемент.ПодчиненныеЭлементы.ТаблицаЗначенийСвойствЗначение.ОграничениеТипа = Элемент.ТекущиеДанные.ТипЗначения;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСоставСвойств()
	
	Если ДоступныеНаборыСвойств.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Для объекта нет доступных ему наборов свойств!'"));
		Возврат;
	ИначеЕсли ДоступныеНаборыСвойств.Количество() = 1 Тогда
		Элемент = ДоступныеНаборыСвойств.Получить(0);
	Иначе
		Элемент = ДоступныеНаборыСвойств.ВыбратьЭлемент();
		Если Элемент = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормыНабораСвойств = Новый Структура("Ключ", Элемент.Значение);
	ОткрытьФормуМодально("Справочник.НаборыДополнительныхРеквизитовИСведений.Форма.ФормаЭлемента", ПараметрыФормыНабораСвойств);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ НАЖАТИЯ НА КЛАВИШИ ОК И ОТМЕНА

&НаКлиенте
Процедура КомандаОКВыполнить()
	
	ЗаписатьЗначенияСвойств();
	БылаНажатаКнопкаЗакрытия = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменаВыполнить()
	
	БылаНажатаКнопкаЗакрытия = Истина;
	Закрыть();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Заполнить значениями дерево свойств
&НаСервере
Процедура ЗаполнитьТаблицуЗначенийСвойств(ИзОбработчикаПриСоздании)
	
	Если ИзОбработчикаПриСоздании Тогда
		ЗначенияСвойств = ПрочитатьЗначенияСвойствИзРегистраСведений();
	Иначе
		ЗначенияСвойств = ПолучитьТекущиеЗначенияСвойств();
		ТаблицаЗначенийСвойств.Очистить();
	КонецЕсли;
	
	Таблица = УправлениеСвойствами.ПолучитьТаблицуЗначенийСвойств(ЗначенияСвойств, ДоступныеНаборыСвойств, Истина);
	Для Каждого Стр Из Таблица Цикл
		новСтр = ТаблицаЗначенийСвойств.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Стр);
		новСтр.НомерКартинки = ?(Стр.Удалено, 0, -1);
		
		Если Стр.Значение = Неопределено И 
			ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(Стр.ТипЗначения, Тип("Булево")) ТОгда
			новСтр.Значение = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Записать значения свойств в регистр сведений
&НаКлиенте
Процедура ЗаписатьЗначенияСвойств()
	
	ЗначенияСвойств = Новый Массив;
	
	Для Каждого Стр Из ТаблицаЗначенийСвойств Цикл
		Если ЗначениеЗаполнено(Стр.Значение) И (Стр.Значение <> Ложь) Тогда
			Значение = Новый Структура("Свойство, Значение", Стр.Свойство, Стр.Значение);
			ЗначенияСвойств.Добавить(Значение);
		КонецЕсли;
	КонецЦикла;
	
	ЗаписатьНаборСвойствВРегистр(СсылкаНаОбъект, ЗначенияСвойств);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьНаборСвойствВРегистр(Ссылка, ЗначенияСвойств)
	
	Набор = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(Ссылка);
	
	Для Каждого Стр Из ЗначенияСвойств Цикл
		Запись = Набор.Добавить();
		Запись.Свойство = Стр.Свойство;
		Запись.Значение = Стр.Значение;
		Запись.Объект   = Ссылка;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Набор.Записать();
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьЗначенияСвойствИзРегистраСведений()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Объект";
	Запрос.УстановитьПараметр("Объект", Параметры.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция ПолучитьТекущиеЗначенияСвойств()
	
	ЗначенияСвойств = Новый ТаблицаЗначений;
	ЗначенияСвойств.Колонки.Добавить("Свойство");
	ЗначенияСвойств.Колонки.Добавить("Значение");
	
	Для Каждого Стр Из ТаблицаЗначенийСвойств Цикл
		Если ЗначениеЗаполнено(Стр.Значение) И (Стр.Значение <> Ложь) Тогда
			новСтр = ЗначенияСвойств.Добавить();
			новСтр.Свойство = Стр.Свойство;
			новСтр.Значение = Стр.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначенияСвойств;
	
КонецФункции
