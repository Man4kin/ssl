
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ГлавныйУзел = (ПланыОбмена.ГлавныйУзел() <> Неопределено);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПутиМодулейКриптографииСерверовЛинукс.ИмяКомпьютера,
	               |	ПутиМодулейКриптографииСерверовЛинукс.ПутьМодуляКриптографии,
	               |	ПутиМодулейКриптографииСерверовЛинукс.Комментарий
	               |ИЗ
	               |	РегистрСведений.ПутиМодулейКриптографииСерверовЛинукс КАК ПутиМодулейКриптографииСерверовЛинукс";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = ПутиМодулейКриптографииСерверовЛинукс.Добавить();
		
		Строка.ИмяКомпьютера = Выборка.ИмяКомпьютера;
		Строка.ПутьМодуляКриптографии = Выборка.ПутьМодуляКриптографии;
		Строка.Комментарий = Выборка.Комментарий;			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПровайдерЭЦП = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().ПровайдерЭЦП;
	ПутьМодуляКриптографии = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().ПутьМодуляКриптографии;
	ТипПровайдераЭЦП = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().ТипПровайдераЭЦП;
	
	АлгоритмПодписи = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().АлгоритмПодписи;
	АлгоритмХеширования = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().АлгоритмХеширования;
	АлгоритмШифрования = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().АлгоритмШифрования;
	
	ВыполнятьПроверкуЭЦПНаСервере = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().ВыполнятьПроверкуЭЦПНаСервере;
	
	Элементы.ПутиМодулейКриптографииСерверовЛинукс.Доступность = ВыполнятьПроверкуЭЦПНаСервере;
	Элементы.ПутиМодулейКриптографииСерверовЛинуксКоманднаяПанель.Доступность = ВыполнятьПроверкуЭЦПНаСервере;
	
	Если ГлавныйУзел Тогда // мы в не главном узле
		Элементы.АлгоритмПодписи.ТолькоПросмотр = Истина;
		Элементы.АлгоритмХеширования.ТолькоПросмотр = Истина;
		Элементы.АлгоритмШифрования.ТолькоПросмотр = Истина;
		Элементы.ПровайдерЭЦП.ТолькоПросмотр = Истина;
		Элементы.ТипПровайдераЭЦП.ТолькоПросмотр = Истина;
	КонецЕсли;	
	
	Если ТипПровайдераЭЦП = 0 Тогда
		ТипПровайдераЭЦП = 75; // Крипто Про
	КонецЕсли;	
	
	Если ПустаяСтрока(ПровайдерЭЦП) Тогда
		
		Попытка
			МенеджерКриптографии = Новый МенеджерКриптографии("", "", ТипПровайдераЭЦП);
			ИнформацияМенеджера = МенеджерКриптографии.ПолучитьИнформациюМодуляКриптографии();
			ПровайдерЭЦП = ИнформацияМенеджера.Имя;
		Исключение 
			// не обрабатываем исключение - вполне допустимо исключение, если нет ни одного криптопровайдера
		КонецПопытки;	
		
	КонецЕсли;	
	
	ЗаполнитьСпискиВыбораНаКлиенте();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьПараметры()
	
	УстановитьПривилегированныйРежим(Истина);
	Константы.ПровайдерЭЦП.Установить(ПровайдерЭЦП);
	Константы.ТипПровайдераЭЦП.Установить(ТипПровайдераЭЦП);
	Константы.АлгоритмХеширования.Установить(АлгоритмХеширования);
	Константы.АлгоритмПодписи.Установить(АлгоритмПодписи);
	Константы.АлгоритмШифрования.Установить(АлгоритмШифрования);
	Константы.ВыполнятьПроверкуЭЦПНаСервере.Установить(ВыполнятьПроверкуЭЦПНаСервере);
	
	Для Каждого Строка Из ПутиМодулейКриптографииСерверовЛинукс Цикл
		НаборЗаписей = РегистрыСведений.ПутиМодулейКриптографииСерверовЛинукс.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.ИмяКомпьютера.Установить(Строка.ИмяКомпьютера);

		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ИмяКомпьютера = Строка.ИмяКомпьютера;
		НоваяЗапись.ПутьМодуляКриптографии = Строка.ПутьМодуляКриптографии;
		НоваяЗапись.Комментарий = Строка.Комментарий;

		НаборЗаписей.Записать();
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьПараметры();
	ОбновитьПовторноИспользуемыеЗначения();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбораНаКлиенте()
	
	Если НЕ ПустаяСтрока(ПровайдерЭЦП) Тогда
		Попытка
			ПутьМодуляКриптографии = ЭлектронноЦифроваяПодписьКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСЭЦП().ПутьМодуляКриптографии;
			
			МенеджерКриптографии = Новый МенеджерКриптографии(ПровайдерЭЦП, ПутьМодуляКриптографии, ТипПровайдераЭЦП);
			ИнформацияМенеджера = МенеджерКриптографии.ПолучитьИнформациюМодуляКриптографии();
			
			// заполняем списки выбора
			Элементы.АлгоритмПодписи.СписокВыбора.Очистить();
			Для Индекс = 0 По ИнформацияМенеджера.АлгоритмыПодписи.Количество() - 1 Цикл
				Строка = ИнформацияМенеджера.АлгоритмыПодписи.Получить(Индекс);
				Элементы.АлгоритмПодписи.СписокВыбора.Добавить(Строка);
			КонецЦикла;	
			
			Элементы.АлгоритмХеширования.СписокВыбора.Очистить();
			Для Индекс = 0 По ИнформацияМенеджера.АлгоритмыХеширования.Количество() - 1 Цикл
				Строка = ИнформацияМенеджера.АлгоритмыХеширования.Получить(Индекс);
				Элементы.АлгоритмХеширования.СписокВыбора.Добавить(Строка);
			КонецЦикла;	
			
			Элементы.АлгоритмШифрования.СписокВыбора.Очистить();
			Для Индекс = 0 По ИнформацияМенеджера.АлгоритмыШифрования.Количество() - 1 Цикл
				Строка = ИнформацияМенеджера.АлгоритмыШифрования.Получить(Индекс);
				Элементы.АлгоритмШифрования.СписокВыбора.Добавить(Строка);
			КонецЦикла;	
			
		Исключение
			// Ситуация, когда нет ни одного криптопровайдера является нормальной
		КонецПопытки;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПровайдерЭЦППриИзменении(Элемент)
	
	ЗаполнитьСпискиВыбораНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьПроверкуЭЦПНаСервереПриИзменении(Элемент)
	
	Элементы.ПутиМодулейКриптографииСерверовЛинукс.Доступность = ВыполнятьПроверкуЭЦПНаСервере;
	Элементы.ПутиМодулейКриптографииСерверовЛинуксКоманднаяПанель.Доступность = ВыполнятьПроверкуЭЦПНаСервере;
	
КонецПроцедуры

