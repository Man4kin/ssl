
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.СписокЗначенийДляВыбора <> Неопределено
		И Параметры.СписокЗначенийДляВыбора.Количество() > 0 Тогда
		
		ЭлементыДерева = Дерево.ПолучитьЭлементы();
		Для Каждого Элемент Из Параметры.СписокЗначенийДляВыбора Цикл
			НоваяСтрока = ЭлементыДерева.Добавить();	
			НоваяСтрока.Наименование = Элемент.Значение.Name;
			НоваяСтрока.ID = Элемент.Значение.ID;
			НоваяСтрока.Тип = Элемент.Значение.Type;
			НоваяСтрока.Картинка = 2;
		КонецЦикла;
		
		Элементы.ФормаНайти.Видимость = Ложь;
		Элементы.ФормаОтменитьПоиск.Видимость = Ложь;
		Элементы.ДеревоКонтекстноеМенюНайти.Видимость = Ложь;
		Элементы.ДеревоКонтекстноеМенюОтменитьПоиск.Видимость = Ложь;
		
	Иначе
		ТипОбъектаВыбора = Параметры.ТипОбъектаВыбора;
		Отбор = Параметры.Отбор;
		
		ЗаполнитьДеревоПапок(Дерево.ПолучитьЭлементы(), ""); // корневые папки
		
		// найти эл по умолч
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда 
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;	
	
	ВыборГрупп = Параметры.ВыборГрупп;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПапок(ВеткаДерева, ИдентификаторПапки = Неопределено, СтрокаПоиска = Неопределено)
	
	ВеткаДерева.Очистить();
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	
	СписокУсловий = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListQuery");
	Если ИдентификаторПапки <> Неопределено Тогда
		РодительИд = РаботаС1СДокументооборот.СоздатьObjectID(Прокси, ИдентификаторПапки, ТипОбъектаВыбора);
		
		Условие = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListCondition");
		Условие.property = "Parent";
		Условие.value = РодительИд;
		
		СписокУсловий.conditions.Добавить(Условие);
	КонецЕсли;
	
	Если СтрокаПоиска <> Неопределено Тогда
		Условие = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListCondition");
		Условие.property = "Name";
		Условие.value = СтрокаПоиска;
		
		СписокУсловий.conditions.Добавить(Условие);
	КонецЕсли;
	
	Если ТипЗнч(Отбор) = Тип("Структура") Тогда 
		Для Каждого СтрокаОтбора Из Отбор Цикл
			Условие = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListCondition");
			Условие.property = СтрокаОтбора.Ключ;
			
			Если ТипЗнч(СтрокаОтбора.Значение) = Тип("Структура") Тогда
				Условие.value =	РаботаС1СДокументооборот.СоздатьObjectID(Прокси, СтрокаОтбора.Значение.id, СтрокаОтбора.Значение.type);
			Иначе
				Условие.value = СтрокаОтбора.Значение;
			КонецЕсли;	
		
			СписокУсловий.conditions.Добавить(Условие);
		КонецЦикла;	
	КонецЕсли;	
	
	Запрос = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetObjectListRequest");
	Запрос.type = ТипОбъектаВыбора;
	Запрос.query = СписокУсловий;
	
	Результат = Прокси.execute(Запрос);
	РаботаС1СДокументооборотВызовСервера.ПроверитьВозвратВебСервиса(Прокси, Результат);
	
	Для Каждого Элемент Из Результат.items Цикл
		
		НоваяСтрока = ВеткаДерева.Добавить();
		НоваяСтрока.Наименование = Элемент.object.name;
		НоваяСтрока.ID = Элемент.object.objectId.id;
		НоваяСтрока.Тип = Элемент.object.objectId.type;
		НоваяСтрока.ЭтоГруппа = Элемент.isFolder;
		
		Если ТипОбъектаВыбора = "DMFileFolder" ИЛИ ТипОбъектаВыбора = "DMInternalDocumentFolder" Тогда
			НоваяСтрока.Картинка = 0;
		Иначе
			Если Элемент.isFolder Тогда
				НоваяСтрока.Картинка = 0;
			Иначе	
				НоваяСтрока.Картинка = 2;
			КонецЕсли;	
		КонецЕсли;
		
		Если Элемент.canHaveChildren И (СтрокаПоиска = Неопределено) Тогда
			НоваяСтрока.ПодпапкиСчитаны = Ложь;
			ФиктивныйЛист = НоваяСтрока.ПолучитьЭлементы().Добавить(); // чтобы появился плюсик
		Иначе
			НоваяСтрока.ПодпапкиСчитаны = Истина;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Дерево.НайтиПоИдентификатору(Значение);
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.ЭтоГруппа И Не ВыборГрупп Тогда 
		Предупреждение(НСтр("ru = 'Выберите элемент, а не группу!'"));
		Возврат;
	КонецЕсли;
		
	Результат = Новый Структура;
	Результат.Вставить("РеквизитID",  ТекущиеДанные.ID);
	Результат.Вставить("РеквизитТип", ТекущиеДанные.Тип);
	Результат.Вставить("РеквизитПредставление", ТекущиеДанные.Наименование);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.ЭтоГруппа И Не ВыборГрупп Тогда 
		Предупреждение(НСтр("ru = 'Выберите элемент, а не группу!'"));
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("РеквизитID",  ТекущиеДанные.ID);
	Результат.Вставить("РеквизитТип", ТекущиеДанные.Тип);
	Результат.Вставить("РеквизитПредставление", ТекущиеДанные.Наименование);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередРазворачиванием(Элемент, Строка, Отказ)
	
	Лист = Дерево.НайтиПоИдентификатору(Строка);
	
	Если Лист = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ Лист.ПодпапкиСчитаны Тогда
		ЗаполнитьДеревоПапокПоИдентификатору(Строка, Лист.ID);
		Лист.ПодпапкиСчитаны = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПапокПоИдентификатору(ИдентификаторЭлементаДерева, ИдентификаторПапки)
	
	Лист = Дерево.НайтиПоИдентификатору(ИдентификаторЭлементаДерева);
	
	Если Лист = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьДеревоПапок(Лист.ПолучитьЭлементы(), Лист.ID);
	
КонецПроцедуры		

&НаКлиенте
Процедура НайтиВыполнить(Команда)
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотПоискВСписке");
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ЗаполнитьДеревоПапокОтКорня(, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоиск(Команда)
	
	// отменяем режим поиска
	ЗаполнитьДеревоПапокОтКорня(""); // корневые папки
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПапокОтКорня(ИдентификаторПапки = Неопределено, СтрокаПоиска = Неопределено)
	
	ЗаполнитьДеревоПапок(Дерево.ПолучитьЭлементы(), ИдентификаторПапки, СтрокаПоиска);
	
КонецПроцедуры
