Перем СоответсвиеВариантовГруппировке, СоответсвиеВариантовНомеруСортировки, СписокОтчетов; 
Перем ПараметрыВызова, СтрокаФиксированнаяГруппировка, ТаблицаВариантов;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.Подсистемы) = Тип("СписокЗначений") тогда
		ПутиПодсистемы = Параметры.Подсистемы;
	Иначе
		ПутиПодсистемы = Новый СписокЗначений;
		ПутиПодсистемы.Добавить(Параметры.Подсистемы);
	КонецЕсли;
	
	Закрепить = БиблиотекаКартинок.ЗакрепитьВариантОтчета;
	Открепить = БиблиотекаКартинок.ОткрепитьВариантОтчета;
	
	ЭтаФорма.Заголовок = Параметры.ИмяФормы;
	
	ГруппироватьВарианты = Истина;
	
	СписокОтчетов = ВариантыОтчетовПереопределяемый.СписокОтчетовПоддерживаемыхПодсистемой();
	
	ДеревоПодсистем = Новый ДеревоЗначений;
	ДеревоПодсистем.Колонки.Добавить("Подсистема");
	ДеревоПодсистем.Колонки.Добавить("Название");
	
	// Сделаем список отчетов
	СписокПодсистем = ВариантыОтчетов.ПолучитьСписокПодсистем(ПутиПодсистемы, ДеревоПодсистем);
	
	Если СписокПодсистем.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	МаксимальнаяДлинна = 0;
	
	Для каждого ЭлементСпПодсистема из СписокПодсистем Цикл
		МаксимальнаяДлинна = Макс(СтрДлина(ЭлементСпПодсистема.Значение), МаксимальнаяДлинна);
	КонецЦикла;
	
	
	// Получить вариантов отчетов с разделами 
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ВариантыОтчетов.Наименование КАК Представление,
	|	ВариантыОтчетов.Описание,
	|	ВариантыОтчетов.Видимость,
	|	ВариантыОтчетов.Наименование КАК Сортировка,
	|	ВариантыОтчетов.ТипВариантаОтчета,
	|	ВариантыОтчетов.Администратор,
	|	ВариантыОтчетовПодсистемы.Подсистема
	|ИЗ
	|	Справочник.ВариантыОтчетов.Подсистемы КАК ВариантыОтчетовПодсистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ПО ВариантыОтчетовПодсистемы.Ссылка = ВариантыОтчетов.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВЫРАЗИТЬ(ВариантыОтчетовПодсистемы.Подсистема КАК Строка("+Формат(МаксимальнаяДлинна, "ЧГ=0")+"))В (&Подсистемы)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка";
	
	Запрос = Новый Запрос(ТЗ);
	Запрос.УстановитьПараметр("Подсистемы",       СписокПодсистем);
	Запрос.УстановитьПараметр("СписокОтчетов", СписокОтчетов);
	УстановитьПривилегированныйРежим(истина);
	ТаблицаВариантов = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);
	
	// роли вариантов
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ВариантыОтчетовНастройкаВидимости.Пользователь,
	|	НЕ ВариантыОтчетов.Видимость КАК Видимость
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов.НастройкаВидимости КАК ВариантыОтчетовНастройкаВидимости
	|		ПО ВариантыОтчетов.Ссылка = ВариантыОтчетовНастройкаВидимости.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта В (&Ключи)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|	И (ВариантыОтчетовНастройкаВидимости.Пользователь = Пользователь)";
	
	Запрос.Текст = ТЗ;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Ключи", ТаблицаВариантов.ВыгрузитьКолонку("Ключ"));
	УстановитьПривилегированныйРежим(истина);
	ТаблицаПользователей = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);
	
	ТаблицаВариантов.Колонки.Добавить("Группировка", Новый ОписаниеТипов(,, Новый КвалификаторыСтроки()));
	
	СписокГруппировок = Новый ТаблицаЗначений;
	СписокГруппировок.Колонки.Добавить("Группировка");
	СписокГруппировок.Колонки.Добавить("ГруппировкаПредставление");
	
	Для каждого СтрокаПодсистемы из ДеревоПодсистем.Строки Цикл
		ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
		ДанныеГруппировки.Группировка              = СтрокаПодсистемы.Подсистема;
		ДанныеГруппировки.ГруппировкаПредставление = "";
		Для каждого СтрокаГруппировки из СтрокаПодсистемы.Строки Цикл
			ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
			ДанныеГруппировки.Группировка              = СтрокаГруппировки.Подсистема;
			ДанныеГруппировки.ГруппировкаПредставление = СтрокаГруппировки.Название;
		КонецЦикла;
	КонецЦикла;
	
	// создадим дерево вариантов
	
	ГруппировкиВариантов = Новый Соответствие;
	
	ГруппировкиВариантовСмТакже = Новый СписокЗначений;
	
	СгруппированныйСписокВариантовОтчетов = Новый ДеревоЗначений;
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Ключ");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Представление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Описание");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Группировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("ГруппировкаПредставление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Сортировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Видимость");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Администратор");
	
	Если ГруппироватьВарианты тогда
		Для каждого ГруппировкаВар из СписокГруппировок Цикл
			Если Найти(ГруппировкаВар.Группировка, "СмТакже") > 0  тогда
				Продолжить;
			КонецЕсли;
			СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
			СтрокаГруппировкиОтчета.Группировка = ГруппировкаВар.Группировка;
			СтрокаГруппировкиОтчета.ГруппировкаПредставление = ГруппировкаВар.ГруппировкаПредставление;
			ГруппировкиВариантов.Вставить(ГруппировкаВар.Группировка, СтрокаГруппировкиОтчета);
		КонецЦикла;
	КонецЕсли;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'Прочие'");
	ГруппировкиВариантов.Вставить("ПрочиеИПользовательскиеВариантыОтчета", СтрокаГруппировкиОтчета);
	СтрокаФиксированнаяГруппировка = СтрокаГруппировкиОтчета;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "СмТакже";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление =  НСТр("ru = 'См. также'");
	ГруппировкиВариантов.Вставить("СмТакже", СтрокаГруппировкиОтчета);
	СтрокаГруппировкаСмТакже = СтрокаГруппировкиОтчета;

	
	// Составим список отчетов
	СоответсвиеВариантовГруппировке      = Новый Соответствие;
	СоответсвиеВариантовНомеруСортировки = Новый Соответствие;
	
	Для каждого СтрокаВариантаОтчета из ТаблицаВариантов Цикл
		
		Если НЕ ГруппироватьВарианты или НЕ ЗначениеЗаполнено(СтрокаВариантаОтчета.Подсистема ) тогда
			СтрокаВариантаОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
			СоответсвиеВариантовГруппировке.Вставить(СтрокаВариантаОтчета.Ключ, "ПрочиеИПользовательскиеВариантыОтчета");
		Иначе
			Если Найти(СтрокаВариантаОтчета.Подсистема, "СмТакже") > 0  тогда
				СтрокаВариантаОтчета.Группировка = "СмТакже";
			ИначеЕсли СтрокаВариантаОтчета.Подсистема = СтрокаВариантаОтчета.Подсистема тогда
				Для каждого ГруппировкаВараинта из ГруппировкиВариантов Цикл
					Если СтрокаВариантаОтчета.Подсистема = ГруппировкаВараинта.Ключ тогда
						СтрокаВариантаОтчета.Группировка = ГруппировкаВараинта.Ключ;
					КонецЕсли;
				КонецЦикла;
				СоответсвиеВариантовГруппировке.Вставить(СтрокаВариантаОтчета.Ключ, СтрокаВариантаОтчета.Подсистема);
			КонецЕсли;
		КонецЕсли;
		
		СоответсвиеВариантовНомеруСортировки.Вставить(СтрокаВариантаОтчета.Ключ, СтрокаВариантаОтчета.Сортировка);
	КонецЦикла;
	
	Для каждого СтрокаВарианта из ТаблицаВариантов Цикл
		Видимость = СтрокаВарианта.Видимость;
		СтрокиПользователи = ТаблицаПользователей.НайтиСтроки(Новый Структура("Ключ, Пользователь", СтрокаВарианта.Ключ, ПараметрыСеанса.ТекущийПользователь));
		Для каждого СтрокаПользователи из СтрокиПользователи Цикл
			Видимость = СтрокаПользователи.Видимость;
		КонецЦикла;
		ДобавитьВариантыОтчета(ГруппировкиВариантов, СтрокаВарианта.Ключ,  СтрокаВарианта.Представление, СтрокаВарианта.Описание, СтрокаВарианта.ТипВариантаОтчета, СтрокаВарианта.Группировка, Видимость, СтрокаВарианта.Администратор);
	КонецЦикла;
	
	Для каждого СтрокаГруппирвоки из СгруппированныйСписокВариантовОтчетов.Строки Цикл
		
		Если СтрокаГруппирвоки.Строки.Количество() > 0 тогда
			
			Если СтрокаГруппирвоки.ГруппировкаПредставление = "" тогда
				ЭлементыГруппы = ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы();
				ИмяГруппировки = СтрокаГруппирвоки.Группировка;
				ИмяГруппировки = СтрЗаменить(ИмяГруппировки, ".", "_Точка_");
				ИмяГруппировки = СтрЗаменить(ИмяГруппировки, "\", "_Слэш_");
				ИмяГруппировки = СтрЗаменить(ИмяГруппировки, "-", "_Тирэ_");
			Иначе
				ЭлементГруппирвоки = ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы().Добавить();
				ЭлементГруппирвоки.Название = СтрокаГруппирвоки.ГруппировкаПредставление;
				ЭлементыГруппы = ЭлементГруппирвоки.ПолучитьЭлементы();
				ИмяГруппировки = СтрокаГруппирвоки.Группировка;
				ИмяГруппировки = СтрЗаменить(ИмяГруппировки, ".", "_Точка_");
				ИмяГруппировки = СтрЗаменить(ИмяГруппировки, "\", "_Слэш_");
				ИмяГруппировки = СтрЗаменить(ИмяГруппировки, "-", "_Тирэ_");

			КонецЕсли;
			
			ИмяГруппировки = "_ГруппаРаздела_" + ИмяГруппировки;
			
			Для каждого СтрокаВарианта из СтрокаГруппирвоки.Строки Цикл
				
				ИмяОтчета =  СтрокаВарианта.Ключ;
				
				ПозицияВарианта = Найти(ИмяОтчета, "\");
				ИмяОтчета = Лев(ИмяОтчета, ПозицияВарианта-1);
				ИмяОтчета = СтрЗаменить(ИмяОтчета, "Отчет.", "");
				
				Отчет = Метаданные.Отчеты.Найти(ИмяОтчета);
				Если Отчет = Неопределено тогда
					Продолжить;
				КонецЕсли;
				
				ЕстьПравоПросмотра  = ПравоДоступа("Просмотр", Отчет);
				Если НЕ ЕстьПравоПросмотра тогда
					Продолжить;
				КонецЕсли;
				
				ПараметрыФО = Новый Структура("");
				
				ДоступенПоФоОпциям = ложь;
				СодержитсяВФО = ложь;
				Для каждого ФО из Метаданные.ФункциональныеОпции Цикл
					
					Если ФО.Состав.Найти(Отчет) = Неопределено тогда
						Продолжить;
					КонецЕсли;
					
					СодержитсяВФО = Истина;
					
					ЗначениеФО = ПолучитьФункциональнуюОпцию(ФО.Имя, ПараметрыФО);
					Если ТипЗнч(ЗначениеФО) = Тип("Булево") тогда
						Если ЗначениеФО тогда
							ДоступенПоФоОпциям = истина;
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				Если СодержитсяВФО И НЕ ДоступенПоФоОпциям тогда
					Продолжить;
				КонецЕсли;
				
				Элемент = ЭлементыГруппы.Добавить();
				Элемент.Использование       = СтрокаВарианта.Видимость;
				Элемент.Название            = СтрокаВарианта.Представление;
				Элемент.Описание            = СтрокаВарианта.Описание;
				Элемент.Автор               = СтрокаВарианта.Администратор;
				Элемент.Ключ		        = СтрокаВарианта.Ключ;
				Если Элемент.Использование тогда
					Элемент.Картинка = Закрепить;
				Иначе
					Элемент.Картинка = Открепить;
				КонецЕсли;
				
				Ключ = СтрокаВарианта.Ключ;
				Ключ = СтрЗаменить(Ключ, ".", "_Точка_");
				Ключ = СтрЗаменить(Ключ, "\", "_Слэш_");
				Ключ = СтрЗаменить(Ключ, "-", "_Тирэ_");
				Элемент.НазваниеЭлемента = Ключ + ИмяГруппировки;
				
				ЭлементСтроки = СписокНастройкиВидимостиВариантов.Добавить();
				ЭлементСтроки.Использование    = СтрокаВарианта.Видимость;
				ЭлементСтроки.Название         = СтрокаВарианта.Представление;
				ЭлементСтроки.Описание         = СтрокаВарианта.Описание;
				ЭлементСтроки.Автор            = СтрокаВарианта.Администратор;
				ЭлементСтроки.Ключ		       = СтрокаВарианта.Ключ;
				ЭлементСтроки.Идентификатор    = Элемент.ПолучитьИдентификатор();
				Элемент.Идентификатор          = ЭлементСтроки.ПолучитьИдентификатор();
				
				Если ЭлементСтроки.Использование тогда
					ЭлементСтроки.Картинка = Закрепить;
				Иначе
					ЭлементСтроки.Картинка = Открепить;
				КонецЕсли;
			
				Ключ = СтрокаВарианта.Ключ;
				Ключ = СтрЗаменить(Ключ, ".", "_Точка_");
				Ключ = СтрЗаменить(Ключ, "\", "_Слэш_");
				Ключ = СтрЗаменить(Ключ, "-", "_Тирэ_");
				Элемент.НазваниеЭлемента = Ключ + ИмяГруппировки;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	МассивНаУдаление = Новый Массив;
	
	Для каждого СтрокаГруппировки из ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы() Цикл
		Если СтрокаГруппировки.ПолучитьЭлементы().Количество() = 0 и СтрокаГруппировки.Ключ = "" тогда
			МассивНаУдаление.Добавить(СтрокаГруппировки);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаНаУдаление из МассивНаУдаление Цикл
		ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы().Удалить(СтрокаНаУдаление);
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПолучитьСписокОбъектовОтчетов(Массив,Подсистема)
	
	ДобавитьВСписокОтчетыПодсистемы(Массив, Подсистема);
	
	Для каждого ОбъектПодсистемы из Подсистема.Подсистемы Цикл
		ПолучитьСписокОбъектовОтчетов(Массив, ОбъектПодсистемы);
	КонецЦикла
	
КонецПроцедуры

Процедура ДобавитьВСписокОтчетыПодсистемы(Массив, Подсистема)
	
	Для каждого Объект из Подсистема.Состав Цикл
		ПолноеИмя = Объект.ПолноеИмя();
		Если Найти(ПолноеИмя, "Отчет.") = 0 
			или СписокОтчетов.НайтиПоЗначению(ПолноеИмя) = Неопределено 
			или Параметры.НеВыводить.НайтиПоЗначению(ПолноеИмя) <> Неопределено 
			тогда
			Продолжить;
		КонецЕсли;
		Массив.Добавить(ПолноеИмя);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВариантыОтчета(ГруппировкиВариантов, Ключ, Представление, Описание, ТипВарианта, ГруппировкаРаздела, Видимость, Администратор)
	
	Если ГруппировкаРаздела <> Неопределено тогда
		Если ГруппировкиВариантов[ГруппировкаРаздела].Строки.НайтиСтроки(Новый Структура("Ключ", Ключ)).Количество() > 0 тогда
			Возврат;
		КонецЕсли;
		СтрокаВариантаОтчета = ГруппировкиВариантов[ГруппировкаРаздела].Строки.Добавить();
	Иначе
		Если СтрокаФиксированнаяГруппировка.Строки.НайтиСтроки(Новый Структура("Ключ", Ключ)).Количество() > 0 тогда
			Возврат;
		КонецЕсли;
		СтрокаВариантаОтчета = СтрокаФиксированнаяГруппировка.Строки.Добавить();
	КонецЕсли;
	Если ТипВарианта = Перечисления.ТипыВариантовОтчетов.Отчет тогда
		СтрокаВариантаОтчета.Ключ          = Ключ+"_Отчет_";
	Иначе	
		СтрокаВариантаОтчета.Ключ          = Ключ;
	КонецЕсли;
	СтрокаВариантаОтчета.Представление = Представление;
	СтрокаВариантаОтчета.Описание      = Описание;
	СтрокаВариантаОтчета.Видимость     = Видимость;
	СтрокаВариантаОтчета.Администратор = Администратор;
	НомерСортировки                    = СоответсвиеВариантовНомеруСортировки[Ключ];
	СтрокаВариантаОтчета.Сортировка    = ?(НомерСортировки <> Неопределено, НомерСортировки, "ЯЯ9999999999999");
	
КонецПроцедуры                              

&НаКлиенте
Процедура ОтображениеВаринтовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.Использование тогда
		Элементы.ФормаИспользовать.Пометка       = Истина;
		Элементы.ФормаИспользоватьКП.Пометка     = Истина;
		Элементы.ФормаИспользоватьСписок.Пометка = Истина;
	Иначе
		Элементы.ФормаИспользовать.Пометка       = ложь;
		Элементы.ФормаИспользоватьКП.Пометка     = ложь;
		Элементы.ФормаИспользоватьСписок.Пометка = ложь;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.Ключ = "" тогда
		Элементы.ФормаИспользовать.Доступность       = ложь;
		Элементы.ФормаИспользоватьКП.Доступность     = ложь;
		Элементы.ФормаОткрыть.Доступность            = ложь;
		Элементы.ФормаОткрытьКП.Доступность          = ложь;
		Элементы.ФормаОткрытьСписок.Доступность      = ложь;
		Элементы.ФормаИспользоватьСписок.Доступность = ложь;
	Иначе
		Элементы.ФормаИспользовать.Доступность   	 = Истина;
		Элементы.ФормаИспользоватьКП.Доступность  	 = Истина;
		Элементы.ФормаОткрыть.Доступность        	 = Истина;
		Элементы.ФормаОткрытьКП.Доступность      	 = Истина;
		Элементы.ФормаОткрытьСписок.Доступность      = Истина;
		Элементы.ФормаИспользоватьСписок.Доступность = Истина;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные <> Неопределено тогда
		Ключ = Элемент.ТекущиеДанные.Ключ;
		Элементы.ОтображениеВаринтовСписок.ТекущаяСтрока = Элемент.ТекущиеДанные.Идентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Использовать(Команда)
	
	Если Элементы.ОтображениеВаринтов.ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	СписокКлючейВариантов = Новый СписокЗначений;
	Если Элементы.ОтображениеВаринтов.ВыделенныеСтроки.Количество() > 0 тогда
		Для каждого ИндексСтроки из Элементы.ОтображениеВаринтов.ВыделенныеСтроки Цикл
			ТекущиеДанные = ДеревоНастройкиВидимостиВариантов.НайтиПоИдентификатору(ИндексСтроки);
			Если СписокКлючейВариантов.НайтиПоЗначению(ТекущиеДанные.Ключ) = Неопределено тогда
				СписокКлючейВариантов.Добавить(ТекущиеДанные.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Элементы.ОтображениеВаринтовСписок.ВыделенныеСтроки.Количество() > 0 тогда 
		Для каждого ИндексСтроки из Элементы.ОтображениеВаринтовСписок.ВыделенныеСтроки Цикл
			ТекущиеДанные = СписокНастройкиВидимостиВариантов.НайтиПоИдентификатору(ИндексСтроки);
			Если СписокКлючейВариантов.НайтиПоЗначению(ТекущиеДанные.Ключ) = Неопределено тогда
				СписокКлючейВариантов.Добавить(ТекущиеДанные.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокКлючейВариантов.Количество() > 0 тогда
		
		Для каждого СтрокаДерева из ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы() Цикл
			
			Если СтрокаДерева.Ключ <> "" тогда
				Если СписокКлючейВариантов.НайтиПоЗначению(СтрокаДерева.Ключ) <> Неопределено тогда
					ТекущиеДанные = СтрокаДерева;
					ТекущиеДанные.Использование = НЕ Элементы.ФормаИспользоватьКП.Пометка;
					Если ТекущиеДанные.Использование тогда
						ТекущиеДанные.Картинка = Закрепить;
					Иначе
						ТекущиеДанные.Картинка = Открепить;
					КонецЕсли;
				КонецЕсли;
			Иначе
				УстановитьДоступностьПодчиненныхВариантов(СтрокаДерева, НЕ Элементы.ФормаИспользоватьКП.Пометка, СписокКлючейВариантов);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого СтрокаСписка из СписокНастройкиВидимостиВариантов Цикл
			Если СписокКлючейВариантов.НайтиПоЗначению(СтрокаСписка.Ключ) <> Неопределено тогда
				ТекущиеДанные = СтрокаСписка;
				ТекущиеДанные.Использование = НЕ Элементы.ФормаИспользоватьКП.Пометка;
				Если ТекущиеДанные.Использование тогда
					ТекущиеДанные.Картинка = Закрепить;
				Иначе
					ТекущиеДанные.Картинка = Открепить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.Использование тогда
		Элементы.ФормаИспользовать.Пометка       = Истина;
		Элементы.ФормаИспользоватьКП.Пометка     = Истина;
		Элементы.ФормаИспользоватьСписок.Пометка = Истина;
	Иначе
		Элементы.ФормаИспользовать.Пометка       = ложь;
		Элементы.ФормаИспользоватьКП.Пометка     = ложь;
		Элементы.ФормаИспользоватьСписок.Пометка = ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьПодчиненныхВариантов(СтрокаДерева, Использование, СписокКлючейВариантов)
	
	Для каждого ПодчиненнаяСтрокаДерева из СтрокаДерева.ПолучитьЭлементы() Цикл
		
		Если ПодчиненнаяСтрокаДерева.Ключ <> "" тогда
			Если СписокКлючейВариантов.НайтиПоЗначению(ПодчиненнаяСтрокаДерева.Ключ) <> Неопределено тогда
				ТекущиеДанные = ПодчиненнаяСтрокаДерева;
				ТекущиеДанные.Использование = Использование;
				Если ТекущиеДанные.Использование тогда
					ТекущиеДанные.Картинка = Закрепить;
				Иначе
					ТекущиеДанные.Картинка = Открепить;
				КонецЕсли;
			КонецЕсли;
		Иначе
			УстановитьДоступностьПодчиненныхВариантов(ПодчиненнаяСтрокаДерева, Использование, СписокКлючейВариантов);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчет(Команда)
	
	Ключ = Элементы.ОтображениеВаринтов.ТекущиеДанные.Ключ;
	
	Если СокрЛП(Ключ) = "" тогда
		Возврат;
	КонецЕсли;
	
	ПозицияВарианта = Найти(Ключ, "\");
	ИмяОтчета = Лев(Ключ, ПозицияВарианта-1);
	КлючВарианта = Прав(Ключ, СтрДлина(Ключ)-ПозицияВарианта);
	
	ПараметрыОтчета = Новый Структура("КлючВарианта", КлючВарианта);
	
	СтандартнаяОбработка = истина;
	
	ВариантыОтчетовКлиентПереопределяемый.ПередОткрытиемФормыОтчета(Ключ, ПараметрыОтчета, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка тогда
		ОткрытьФорму(ИмяОтчета + ".Форма", ПараметрыОтчета, Ключ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СписокКлючейВарианта      = Новый СписокЗначений;
	СписокЭлементовУправления = Новый СписокЗначений;
	
	Для каждого СтрокаГруппировки из ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы() Цикл
		Если СтрокаГруппировки.Ключ <> "" тогда
			КлючОбъекта     = СтрокаГруппировки.Ключ;
			ПозицияВарианта = Найти(КлючОбъекта, "\");
			ИмяОтчета       = Лев(КлючОбъекта, ПозицияВарианта-1);
			КлючВарианта    = Прав(КлючОбъекта, СтрДлина(КлючОбъекта)-ПозицияВарианта);
			СписокКлючейВарианта.Добавить(КлючОбъекта, , СтрокаГруппировки.Использование);
			СписокЭлементовУправления.Добавить(СтрокаГруппировки.НазваниеЭлемента, , СтрокаГруппировки.Использование);
		Иначе
			Для каждого ЭлементЗначение из СтрокаГруппировки.ПолучитьЭлементы() Цикл
				КлючОбъекта = ЭлементЗначение.Ключ;
				ПозицияВарианта = Найти(КлючОбъекта, "\");
				ИмяОтчета       = Лев(КлючОбъекта, ПозицияВарианта-1);
				КлючВарианта    = Прав(КлючОбъекта, СтрДлина(КлючОбъекта)-ПозицияВарианта);
				СписокКлючейВарианта.Добавить(КлючОбъекта, , ЭлементЗначение.Использование);
				СписокЭлементовУправления.Добавить(ЭлементЗначение.НазваниеЭлемента, , ЭлементЗначение.Использование);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ОповеститьОВыборе(Новый Структура("СписокВариантов, СписокЭлементов", СписокКлючейВарианта, СписокЭлементовУправления));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеВаринтовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Ключ = Элементы.ОтображениеВаринтов.ТекущиеДанные.Ключ;
	Если СокрЛП(Ключ) = "" тогда
		Возврат;
	КонецЕсли;
	
	ПозицияВарианта = Найти(Ключ, "\");
	ИмяОтчета = Лев(Ключ, ПозицияВарианта-1);
	КлючВарианта = Прав(Ключ, СтрДлина(Ключ)-ПозицияВарианта);
	
	ПараметрыОтчета = Новый Структура("КлючВарианта", КлючВарианта);
	
	СтандартнаяОбработка = истина;
	
	ВариантыОтчетовКлиентПереопределяемый.ПередОткрытиемФормыОтчета(Ключ, ПараметрыОтчета, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка тогда
		ОткрытьФорму(ИмяОтчета + ".Форма", ПараметрыОтчета, Ключ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Разделы(Команда)
	
	Если Элементы.ФормаРазделы.Пометка тогда
		Элементы.ФормаРазделы.Пометка = ложь;
		Элементы.ГруппаСтранициПредставаления.ТекущаяСтраница = Элементы.ГруппаСписок;
		Элементы.ФормаНайти.Доступность         = Истина;
		Элементы.ФормаОтменитьПоиск.Доступность = Истина;
		Элементы.ОтображениеВаринтовСписок.ОтборСтрок = Неопределено;
	Иначе
		Элементы.ФормаРазделы.Пометка = истина;
		Элементы.ГруппаСтранициПредставаления.ТекущаяСтраница = Элементы.ГруппаДерево;
		Элементы.ФормаНайти.Доступность         = Ложь;
		Элементы.ФормаОтменитьПоиск.Доступность = Ложь;
		Элементы.ОтображениеВаринтовСписок.ОтборСтрок = Новый ФиксированнаяСтруктура;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеВаринтовСписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено тогда
		Ключ = Элемент.ТекущиеДанные.Ключ;
		Элементы.ОтображениеВаринтов.ТекущаяСтрока = Элемент.ТекущиеДанные.Идентификатор;
	КонецЕсли;
	
КонецПроцедуры
