////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОЬЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Взаимодействия.ДобавитьСтраницыФормыПодбораКонтактов(ЭтаФорма);
	
	// Заполним переданную таблицу получателей
	ЗаполнитьТаблицуПолучателей();

	// Заполним контакты по предмету
	Предмет = Параметры.Предмет;
	Взаимодействия.ЗаполнитьКонтактыПоПредмету(Элементы, Предмет, КонтактыПоПредмету, Истина);
	
	// Получим информацию об индексе ППД
	Взаимодействия.ОбновитьИнформациюОбАктуальностиИндексаППД(ИнформацияОбАктуальностиИндексаППД, ППДВключен, ИндексАктуален);

	// Заполним список вариантов поиска и осуществим первый поиск
	ВсеСпискиПоиска = Взаимодействия.ПолучитьСписокДоступныхПоисков(ППДВключен, Параметры, Элементы, Истина);
	ВариантыПоиска = "ПоEmail";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеДоступностью();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//КОМАНДЫ ФОРМЫ 

// Передает владельцу в качестве результата работы формы массив структур содержащих 
// адреса выбранных получателей и закрывает форму. 
//
 &НаКлиенте
Процедура КомандаОКВыполнить()
	
	Результат = Новый Массив;
	
	Для Каждого Стр Из ПолучателиПисьма Цикл
		Группа = ?(ПустаяСтрока(Стр.Группа), "Кому", Стр.Группа);
		Контакт = Новый Структура("Адрес,Представление,Контакт, Группа", Стр.Адрес, Стр.Представление, Стр.Контакт, Группа);
		Результат.Добавить(Контакт); 
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

// Переносит текущий контакт из списка "Контакты по предмету" в список "Получетели письма". 
//
&НаКлиенте
Процедура ДобавитьИзСпискаПредметовВыполнить()

	ДобавитьПолучателяИзСпискаПоПредмету();

КонецПроцедуры

//Изменяет текущую группу получателей письма на группу "Кому". 
//
 &НаКлиенте
Процедура ИзменитьГруппуКомуВыполнить()

	ИзменитьГруппу("Кому");

КонецПроцедуры

//Изменяет текущую группу получателей письма на группу "Копии". 
// 
&НаКлиенте
Процедура ИзменитьГруппуКопииВыполнить()

	ИзменитьГруппу("Копии");

КонецПроцедуры 

//Изменяет текущую группу получателей письма на группу "Скрытые". 
// 
&НаКлиенте
Процедура ИзменитьГруппуСкрытыеВыполнить()

	ИзменитьГруппу("Скрытые");

КонецПроцедуры 

//Инициирует процесс поиска контактов. 
// 
&НаКлиенте
Процедура КомандаНайтиВыполнить()
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		Предупреждение(НСтр("ru = 'Не задана строка поиска!'"));
		Возврат;
	КонецЕсли;
	
	Результат = "";
	НайденныеКонтакты.Очистить();
	
	Если ВариантыПоиска = "ПоEmail" Тогда
		НайтиПоEmail(Ложь);
	ИначеЕсли ВариантыПоиска = "ПоДомену" Тогда
		НайтиПоEmail(Истина);
	ИначеЕсли ВариантыПоиска = "ПоСтроке" Тогда
		Результат = ОсуществитьПоискКонтактовПоСтроке();
	ИначеЕсли ВариантыПоиска = "НачинаетсяС" Тогда
		НайтиПоНачалуНаименования();
	КонецЕсли;
	
	Если Не ПустаяСтрока(Результат) Тогда
		Предупреждение(Результат);
	КонецЕсли;
	
КонецПроцедуры

//Обновляет индекс полнотекстового поиска. 
//
&НаКлиенте
Процедура КомандаОбновитьИндексППДВыполнить()
	
	ВзаимодействияКлиент.КомандаОбновитьИндексППДВыполнить(ИнформацияОбАктуальностиИндексаППД,ППДВключен,ИндексАктуален);
	УправлениеДоступностью();
	
КонецПроцедуры 

//Выполняет позиционирование в соответсвующем динамическом списке на текущем контакте из 
//списка "Найденные контакты". 
//
&НаКлиенте
Процедура НайтиВСпискеИзСпискаНайденныхВыполнить()
	
	текДанные = Элементы.НайденныеКонтакты.ТекущиеДанные;
	Если текДанные <> Неопределено И ЗначениеЗаполнено(текДанные.Ссылка) Тогда
		УстановитьТекущимКонтакт(текДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры 

//Выполняет позиционирование в соответсвующем динамическом списке на текущем контакте
//из списка "Получатели письма" . 
//
&НаКлиенте
Процедура НайтиВСпискеИзСпискаПолучателейВыполнить()
	
	текДанные = Элементы.ПолучателиПисьма.ТекущиеДанные;
	Если текДанные <> Неопределено И ЗначениеЗаполнено(текДанные.Контакт) Тогда
		УстановитьТекущимКонтакт(текДанные.Контакт);
	КонецЕсли;
	
КонецПроцедуры 

//Выполняет позиционирование в соответсвующем динамическом списке на текущем контакте
//из списка "Контакты по предмету" . 
//
 &НаКлиенте
Процедура НайтиВСпискеИзСпискаПредметовВыполнить()
	
	текДанные = Элементы.КонтактыПоПредмету.ТекущиеДанные;
	Если текДанные <> Неопределено Тогда
		УстановитьТекущимКонтакт(текДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры 

//Инициирует поиск контактов по адресу электронной почты текущей строки списка "Получатели письма". 
//
  &НаКлиенте
Процедура НайтиПоАдресуВыполнить()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ПоискКонтактов;
	НайденныеКонтакты.Очистить();
	ВариантыПоиска = "ПоEmail";

	текДанные = Элементы.ПолучателиПисьма.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СтрокаПоиска = текДанные.Адрес;
	Если Не ПустаяСтрока(СтрокаПоиска) Тогда
		НайтиПоEmail(Ложь);
	КонецЕсли;

КонецПроцедуры

//Инициирует поиск контактов по представлению текущей строки списка "Получатели письма". 
//
&НаКлиенте
Процедура НайтиПоПредставлениюВыполнить()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ПоискКонтактов;
	НайденныеКонтакты.Очистить();
	ВариантыПоиска = "ПоСтроке";

	текДанные = Элементы.ПолучателиПисьма.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПоиска = текДанные.Представление;
	Если Не ПустаяСтрока(СтрокаПоиска) Тогда
		Результат = ОсуществитьПоискКонтактовПоСтроке();
		Если Не ПустаяСтрока(Результат) Тогда
			Предупреждение(Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

 //Осуществляет поиск всех адресов электронной почты контакта из списка "Получатели письма" и
 //предлагает пользователю сделать выбор, если у контакта более одного адреса электронной почты.
&НаКлиенте
Процедура УстановитьАдресКонтактаВыполнить()
	
	текДанные = Элементы.ПолучателиПисьма.ТекущиеДанные;
	Если текДанные = Неопределено ИЛИ Не ЗначениеЗаполнено(текДанные.Контакт) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Взаимодействия.ПолучитьАдресаЭлектроннойПочтыКонтакта(текДанные.Контакт);
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Если Результат.Количество() = 1 Тогда
		Адрес = Результат[0].АдресЭП;
		Представление = Результат[0].Представление;
	Иначе
		спсВыбора = Новый СписокЗначений;
		Номер = 0;
		Для Каждого Элемент Из Результат Цикл
			спсВыбора.Добавить(Номер, Элемент.ВидНаименование + ": " + Элемент.АдресЭП);
			Номер = Номер + 1;
		КонецЦикла;
		
		выбрЭлемент = спсВыбора.ВыбратьЭлемент();
		Если выбрЭлемент = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Индекс = выбрЭлемент.Значение;
		Адрес = Результат[Индекс].АдресЭП;
		Представление = Результат[Индекс].Представление;
	КонецЕсли;

	Поз = Найти(Представление, "<");
	Представление = ?(Поз = 0, "", СокрЛП(Лев(Представление, Поз-1)));

	текДанные.Адрес = Адрес;
	Если Не ПустаяСтрока(Представление) Тогда
		текДанные.Представление = Представление;
	КонецЕсли;

КонецПроцедуры  

//Выполняет позиционирование в соответсвующем динамическом списке на текущем контакте
//из списка "Контакты по предмету" . 
//
&НаКлиенте
Процедура УстановитьКонтактИзСпискаПредметовВыполнить()
	
	текДанные = Элементы.КонтактыПоПредмету.ТекущиеДанные;
	Если текДанные <> Неопределено Тогда
		УстановитьКонтактВСпискеПолучателей(текДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОЬЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
  
&НаКлиенте
Процедура КонтактНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	текДанные = Элементы.ПолучателиПисьма.ТекущиеДанные;
    Если ВзаимодействияКлиент.ВыбратьКонтакт(Предмет, текДанные.Адрес, текДанные.Представление, текДанные.Контакт, Истина, Ложь, Истина) Тогда
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПисьмаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Группа = "Кому";
	КонецЕсли;
	
КонецПроцедуры
  
 &НаКлиенте
Процедура КонтактыПоПредметуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ДобавитьПолучателяИзСпискаПоПредмету();

КонецПроцедуры

&НаКлиенте
Процедура СписокСправочникаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
		Возврат;
	КонецЕсли;	
	
	Результат = Взаимодействия.ПолучитьНаименованиеИАдресаЭлектроннойПочтыКонтакта(ВыбраннаяСтрока);
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Количество = Результат.Адреса.Количество();
	Адрес = "";
	
	Если Количество = 1 Тогда
		Адрес = Результат.Адреса.Получить(0).Значение;
	ИначеЕсли Количество > 1 Тогда
		выбрЭлемент = Результат.Адреса.ВыбратьЭлемент();
		Если выбрЭлемент = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Адрес = выбрЭлемент.Значение;
	КонецЕсли;
	
	ДобавитьПолучателя(Адрес, Результат.Наименование, ВыбраннаяСтрока);
	
КонецПроцедуры

//Универсальный обработчик активизации строки динамического списка, у которого есть подчинненные списки.
&НаКлиенте
Процедура Подключаемый_СписокВладелецПриАктивизацииСтроки(Элемент)
	
    ВзаимодействияКлиент.КонтактВладелецПриАктивизацииСтроки(Элемент,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НайденныеКонтактыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	текДанные = Элементы.НайденныеКонтакты.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьПолучателя(текДанные.Представление, текДанные.НаименованиеКонтакта, текДанные.Ссылка);	
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОСУЩЕСТВЛЕНИЯ ПОИСКА

// Осуществляет поиск контактов по доменному имени или по адресу электронной почты.
// 
&НаСервере
Функция НайтиПоEmail(ПоДомену)
	
	Возврат Взаимодействия.НайтиПоEmail(СтрокаПоиска,ПоДомену,ЭтаФорма);
	
КонецФункции

// Осуществляет поиск контактов по строке
// 
&НаСервере
Функция ОсуществитьПоискКонтактовПоСтроке()
	
	Возврат Взаимодействия.ОсуществитьПоискКонтактовПоСтроке(ЭтаФорма,Истина);	
	
КонецФункции

// Осуществляет поиск контактов по началу наименования
//
&НаСервере
Функция НайтиПоНачалуНаименования()
	
	Возврат Взаимодействия.ПолучитьВсеКонтактыПоНачалуНаименованияСАдресамиЭлектроннойПочты(СтрокаПоиска,ЭтаФорма);
			
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ЗаполнитьТаблицуПолучателей()
	
	табПолучатели = РеквизитФормыВЗначение("ПолучателиПисьма");
	
	Для Каждого ГруппаВыбранных Из Параметры.СписокВыбранных Цикл
		Если ГруппаВыбранных.Значение <> Неопределено Тогда
			Для Каждого Элемент Из ГруппаВыбранных.Значение Цикл
				новСтр = табПолучатели.Добавить();
				новСтр.Группа = ГруппаВыбранных.Представление;
				ЗаполнитьЗначенияСвойств(новСтр, Элемент);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	табПолучатели.Сортировать("Группа");
	
	ЗначениеВРеквизитФормы(табПолучатели, "ПолучателиПисьма");
	
КонецПроцедуры

// Добавляет строку в таблицу "Получатели письма" и заполняет ее согласно переданным параметрам.
//
// Параметры
//  Адрес  			- Строка - адрес электронной почты.
//  Наименование 	- Строка - Представление адресата.
//  Контакт         - СправочникСсылка - контакт получатель.
//
&НаКлиенте
Процедура ДобавитьПолучателя(Адрес, Наименование, Контакт)
	
	новСтр = ПолучателиПисьма.Добавить();
	новСтр.Адрес         = Адрес;
	новСтр.Представление = Наименование;
	новСтр.Контакт       = Контакт;
	новСтр.Группа        = "Кому";
	
КонецПроцедуры

// Добавляет в таблицу получателей письма выбранную строку из списка "Контакты по предмету"
//
&НаКлиенте
Процедура ДобавитьПолучателяИзСпискаПоПредмету()
	
	текДанные = Элементы.КонтактыПоПредмету.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьПолучателя(текДанные.Адрес, текДанные.Наименование, текДанные.Ссылка)
	
КонецПроцедуры

// Позиционируется на заданном контакте в списке получателей письма
//
// Параметры
//  Контакт  - СправочникСсылка - контакт, на котором необходимо спозиционироватся.
//
&НаКлиенте
Процедура УстановитьКонтактВСпискеПолучателей(Контакт)
	
	Если ЗначениеЗаполнено(Контакт) И Элементы.ПолучателиПисьма.ТекущиеДанные <> Неопределено Тогда
		Элементы.ПолучателиПисьма.ТекущиеДанные.Контакт = Контакт;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает текущим контакт в соответствующем динамическом списке.
//
// Параметры
//  Контакт  - СправочникСсылка - контакт, на котором необходимо спозиционироватся.
//
&НаСервере
Процедура УстановитьТекущимКонтакт(Контакт)
	
	Взаимодействия.УстановитьТекущимКонтакт(Контакт,ЭтаФорма);
	
КонецПроцедуры

// Изменяет группу получателей письма.
//
// Параметры
//  ИмяГруппы  - Строка - имя группы, которое будет установлено выделенным получателям письма.
// 
&НаКлиенте
Процедура ИзменитьГруппу(ИмяГруппы)
	
	Для Каждого Стр Из Элементы.ПолучателиПисьма.ВыделенныеСтроки Цикл
		Элемент = ПолучателиПисьма.НайтиПоИдентификатору(Стр);
		Элемент.Группа = ИмяГруппы;
	КонецЦикла;
	
КонецПроцедуры

// Управляет доступностью элементов формы
&НаКлиенте
Процедура УправлениеДоступностью()

	Элементы.КомандаОбновитьИндексППД.Доступность = Не ИндексАктуален;

КонецПроцедуры 

